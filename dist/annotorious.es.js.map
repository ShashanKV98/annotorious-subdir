{"version":3,"file":"annotorious.es.js","sources":["../node_modules/svelte/src/runtime/internal/utils.js","../node_modules/svelte/src/runtime/internal/dom.js","../node_modules/svelte/src/runtime/internal/lifecycle.js","../node_modules/svelte/src/runtime/internal/scheduler.js","../node_modules/svelte/src/runtime/internal/transitions.js","../node_modules/svelte/src/runtime/internal/each.js","../node_modules/svelte/src/runtime/internal/Component.js","../node_modules/svelte/src/shared/version.js","../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../src/model/core/Shape.ts","../src/model/core/shapeUtils.ts","../src/model/core/ellipse/ellipseUtils.ts","../src/model/core/polygon/polygonUtils.ts","../src/model/core/rectangle/rectangleUtils.ts","../src/model/w3c/fragment/FragmentSelector.ts","../src/model/w3c/svg/SVG.ts","../src/model/w3c/svg/SVGSelector.ts","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/@annotorious/core/dist/annotorious-core.es.js","../src/model/w3c/W3CImageFormatAdapter.ts","../src/annotation/editors/polygon/PolygonEditor.svelte","../src/annotation/editors/rectangle/RectangleEditor.svelte","../src/annotation/editors/ellipse/EllipseEditor.svelte","../src/annotation/editors/editorsRegistry.ts","../src/annotation/editors/Handle.ts","../src/annotation/editors/Editor.svelte","../src/annotation/utils/styling.ts","../src/annotation/editors/EditorMount.svelte","../src/annotation/tools/ToolMount.svelte","../src/annotation/tools/rectangle/RubberbandRectangle.svelte","../src/annotation/utils/math.ts","../node_modules/svelte/src/runtime/store/index.js","../src/annotation/utils/responsive.ts","../src/annotation/utils/touch.ts","../src/annotation/tools/polygon/RubberbandPolygon.svelte","../src/annotation/tools/ellipse/RubberbandEllipse.svelte","../src/annotation/tools/drawingToolsRegistry.ts","../src/annotation/shapes/Ellipse.svelte","../src/annotation/shapes/Polygon.svelte","../src/annotation/shapes/Rectangle.svelte","../src/annotation/Transform.ts","../src/annotation/SVGAnnotationLayerPointerEvent.ts","../src/annotation/SVGAnnotationLayer.svelte","../node_modules/quickselect/index.js","../node_modules/rbush/index.js","../src/state/spatialTree.ts","../src/state/ImageAnnotatorState.ts","../src/themes/smart/setTheme.ts","../src/AnnotoriousOpts.ts","../src/keyboardCommands.ts","../src/Annotorious.ts"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.8';\nexport const PUBLIC_VERSION = '4';\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","import type { AbstractSelector } from '@annotorious/core';\r\n\r\nexport interface Shape extends AbstractSelector {\r\n\r\n  type: ShapeType;\r\n\r\n  geometry: Geometry;\r\n\r\n}\r\n\r\nexport enum ShapeType {\r\n\r\n  ELLIPSE = 'ELLIPSE',\r\n\r\n  POLYGON = 'POLYGON',\r\n\r\n  RECTANGLE = 'RECTANGLE',\r\n\r\n  FREEHAND = 'FREEHAND',\r\n\r\n}\r\n\r\nexport interface Geometry {\r\n\r\n  bounds: Bounds;\r\n\r\n}\r\n\r\nexport interface Bounds {\r\n\r\n  minX: number;\r\n\r\n  minY: number;\r\n\r\n  maxX: number;\r\n\r\n  maxY: number;\r\n\r\n}\r\n","import type { Bounds, Shape, ShapeType } from './Shape';\r\n\r\nexport interface ShapeUtil<T extends Shape> {\r\n\r\n  area: (shape: T) => number;\r\n\r\n  intersects: (shape: T, x: number, y: number) => boolean;\r\n\r\n}\r\n\r\nconst Utils: { [key: string]: ShapeUtil<any> } = {};\r\n\r\n/**\r\n * Registers a new ShapeUtil for a given shape type.\r\n * @param type the shape type\r\n * @param util the ShapeUtil implementation for this shape type\r\n */\r\nexport const registerShapeUtil = (type: ShapeType | string, util: ShapeUtil<any>) =>\r\n  (Utils[type] = util);\r\n\r\n/**\r\n * Computes the area of the given shape. Delegates to the corresponding ShapeUtil.\r\n * @param shape the shape\r\n */\r\nexport const computeArea = (shape: Shape) => Utils[shape.type].area(shape);\r\n\r\n/**\r\n * Tests if the given shape intersects the given point. Delegates to\r\n * the corresponding ShapeUtil.\r\n * @param shape the shape\r\n * @param x point x coord\r\n * @param y point y coord\r\n * @returns true if shape and point intersect\r\n */\r\nexport const intersects = (shape: Shape, x: number, y: number): boolean =>\r\n  Utils[shape.type].intersects(shape, x, y);\r\n\r\n/**\r\n * Computes Bounds from a given list of points.\r\n * @param points the points\r\n * @returns the Bounds\r\n */\r\nexport const boundsFromPoints = (points: Array<[number, number]>): Bounds => {\r\n  let minX = Infinity;\r\n  let minY = Infinity;\r\n  let maxX = -Infinity;\r\n  let maxY = -Infinity;\r\n\r\n  points.forEach(([x, y]) => {\r\n    minX = Math.min(minX, x);\r\n    minY = Math.min(minY, y);\r\n    maxX = Math.max(maxX, x);\r\n    maxY = Math.max(maxY, y);\r\n  });\r\n\r\n  return { minX, minY, maxX, maxY };\r\n};","import { ShapeType } from '../Shape';\r\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils';\r\nimport type { Ellipse } from './Ellipse';\r\n\r\nconst EllipseUtil: ShapeUtil<Ellipse> = {\r\n\r\n  area: (e: Ellipse): number => Math.PI * e.geometry.rx * e.geometry.ry,\r\n\r\n  intersects: (e: Ellipse, x: number, y: number): boolean => {\r\n    const { cx, cy, rx, ry } = e.geometry;\r\n\r\n    // For future use\r\n    const rot = 0;\r\n\r\n    const cos = Math.cos(rot);\r\n    const sin = Math.sin(rot);\r\n  \r\n    const dx  = x - cx;\r\n    const dy  = y - cy;\r\n  \r\n    const tdx = cos * dx + sin * dy;\r\n    const tdy = sin * dx - cos * dy;\r\n  \r\n    return (tdx * tdx) / (rx * rx) + (tdy * tdy) / (ry * ry) <= 1;\r\n  }\r\n};\r\n\r\nregisterShapeUtil(ShapeType.ELLIPSE, EllipseUtil);","import { ShapeType } from '../Shape';\r\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils';\r\nimport type { Polygon } from './Polygon';\r\n\r\nconst PolygonUtil: ShapeUtil<Polygon> = {\r\n\r\n  area: (polygon: Polygon): number => {\r\n    const { points } = polygon.geometry;\r\n\r\n    let area = 0;\r\n    let j = points.length - 1;\r\n\r\n    for (let i = 0; i < points.length; i++) {\r\n      area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1]);\r\n      j = i;\r\n    }\r\n\r\n    return Math.abs(0.5 * area);\r\n  },\r\n\r\n  intersects: (polygon: Polygon, x: number, y: number): boolean => {\r\n    // Based on https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html/pnpoly.html\r\n    const { points } = polygon.geometry;\r\n\r\n    let inside = false;\r\n\r\n    for (let i = 0, j = points.length - 1; i < points.length; j = i++) {\r\n      const xi = points[i][0],\r\n        yi = points[i][1];\r\n      const xj = points[j][0],\r\n        yj = points[j][1];\r\n\r\n      const intersect = yi > y != yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\r\n\r\n      if (intersect) inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n  }\r\n  \r\n};\r\n\r\nregisterShapeUtil(ShapeType.POLYGON, PolygonUtil);","import { ShapeType } from '../Shape';\r\nimport type { Rectangle } from './Rectangle';\r\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils';\r\n\r\nexport const RectangleUtil: ShapeUtil<Rectangle> = {\r\n\r\n  area: (rect: Rectangle): number => rect.geometry.w * rect.geometry.h,\r\n\r\n  intersects: (rect: Rectangle, x: number, y: number): boolean =>\r\n    x >= rect.geometry.x &&\r\n    x <= rect.geometry.x + rect.geometry.w &&\r\n    y >= rect.geometry.y &&\r\n    y <= rect.geometry.y + rect.geometry.h\r\n    \r\n};\r\n\r\nregisterShapeUtil(ShapeType.RECTANGLE, RectangleUtil);","import type { W3CSelector } from '@annotorious/core';\r\nimport { ShapeType } from '../../core';\r\nimport type { Rectangle, RectangleGeometry } from '../../core';\r\n\r\nexport interface FragmentSelector extends W3CSelector {\r\n\r\n  type: 'FragmentSelector';\r\n\r\n  conformsTo: 'http://www.w3.org/TR/media-frags/',\r\n\r\n  value: string;\r\n  \r\n}\r\n\r\nexport const parseFragmentSelector = (\r\n  fragmentOrSelector: FragmentSelector | string,\r\n  invertY = false\r\n): Rectangle => {\r\n\r\n  const fragment =\r\n    typeof fragmentOrSelector === 'string' ? fragmentOrSelector : fragmentOrSelector.value;\r\n\r\n  const regex = /^(xywh)=(pixel|percent)?:?(.+?),(.+?),(.+?),(.+)*/g;\r\n\r\n  const matches = [...fragment.matchAll(regex)][0];\r\n  const [_, prefix, unit, a, b, c, d] = matches;\r\n\r\n  if (prefix !== 'xywh') throw new Error('Unsupported MediaFragment: ' + fragment);\r\n\r\n  if (unit && unit !== 'pixel') throw new Error(`Unsupported MediaFragment unit: ${unit}`);\r\n\r\n  const [x, y, w, h] = [a, b, c, d].map(parseFloat);\r\n\r\n  return {\r\n    type: ShapeType.RECTANGLE,\r\n    geometry: {\r\n      x,\r\n      y,\r\n      w,\r\n      h,\r\n      bounds: {\r\n        minX: x,\r\n        minY: invertY ? y - h : y,\r\n        maxX: x + w,\r\n        maxY: invertY ? y : y + h\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const serializeFragmentSelector = (geometry: RectangleGeometry): FragmentSelector => {\r\n  const { x, y, w, h } = geometry;\r\n  \r\n  return {\r\n    type: 'FragmentSelector',\r\n    conformsTo: 'http://www.w3.org/TR/media-frags/',\r\n    value: `xywh=pixel:${x},${y},${w},${h}`\r\n  };\r\n};","export const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\r\n\r\nexport const sanitize = (doc: Element | Document) => {\r\n  // Cf. https://github.com/mattkrick/sanitize-svg#readme  \r\n  // for the basic approach\r\n  const cleanEl = (el: Element) => {\r\n    Array.from(el.attributes).forEach(attr => {\r\n      if (attr.name.startsWith('on'))\r\n        el.removeAttribute(attr.name)\r\n    });\r\n  }\r\n\r\n  // Remove script tags\r\n  const scripts = doc.getElementsByTagName('script');\r\n\r\n  Array.from(scripts).reverse().forEach(el =>\r\n    el.parentNode.removeChild(el));\r\n\r\n  Array.from(doc.querySelectorAll('*')).forEach(cleanEl);\r\n\r\n  return doc;\r\n}\r\n\r\n/** Helper that forces an un-namespaced node to SVG **/\r\nexport const insertSVGNamespace = (originalDoc: Document): Element => {\r\n  // Serialize and parse for the namespace to take effect on every node\r\n  const serializer = new XMLSerializer();\r\n  const str = serializer.serializeToString(originalDoc.documentElement);\r\n\r\n  // Doesn't seem that there's a clean cross-browser way for this...\r\n  const namespaced = str.replace('<svg>', `<svg xmlns=\"${SVG_NAMESPACE}\">`);\r\n\r\n  const parser = new DOMParser();\r\n  const namespacedDoc = parser.parseFromString(namespaced, \"image/svg+xml\");\r\n  return namespacedDoc.documentElement;\r\n}\r\n","import type { W3CSelector } from '@annotorious/core';\r\nimport { boundsFromPoints, ShapeType } from '../../core';\r\nimport type { Ellipse, EllipseGeometry, Polygon, PolygonGeometry, Shape } from '../../core';\r\nimport { SVG_NAMESPACE, insertSVGNamespace, sanitize } from './SVG';\r\n\r\nexport interface SVGSelector extends W3CSelector {\r\n\r\n  type: 'SvgSelector';\r\n\r\n  value: string;\r\n  \r\n}\r\n\r\nconst parseSVGXML = (value: string): Element => {\r\n  const parser = new DOMParser();\r\n\r\n  const doc = parser.parseFromString(value, \"image/svg+xml\");\r\n\r\n  // SVG needs a namespace declaration - check if it's set or insert if not\r\n  const isPrefixDeclared = doc.lookupPrefix(SVG_NAMESPACE); // SVG declared via prefix\r\n  const isDefaultNamespaceSVG = doc.lookupNamespaceURI(null); // SVG declared as default namespace\r\n\r\n  if (isPrefixDeclared || isDefaultNamespaceSVG) {\r\n    return sanitize(doc).firstChild as Element;\r\n  } else {\r\n    return sanitize(insertSVGNamespace(doc)).firstChild as Element;\r\n  }\r\n}\r\n\r\nconst parseSVGPolygon = (value: string): Polygon => {\r\n  const [a, b, str] = value.match(/(<polygon points=[\"|'])([^(\"|')]*)/) || [];\r\n\r\n  if (!str) return;\r\n\r\n  const points = str.split(' ').map((p) => p.split(',').map(parseFloat));\r\n\r\n  return {\r\n    type: ShapeType.POLYGON,\r\n    geometry: {\r\n      points,\r\n      bounds: boundsFromPoints(points as [number, number][])\r\n    }\r\n  };\r\n}\r\n\r\nconst parseSVGEllipse = (value: string): Ellipse => {\r\n  const doc = parseSVGXML(value);\r\n\r\n  const cx = parseFloat(doc.getAttribute('cx'));\r\n  const cy = parseFloat(doc.getAttribute('cy'));\r\n  const rx = parseFloat(doc.getAttribute('rx'));\r\n  const ry = parseFloat(doc.getAttribute('ry'));\r\n\r\n  const bounds = {\r\n    minX: cx - rx,\r\n    minY: cy - ry,\r\n    maxX: cx + rx,\r\n    maxY: cy + ry\r\n  };\r\n\r\n  return {\r\n    type: ShapeType.ELLIPSE,\r\n    geometry: {\r\n      cx,\r\n      cy,\r\n      rx,\r\n      ry,\r\n      bounds\r\n    }\r\n  };\r\n}\r\n\r\nexport const parseSVGSelector = <T extends Shape>(valueOrSelector: SVGSelector | string): T => {\r\n  const value = typeof valueOrSelector === 'string' ? valueOrSelector : valueOrSelector.value;\r\n\r\n  if (value.includes('<polygon points='))\r\n    return parseSVGPolygon(value) as unknown as T;\r\n  else if (value.includes('<ellipse ')) \r\n    return parseSVGEllipse(value) as unknown as T;\r\n}\r\n\r\nexport const serializeSVGSelector = (shape: Shape): SVGSelector => {\r\n  let value: string;\r\n\r\n  if (shape.type === ShapeType.POLYGON) {\r\n    const geom = shape.geometry as PolygonGeometry;\r\n    const { points } = geom;\r\n    value = `<svg><polygon points=\"${points.map((xy) => xy.join(',')).join(' ')}\" /></svg>`;\r\n  } else if (shape.type === ShapeType.ELLIPSE) {\r\n    const geom = shape.geometry as EllipseGeometry;\r\n    value = `<svg><ellipse cx=\"${geom.cx}\" cy=\"${geom.cy}\" rx=\"${geom.rx}\" ry=\"${geom.ry}\" /></svg>`\r\n  }\r\n\r\n  if (value) {\r\n    return { type: 'SvgSelector', value };\r\n  } else {\r\n    throw `Unsupported shape type: ${shape.type}`;\r\n  }\r\n}\r\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","var Y = Object.prototype.hasOwnProperty;\nfunction B(e, n) {\n  var t, o;\n  if (e === n)\n    return !0;\n  if (e && n && (t = e.constructor) === n.constructor) {\n    if (t === Date)\n      return e.getTime() === n.getTime();\n    if (t === RegExp)\n      return e.toString() === n.toString();\n    if (t === Array) {\n      if ((o = e.length) === n.length)\n        for (; o-- && B(e[o], n[o]); )\n          ;\n      return o === -1;\n    }\n    if (!t || typeof e == \"object\") {\n      o = 0;\n      for (t in e)\n        if (Y.call(e, t) && ++o && !Y.call(n, t) || !(t in n) || !B(e[t], n[t]))\n          return !1;\n      return Object.keys(n).length === o;\n    }\n  }\n  return e !== e && n !== n;\n}\nfunction $() {\n}\nfunction W(e, n) {\n  return e != e ? n == n : e !== n || e && typeof e == \"object\" || typeof e == \"function\";\n}\nconst k = [];\nfunction _(e, n = $) {\n  let t;\n  const o = /* @__PURE__ */ new Set();\n  function i(b) {\n    if (W(e, b) && (e = b, t)) {\n      const w = !k.length;\n      for (const u of o)\n        u[1](), k.push(u, e);\n      if (w) {\n        for (let u = 0; u < k.length; u += 2)\n          k[u][0](k[u + 1]);\n        k.length = 0;\n      }\n    }\n  }\n  function h(b) {\n    i(b(e));\n  }\n  function U(b, w = $) {\n    const u = [b, w];\n    return o.add(u), o.size === 1 && (t = n(i) || $), b(e), () => {\n      o.delete(u), o.size === 0 && t && (t(), t = null);\n    };\n  }\n  return { set: i, update: h, subscribe: U };\n}\nconst be = (e) => {\n  const { subscribe: n, set: t } = _(null);\n  let o = null;\n  return n((i) => o = i), e.observe(({ changes: i }) => {\n    if (o) {\n      i.deleted.some((b) => b.id === o) && t(null);\n      const U = i.updated.find(({ oldValue: b }) => b.id === o);\n      U && t(U.newValue.id);\n    }\n  }), {\n    get current() {\n      return o;\n    },\n    subscribe: n,\n    set: t\n  };\n};\nvar q = /* @__PURE__ */ ((e) => (e.EDIT = \"EDIT\", e.SELECT = \"SELECT\", e.NONE = \"NONE\", e))(q || {});\nconst V = { selected: [] }, ve = (e, n = \"EDIT\") => {\n  const { subscribe: t, set: o } = _(V);\n  let i = V;\n  t((s) => i = s);\n  const h = () => o(V), U = () => {\n    var s;\n    return ((s = i.selected) == null ? void 0 : s.length) === 0;\n  }, b = (s) => {\n    if (i.selected.length === 0)\n      return !1;\n    const f = typeof s == \"string\" ? s : s.id;\n    return i.selected.some((y) => y.id === f);\n  }, w = (s, f) => {\n    const y = e.getAnnotation(s);\n    if (y) {\n      const A = G(y, n);\n      o(A === \"EDIT\" ? { selected: [{ id: s, editable: !0 }], pointerEvent: f } : A === \"SELECT\" ? { selected: [{ id: s }], pointerEvent: f } : { selected: [], pointerEvent: f });\n    } else\n      console.warn(\"Invalid selection: \" + s);\n  }, u = (s, f = !0) => {\n    const y = Array.isArray(s) ? s : [s], A = y.map((L) => e.getAnnotation(L)).filter((L) => L);\n    o({ selected: A.map(({ id: L }) => ({ id: L, editable: f })) }), A.length !== y.length && console.warn(\"Invalid selection\", s);\n  }, T = (s) => {\n    if (i.selected.length === 0)\n      return !1;\n    const { selected: f } = i;\n    f.filter(({ id: A }) => s.includes(A)).length > 0 && o({ selected: f.filter(({ id: A }) => !s.includes(A)) });\n  };\n  return e.observe(({ changes: s }) => T(s.deleted.map((f) => f.id))), {\n    clear: h,\n    clickSelect: w,\n    get selected() {\n      return i ? [...i.selected] : null;\n    },\n    get pointerEvent() {\n      return i ? i.pointerEvent : null;\n    },\n    isEmpty: U,\n    isSelected: b,\n    setSelected: u,\n    subscribe: t\n  };\n}, G = (e, n) => typeof n == \"function\" ? n(e) || \"EDIT\" : n || \"EDIT\";\nlet z;\nconst H = new Uint8Array(16);\nfunction F() {\n  if (!z && (z = typeof crypto < \"u\" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto), !z))\n    throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");\n  return z(H);\n}\nconst R = [];\nfor (let e = 0; e < 256; ++e)\n  R.push((e + 256).toString(16).slice(1));\nfunction J(e, n = 0) {\n  return R[e[n + 0]] + R[e[n + 1]] + R[e[n + 2]] + R[e[n + 3]] + \"-\" + R[e[n + 4]] + R[e[n + 5]] + \"-\" + R[e[n + 6]] + R[e[n + 7]] + \"-\" + R[e[n + 8]] + R[e[n + 9]] + \"-\" + R[e[n + 10]] + R[e[n + 11]] + R[e[n + 12]] + R[e[n + 13]] + R[e[n + 14]] + R[e[n + 15]];\n}\nconst Q = typeof crypto < \"u\" && crypto.randomUUID && crypto.randomUUID.bind(crypto), j = {\n  randomUUID: Q\n};\nfunction X(e, n, t) {\n  if (j.randomUUID && !n && !e)\n    return j.randomUUID();\n  e = e || {};\n  const o = e.random || (e.rng || F)();\n  if (o[6] = o[6] & 15 | 64, o[8] = o[8] & 63 | 128, n) {\n    t = t || 0;\n    for (let i = 0; i < 16; ++i)\n      n[t + i] = o[i];\n    return n;\n  }\n  return J(o);\n}\nconst Ce = (e) => {\n  const { creator: n, updatedBy: t } = e.target, o = e.bodies.reduce((i, h) => [...i, h.creator, h.updatedBy], []);\n  return [\n    n,\n    t,\n    ...o\n  ].filter((i) => i);\n}, we = (e, n, t, o) => ({\n  id: X(),\n  annotation: e.id,\n  created: t || /* @__PURE__ */ new Date(),\n  creator: o,\n  ...n\n}), Z = (e, n) => {\n  const t = new Set(e.bodies.map((o) => o.id));\n  return n.bodies.filter((o) => !t.has(o.id));\n}, K = (e, n) => {\n  const t = new Set(n.bodies.map((o) => o.id));\n  return e.bodies.filter((o) => !t.has(o.id));\n}, ee = (e, n) => n.bodies.map((t) => {\n  const o = e.bodies.find((i) => i.id === t.id);\n  return { newBody: t, oldBody: o && !B(o, t) ? o : void 0 };\n}).filter(({ oldBody: t }) => t), te = (e, n) => !B(e.target, n.target), M = (e, n) => {\n  const t = Z(e, n), o = K(e, n), i = ee(e, n);\n  return {\n    oldValue: e,\n    newValue: n,\n    bodiesCreated: t.length > 0 ? t : void 0,\n    bodiesDeleted: o.length > 0 ? o : void 0,\n    bodiesUpdated: i.length > 0 ? i : void 0,\n    targetUpdated: te(e, n) ? { oldTarget: e.target, newTarget: n.target } : void 0\n  };\n};\nvar ne = /* @__PURE__ */ ((e) => (e.BODY_ONLY = \"BODY_ONLY\", e.TARGET_ONLY = \"TARGET_ONLY\", e))(ne || {}), O = /* @__PURE__ */ ((e) => (e.LOCAL = \"LOCAL\", e.REMOTE = \"REMOTE\", e))(O || {});\nconst oe = (e, n) => {\n  var h, U;\n  const { changes: t, origin: o } = n;\n  if (!(!e.options.origin || e.options.origin === o))\n    return !1;\n  if (e.options.ignore) {\n    const { ignore: b } = e.options, w = (T) => (T == null ? void 0 : T.length) > 0;\n    if (!(w(t.created) || w(t.deleted))) {\n      const T = (h = t.updated) == null ? void 0 : h.some((f) => w(f.bodiesCreated) || w(f.bodiesDeleted) || w(f.bodiesUpdated)), s = (U = t.updated) == null ? void 0 : U.some((f) => f.targetUpdated);\n      if (b === \"BODY_ONLY\" && T && !s || b === \"TARGET_ONLY\" && s && !T)\n        return !1;\n    }\n  }\n  if (e.options.annotations) {\n    const b = /* @__PURE__ */ new Set([\n      ...t.created.map((u) => u.id),\n      ...t.deleted.map((u) => u.id),\n      ...t.updated.map(({ oldValue: u }) => u.id)\n    ]);\n    return !!(Array.isArray(e.options.annotations) ? e.options.annotations : [e.options.annotations]).find((u) => b.has(u));\n  } else\n    return !0;\n}, se = (e, n) => {\n  const t = new Set((e.created || []).map((s) => s.id)), o = new Set((e.updated || []).map(({ newValue: s }) => s.id)), i = new Set((n.created || []).map((s) => s.id)), h = new Set((n.deleted || []).map((s) => s.id)), U = new Set((n.updated || []).map(({ oldValue: s }) => s.id)), b = new Set((n.updated || []).filter(({ oldValue: s }) => t.has(s.id) || o.has(s.id)).map(({ oldValue: s }) => s.id)), w = [\n    ...(e.created || []).filter((s) => !h.has(s.id)).map((s) => U.has(s.id) ? n.updated.find(({ oldValue: f }) => f.id === s.id).newValue : s),\n    ...n.created || []\n  ], u = [\n    ...(e.deleted || []).filter((s) => !i.has(s.id)),\n    ...(n.deleted || []).filter((s) => !t.has(s.id))\n  ], T = [\n    ...(e.updated || []).filter(({ newValue: s }) => !h.has(s.id)).map((s) => {\n      const { oldValue: f, newValue: y } = s;\n      if (U.has(y.id)) {\n        const A = n.updated.find((L) => L.oldValue.id === y.id).newValue;\n        return M(f, A);\n      } else\n        return s;\n    }),\n    ...(n.updated || []).filter(({ oldValue: s }) => !b.has(s.id))\n  ];\n  return { created: w, deleted: u, updated: T };\n}, ie = (e) => e.id !== void 0, ye = () => {\n  const e = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map(), t = [], o = (r, l = {}) => t.push({ onChange: r, options: l }), i = (r) => {\n    const l = t.findIndex((a) => a.onChange == r);\n    l > -1 && t.splice(l, 1);\n  }, h = (r, l) => {\n    const a = {\n      origin: r,\n      changes: {\n        created: l.created || [],\n        updated: l.updated || [],\n        deleted: l.deleted || []\n      },\n      state: [...e.values()]\n    };\n    t.forEach((p) => {\n      oe(p, a) && p.onChange(a);\n    });\n  }, U = (r, l = O.LOCAL) => {\n    if (e.get(r.id))\n      throw Error(`Cannot add annotation ${r.id} - exists already`);\n    e.set(r.id, r), r.bodies.forEach((p) => n.set(p.id, r.id)), h(l, { created: [r] });\n  }, b = (r, l) => {\n    const a = typeof r == \"string\" ? l : r, p = typeof r == \"string\" ? r : r.id, v = e.get(p);\n    if (v) {\n      const D = M(v, a);\n      return p === a.id ? e.set(p, a) : (e.delete(p), e.set(a.id, a)), v.bodies.forEach((x) => n.delete(x.id)), a.bodies.forEach((x) => n.set(x.id, a.id)), D;\n    } else\n      console.warn(`Cannot update annotation ${p} - does not exist`);\n  }, w = (r, l = O.LOCAL, a = O.LOCAL) => {\n    const p = ie(l) ? a : l, v = b(r, l);\n    v && h(p, { updated: [v] });\n  }, u = (r, l = O.LOCAL) => {\n    const a = r.reduce((p, v) => {\n      const D = b(v);\n      return D ? [...p, D] : p;\n    }, []);\n    a.length > 0 && h(l, { updated: a });\n  }, T = (r, l = O.LOCAL) => {\n    const a = e.get(r.annotation);\n    if (a) {\n      const p = {\n        ...a,\n        bodies: [...a.bodies, r]\n      };\n      e.set(a.id, p), n.set(r.id, p.id), h(l, { updated: [{\n        oldValue: a,\n        newValue: p,\n        bodiesCreated: [r]\n      }] });\n    } else\n      console.warn(`Attempt to add body to missing annotation: ${r.annotation}`);\n  }, s = () => [...e.values()], f = (r = O.LOCAL) => {\n    const l = [...e.values()];\n    e.clear(), n.clear(), h(r, { deleted: l });\n  }, y = (r, l = !0, a = O.LOCAL) => {\n    if (l) {\n      const p = [...e.values()];\n      e.clear(), n.clear(), r.forEach((v) => {\n        e.set(v.id, v), v.bodies.forEach((D) => n.set(D.id, v.id));\n      }), h(a, { created: r, deleted: p });\n    } else {\n      const p = r.reduce((v, D) => {\n        const x = e.get(D.id);\n        return x ? [...v, x] : v;\n      }, []);\n      if (p.length > 0)\n        throw Error(`Bulk insert would overwrite the following annotations: ${p.map((v) => v.id).join(\", \")}`);\n      r.forEach((v) => {\n        e.set(v.id, v), v.bodies.forEach((D) => n.set(D.id, v.id));\n      }), h(a, { created: r });\n    }\n  }, A = (r) => {\n    const l = typeof r == \"string\" ? r : r.id, a = e.get(l);\n    if (a)\n      return e.delete(l), a.bodies.forEach((p) => n.delete(p.id)), a;\n    console.warn(`Attempt to delete missing annotation: ${l}`);\n  }, L = (r, l = O.LOCAL) => {\n    const a = A(r);\n    a && h(l, { deleted: [a] });\n  }, C = (r, l = O.LOCAL) => {\n    const a = r.reduce((p, v) => {\n      const D = A(v);\n      return D ? [...p, D] : p;\n    }, []);\n    a.length > 0 && h(l, { deleted: a });\n  }, c = (r, l = O.LOCAL) => {\n    const a = e.get(r.annotation);\n    if (a) {\n      const p = a.bodies.find((v) => v.id === r.id);\n      if (p) {\n        n.delete(p.id);\n        const v = {\n          ...a,\n          bodies: a.bodies.filter((x) => x.id !== r.id)\n        };\n        e.set(a.id, v), h(l, { updated: [{\n          oldValue: a,\n          newValue: v,\n          bodiesDeleted: [p]\n        }] });\n      } else\n        console.warn(`Attempt to delete missing body ${r.id} from annotation ${r.annotation}`);\n    } else\n      console.warn(`Attempt to delete body from missing annotation ${r.annotation}`);\n  }, m = (r) => {\n    const l = e.get(r);\n    return l ? { ...l } : void 0;\n  }, d = (r) => {\n    const l = n.get(r);\n    if (l) {\n      const p = m(l).bodies.find((v) => v.id === r);\n      if (p)\n        return p;\n      console.error(`Store integrity error: body ${r} in index, but not in annotation`);\n    } else\n      console.warn(`Attempt to retrieve missing body: ${r}`);\n  }, E = (r, l) => {\n    if (r.annotation !== l.annotation)\n      throw \"Annotation integrity violation: annotation ID must be the same when updating bodies\";\n    const a = e.get(r.annotation);\n    if (a) {\n      const p = a.bodies.find((D) => D.id === r.id), v = {\n        ...a,\n        bodies: a.bodies.map((D) => D.id === p.id ? l : D)\n      };\n      return e.set(a.id, v), p.id !== l.id && (n.delete(p.id), n.set(l.id, v.id)), {\n        oldValue: a,\n        newValue: v,\n        bodiesUpdated: [{ oldBody: p, newBody: l }]\n      };\n    } else\n      console.warn(`Attempt to add body to missing annotation ${r.annotation}`);\n  }, g = (r, l, a = O.LOCAL) => {\n    const p = E(r, l);\n    h(a, { updated: [p] });\n  }, S = (r, l = O.LOCAL) => {\n    const a = r.map((p) => E({ id: p.id, annotation: p.annotation }, p));\n    h(l, { updated: a });\n  }, I = (r) => {\n    const l = e.get(r.annotation);\n    if (l) {\n      const a = {\n        ...l,\n        target: {\n          ...l.target,\n          ...r\n        }\n      };\n      return e.set(l.id, a), {\n        oldValue: l,\n        newValue: a,\n        targetUpdated: {\n          oldTarget: l.target,\n          newTarget: r\n        }\n      };\n    } else\n      console.warn(`Attempt to update target on missing annotation: ${r.annotation}`);\n  };\n  return {\n    addAnnotation: U,\n    addBody: T,\n    all: s,\n    bulkAddAnnotation: y,\n    bulkDeleteAnnotation: C,\n    bulkUpdateAnnotation: u,\n    bulkUpdateBodies: S,\n    bulkUpdateTargets: (r, l = O.LOCAL) => {\n      const a = r.map(I).filter((p) => p);\n      a.length > 0 && h(l, { updated: a });\n    },\n    clear: f,\n    deleteAnnotation: L,\n    deleteBody: c,\n    getAnnotation: m,\n    getBody: d,\n    observe: o,\n    unobserve: i,\n    updateAnnotation: w,\n    updateBody: g,\n    updateTarget: (r, l = O.LOCAL) => {\n      const a = I(r);\n      a && h(l, { updated: [a] });\n    }\n  };\n}, Ue = (e) => ({\n  ...e,\n  subscribe: (t) => {\n    const o = (i) => t(i.state);\n    return e.observe(o), t(e.all()), () => e.unobserve(o);\n  }\n});\nlet P = () => ({\n  emit(e, ...n) {\n    let t = this.events[e] || [];\n    for (let o = 0, i = t.length; o < i; o++)\n      t[o](...n);\n  },\n  events: {},\n  on(e, n) {\n    var t;\n    return (t = this.events[e]) != null && t.push(n) || (this.events[e] = [n]), () => {\n      var o;\n      this.events[e] = (o = this.events[e]) == null ? void 0 : o.filter((i) => n !== i);\n    };\n  }\n});\nconst de = 250, Le = (e) => {\n  const n = P(), t = [];\n  let o = -1, i = !1, h = 0;\n  const U = (d) => {\n    if (!i) {\n      const { changes: E } = d, g = performance.now();\n      if (g - h > de)\n        t.splice(o + 1), t.push(E), o = t.length - 1;\n      else {\n        const S = t.length - 1;\n        t[S] = se(t[S], E);\n      }\n      h = g;\n    }\n    i = !1;\n  };\n  e.observe(U, { origin: O.LOCAL });\n  const b = (d) => (d == null ? void 0 : d.length) > 0 && e.bulkDeleteAnnotation(d), w = (d) => (d == null ? void 0 : d.length) > 0 && e.bulkAddAnnotation(d, !1), u = (d) => (d == null ? void 0 : d.length) > 0 && e.bulkUpdateAnnotation(d.map(({ oldValue: E }) => E)), T = (d) => (d == null ? void 0 : d.length) > 0 && e.bulkUpdateAnnotation(d.map(({ newValue: E }) => E)), s = (d) => (d == null ? void 0 : d.length) > 0 && e.bulkAddAnnotation(d, !1), f = (d) => (d == null ? void 0 : d.length) > 0 && e.bulkDeleteAnnotation(d);\n  return {\n    canRedo: () => t.length - 1 > o,\n    canUndo: () => o > -1,\n    destroy: () => e.unobserve(U),\n    on: (d, E) => n.on(d, E),\n    redo: () => {\n      if (t.length - 1 > o) {\n        i = !0;\n        const { created: d, updated: E, deleted: g } = t[o + 1];\n        w(d), T(E), f(g), n.emit(\"redo\", t[o + 1]), o += 1;\n      }\n    },\n    undo: () => {\n      if (o > -1) {\n        i = !0;\n        const { created: d, updated: E, deleted: g } = t[o];\n        b(d), u(E), s(g), n.emit(\"undo\", t[o]), o -= 1;\n      }\n    }\n  };\n}, Se = () => {\n  const { subscribe: e, set: n } = _([]);\n  return {\n    subscribe: e,\n    set: n\n  };\n}, Te = (e, n, t, o) => {\n  const { store: i, selection: h, hover: U, viewport: b } = e, w = /* @__PURE__ */ new Map();\n  let u = [], T, s;\n  const f = (c, m) => {\n    w.has(c) ? w.get(c).push(m) : w.set(c, [m]);\n  }, y = (c, m) => {\n    const d = w.get(c);\n    d && d.indexOf(m) > 0 && d.splice(d.indexOf(m), 1);\n  }, A = (c, m, d) => {\n    w.has(c) && setTimeout(() => {\n      w.get(c).forEach((E) => {\n        if (t) {\n          const g = Array.isArray(m) ? m.map((I) => t.serialize(I)) : t.serialize(m), S = d ? d instanceof PointerEvent ? d : t.serialize(d) : void 0;\n          E(g, S);\n        } else\n          E(m, d);\n      });\n    }, 1);\n  }, L = () => {\n    const { selected: c } = h, m = c.map(({ id: d }) => i.getAnnotation(d));\n    m.forEach((d) => {\n      const E = u.find((g) => g.id === d.id);\n      (!E || !B(E, d)) && A(\"updateAnnotation\", d, E);\n    }), u = u.map((d) => {\n      const E = m.find(({ id: g }) => g === d.id);\n      return E || d;\n    });\n  };\n  h.subscribe(({ selected: c }) => {\n    if (!(u.length === 0 && c.length === 0)) {\n      if (u.length === 0 && c.length > 0)\n        u = c.map(({ id: m }) => i.getAnnotation(m));\n      else if (u.length > 0 && c.length === 0)\n        u.forEach((m) => {\n          const d = i.getAnnotation(m.id);\n          d && !B(d, m) && A(\"updateAnnotation\", d, m);\n        }), u = [];\n      else {\n        const m = new Set(u.map((g) => g.id)), d = new Set(c.map(({ id: g }) => g));\n        u.filter((g) => !d.has(g.id)).forEach((g) => {\n          const S = i.getAnnotation(g.id);\n          S && !B(S, g) && A(\"updateAnnotation\", S, g);\n        }), u = [\n          // Remove annotations that were deselected\n          ...u.filter((g) => d.has(g.id)),\n          // Add editable annotations that were selected\n          ...c.filter(({ id: g }) => !m.has(g)).map(({ id: g }) => i.getAnnotation(g))\n        ];\n      }\n      A(\"selectionChanged\", u);\n    }\n  }), U.subscribe((c) => {\n    !T && c ? A(\"mouseEnterAnnotation\", i.getAnnotation(c)) : T && !c ? A(\"mouseLeaveAnnotation\", i.getAnnotation(T)) : T && c && (A(\"mouseLeaveAnnotation\", i.getAnnotation(T)), A(\"mouseEnterAnnotation\", i.getAnnotation(c))), T = c;\n  }), b == null || b.subscribe((c) => A(\"viewportIntersect\", c.map(i.getAnnotation))), i.observe((c) => {\n    o && (s && clearTimeout(s), s = setTimeout(L, 1e3));\n    const { created: m, deleted: d } = c.changes;\n    m.forEach((g) => A(\"createAnnotation\", g)), d.forEach((g) => A(\"deleteAnnotation\", g)), c.changes.updated.filter((g) => [\n      ...g.bodiesCreated || [],\n      ...g.bodiesDeleted || [],\n      ...g.bodiesUpdated || []\n    ].length > 0).forEach(({ oldValue: g, newValue: S }) => {\n      const I = u.find((N) => N.id === g.id) || g;\n      u = u.map((N) => N.id === g.id ? S : N), A(\"updateAnnotation\", S, I);\n    });\n  }, { origin: O.LOCAL }), i.observe((c) => {\n    if (u) {\n      const m = new Set(u.map((E) => E.id)), d = c.changes.updated.filter(({ newValue: E }) => m.has(E.id)).map(({ newValue: E }) => E);\n      d.length > 0 && (u = u.map((E) => {\n        const g = d.find((S) => S.id === E.id);\n        return g || E;\n      }));\n    }\n  }, { origin: O.REMOTE });\n  const C = (c) => (m) => {\n    const { created: d, deleted: E, updated: g } = m;\n    d.forEach((S) => A(\"createAnnotation\", S)), E.forEach((S) => A(\"deleteAnnotation\", S)), c ? g.forEach((S) => A(\"updateAnnotation\", S.oldValue, S.newValue)) : g.forEach((S) => A(\"updateAnnotation\", S.newValue, S.oldValue));\n  };\n  return n.on(\"undo\", C(!0)), n.on(\"redo\", C(!1)), { on: f, off: y, emit: A };\n}, Oe = (e) => (n) => n.map((t) => e.serialize(t)), re = (e) => (n) => n.reduce((t, o) => {\n  const { parsed: i, error: h } = e.parse(o);\n  return h ? {\n    parsed: t.parsed,\n    failed: [...t.failed, o]\n  } : {\n    parsed: [...t.parsed, i],\n    failed: t.failed\n  };\n}, { parsed: [], failed: [] }), De = (e, n, t) => {\n  const { store: o, selection: i } = e, h = (C) => {\n    if (t) {\n      const { parsed: c, error: m } = t.parse(C);\n      c ? o.addAnnotation(c, O.REMOTE) : console.error(m);\n    } else\n      o.addAnnotation(C, O.REMOTE);\n  }, U = () => i.clear(), b = () => o.clear(), w = (C) => {\n    const c = o.getAnnotation(C);\n    return t && c ? t.serialize(c) : c;\n  }, u = () => t ? o.all().map(t.serialize) : o.all(), T = () => {\n    var m;\n    const c = (((m = i.selected) == null ? void 0 : m.map((d) => d.id)) || []).map((d) => o.getAnnotation(d));\n    return t ? c.map(t.serialize) : c;\n  }, s = (C) => fetch(C).then((c) => c.json()).then((c) => (y(c), c)), f = (C) => {\n    if (typeof C == \"string\") {\n      const c = o.getAnnotation(C);\n      return o.deleteAnnotation(C), t ? t.serialize(c) : c;\n    } else {\n      const c = t ? t.parse(C).parsed : C;\n      return o.deleteAnnotation(c), C;\n    }\n  }, y = (C) => {\n    if (t) {\n      const { parsed: c, failed: m } = re(t)(C);\n      m.length > 0 && console.warn(`Discarded ${m.length} invalid annotations`, m), o.bulkAddAnnotation(c, !0, O.REMOTE);\n    } else\n      o.bulkAddAnnotation(C, !0, O.REMOTE);\n  }, A = (C) => {\n    C ? i.setSelected(C) : i.clear();\n  }, L = (C) => {\n    if (t) {\n      const c = t.parse(C).parsed, m = t.serialize(o.getAnnotation(c.id));\n      return o.updateAnnotation(c), m;\n    } else {\n      const c = o.getAnnotation(C.id);\n      return o.updateAnnotation(C), c;\n    }\n  };\n  return {\n    addAnnotation: h,\n    cancelSelected: U,\n    canRedo: n.canRedo,\n    canUndo: n.canUndo,\n    clearAnnotations: b,\n    getAnnotationById: w,\n    getAnnotations: u,\n    getSelected: T,\n    loadAnnotations: s,\n    redo: n.redo,\n    removeAnnotation: f,\n    setAnnotations: y,\n    setSelected: A,\n    undo: n.undo,\n    updateAnnotation: L\n  };\n};\nlet ae = (e) => crypto.getRandomValues(new Uint8Array(e)), ce = (e, n, t) => {\n  let o = (2 << Math.log(e.length - 1) / Math.LN2) - 1, i = -~(1.6 * o * n / e.length);\n  return (h = n) => {\n    let U = \"\";\n    for (; ; ) {\n      let b = t(i), w = i;\n      for (; w--; )\n        if (U += e[b[w] & o] || \"\", U.length === h)\n          return U;\n    }\n  };\n}, le = (e, n = 21) => ce(e, n, ae), ue = (e = 21) => crypto.getRandomValues(new Uint8Array(e)).reduce((n, t) => (t &= 63, t < 36 ? n += t.toString(36) : t < 62 ? n += (t - 26).toString(36).toUpperCase() : t > 62 ? n += \"-\" : n += \"_\", n), \"\");\nconst Re = () => ({ isGuest: !0, id: le(\"1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_\", 20)() }), fe = (e) => {\n  const n = JSON.stringify(e);\n  let t = 0;\n  for (let o = 0, i = n.length; o < i; o++) {\n    let h = n.charCodeAt(o);\n    t = (t << 5) - t + h, t |= 0;\n  }\n  return `${t}`;\n}, pe = (e) => e ? typeof e == \"object\" ? { ...e } : e : void 0, xe = (e, n) => (Array.isArray(e) ? e : [e]).map((t) => {\n  const { id: o, type: i, purpose: h, value: U, created: b, creator: w, ...u } = t;\n  return {\n    id: o || `temp-${fe(t)}`,\n    annotation: n,\n    type: i,\n    purpose: h,\n    value: U,\n    created: b ? new Date(b) : void 0,\n    creator: pe(w),\n    ...u\n  };\n}), Be = (e) => e.map((n) => {\n  var o;\n  const t = { ...n };\n  return delete t.annotation, (o = t.id) != null && o.startsWith(\"temp-\") && delete t.id, t;\n}), he = [\n  \"#ff7c00\",\n  // orange\n  \"#1ac938\",\n  // green\n  \"#e8000b\",\n  // red\n  \"#8b2be2\",\n  // purple\n  \"#9f4800\",\n  // brown\n  \"#f14cc1\",\n  // pink\n  \"#ffc400\",\n  // khaki\n  \"#00d7ff\",\n  // cyan\n  \"#023eff\"\n  // blue\n], ge = () => {\n  const e = [...he];\n  return { assignRandomColor: () => {\n    const o = Math.floor(Math.random() * e.length), i = e[o];\n    return e.splice(o, 1), i;\n  }, releaseColor: (o) => e.push(o) };\n}, me = () => {\n  const e = ge();\n  return { addUser: (o, i) => {\n    const h = e.assignRandomColor();\n    return {\n      label: i.name || i.id,\n      avatar: i.avatar,\n      color: h\n    };\n  }, removeUser: (o) => e.releaseColor(o.appearance.color) };\n}, Ae = (e, n) => e.every((t) => e.includes(t)) && n.every((t) => e.includes(t)), Ie = ue(), ke = (e = me()) => {\n  const n = P(), t = /* @__PURE__ */ new Map(), o = /* @__PURE__ */ new Map(), i = (s, f) => {\n    if (t.has(s)) {\n      console.warn(\"Attempt to add user that is already present\", s, f);\n      return;\n    }\n    const y = e.addUser(s, f);\n    t.set(s, {\n      ...f,\n      presenceKey: s,\n      appearance: y\n    });\n  }, h = (s) => {\n    const f = t.get(s);\n    if (!f) {\n      console.warn(\"Attempt to remove user that is not present\", s);\n      return;\n    }\n    e.removeUser(f), t.delete(s);\n  }, U = (s) => {\n    const f = new Set(s.map((L) => L.presenceKey)), y = s.filter(({ presenceKey: L }) => !t.has(L)), A = Array.from(t.values()).filter((L) => !f.has(L.presenceKey));\n    y.forEach(({ presenceKey: L, user: C }) => i(L, C)), A.forEach((L) => {\n      const { presenceKey: C } = L;\n      o.has(C) && n.emit(\"selectionChange\", L, null), h(C);\n    }), (y.length > 0 || A.length > 0) && n.emit(\"presence\", u());\n  }, b = (s, f) => {\n    const y = t.get(s);\n    if (!y) {\n      console.warn(\"Activity notification from user that is not present\");\n      return;\n    }\n    const A = o.get(s);\n    (!A || !Ae(A, f)) && (o.set(s, f), n.emit(\"selectionChange\", y, f));\n  }, w = (s, f) => {\n    const y = t.get(s);\n    if (!y) {\n      console.warn(\"Selection change for user that is not present\", s);\n      return;\n    }\n    f ? o.set(s, f) : o.delete(s), n.emit(\"selectionChange\", y, f);\n  }, u = () => [...Array.from(t.values())];\n  return {\n    getPresentUsers: u,\n    notifyActivity: b,\n    on: (s, f) => n.on(s, f),\n    syncUsers: U,\n    updateSelection: w\n  };\n};\nexport {\n  ne as Ignore,\n  O as Origin,\n  Ie as PRESENCE_KEY,\n  q as PointerSelectAction,\n  Re as createAnonymousGuest,\n  De as createBaseAnnotator,\n  we as createBody,\n  me as createDefaultAppearenceProvider,\n  be as createHoverState,\n  Te as createLifecyleObserver,\n  ke as createPresenceState,\n  ve as createSelectionState,\n  ye as createStore,\n  Le as createUndoStack,\n  Se as createViewportState,\n  ge as defaultColorProvider,\n  M as diffAnnotations,\n  Ce as getContributors,\n  se as mergeChanges,\n  G as onPointerSelect,\n  re as parseAll,\n  xe as parseW3CBodies,\n  pe as parseW3CUser,\n  Oe as serializeAll,\n  Be as serializeW3CBodies,\n  oe as shouldNotify,\n  Ue as toSvelteStore\n};\n//# sourceMappingURL=annotorious-core.es.js.map\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { parseW3CUser, parseW3CBodies, serializeW3CBodies } from '@annotorious/core';\r\nimport type { FormatAdapter, ParseResult, W3CAnnotation } from '@annotorious/core';\r\nimport { ShapeType } from '../core';\r\nimport type { ImageAnnotation, RectangleGeometry } from '../core';\r\nimport type { FragmentSelector } from './fragment';\r\nimport { parseFragmentSelector, serializeFragmentSelector } from './fragment';\r\nimport type { SVGSelector } from './svg';\r\nimport { parseSVGSelector, serializeSVGSelector } from './svg';\r\n\r\nexport type W3CImageFormatAdapter = FormatAdapter<ImageAnnotation, W3CAnnotation>;\r\n\r\nexport const W3CImageFormat = (\r\n  source: string,\r\n  invertY: boolean = false\r\n): W3CImageFormatAdapter => {\r\n\r\n  const parse = (serialized: W3CAnnotation) =>\r\n    parseW3CImageAnnotation(serialized, invertY);\r\n\r\n  const serialize = (annotation: ImageAnnotation) =>\r\n    serializeW3CImageAnnotation(annotation, source);\r\n\r\n  return { parse, serialize }\r\n}\r\n\r\nexport const parseW3CImageAnnotation = (\r\n  annotation: W3CAnnotation, \r\n  invertY: boolean = false\r\n): ParseResult<ImageAnnotation> => {\r\n  const annotationId = annotation.id || uuidv4();\r\n\r\n  const { \r\n    creator,\r\n    created,\r\n    updatedBy,\r\n    updated,\r\n    body, \r\n    ...rest \r\n  } = annotation;\r\n\r\n  const bodies = parseW3CBodies(body, annotationId);\r\n\r\n  const target = Array.isArray(annotation.target) ? annotation.target[0] : annotation.target;\r\n\r\n  const w3cSelector = Array.isArray(target.selector) ? target.selector[0] : target.selector;\r\n\r\n  const selector = \r\n    w3cSelector.type === 'FragmentSelector' ?\r\n      parseFragmentSelector(w3cSelector as FragmentSelector, invertY) :\r\n    w3cSelector.type === 'SvgSelector' ?\r\n      parseSVGSelector(w3cSelector as SVGSelector) : undefined;\r\n\r\n  return selector ? { \r\n    parsed: {\r\n      ...rest,\r\n      id: annotationId,\r\n      bodies,\r\n      target: {\r\n        created: created ? new Date(created) : undefined,\r\n        creator: parseW3CUser(creator),\r\n        ...rest.target,\r\n        annotation: annotationId,\r\n        selector\r\n      }\r\n    }\r\n  } : {\r\n    error: Error(`Unknown selector type: ${w3cSelector.type}`)\r\n  };\r\n\r\n}\r\n\r\nexport const serializeW3CImageAnnotation = (\r\n  annotation: ImageAnnotation, \r\n  source: string\r\n): W3CAnnotation => {\r\n  const { \r\n    selector, \r\n    creator, \r\n    created, \r\n    updated, \r\n    updatedBy, \r\n    ...rest \r\n  } = annotation.target;\r\n\r\n  const w3CSelector =\r\n    selector.type == ShapeType.RECTANGLE ?\r\n      serializeFragmentSelector(selector.geometry as RectangleGeometry) :\r\n      serializeSVGSelector(selector);\r\n\r\n  return {\r\n    ...annotation,\r\n    '@context': 'http://www.w3.org/ns/anno.jsonld',\r\n    id: annotation.id,\r\n    type: 'Annotation',\r\n    body: serializeW3CBodies(annotation.bodies),\r\n    creator,\r\n    created: created?.toISOString(),\r\n    target: {\r\n      ...rest,\r\n      source,\r\n      selector: w3CSelector\r\n    }\r\n  };\r\n};\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import { boundsFromPoints } from '../../../model';\r\n  import type { Polygon } from '../../../model';\r\n  import type { Transform } from '../../Transform';\r\n  import { Editor, Handle } from '..';\r\n\r\n  /** Props */\r\n  export let shape: Polygon;\r\n  export let computedStyle: string = undefined;\r\n  export let transform: Transform;\r\n  export let viewportScale: number = 1;\r\n\r\n  $: geom = shape.geometry;\r\n\r\n  $: handleSize = 10 / viewportScale;\r\n\r\n  const editor = (polygon: Polygon, handle: Handle, delta: [number, number]) => {\r\n    let points: [number, number][];\r\n\r\n    if (handle === Handle.SHAPE) {\r\n      points = polygon.geometry.points.map(([x, y]) => [x + delta[0], y + delta[1]]);\r\n    } else {\r\n      points = polygon.geometry.points.map(([x, y], idx) =>\r\n        handle === Handle(idx) ? [x + delta[0], y + delta[1]] : [x, y]\r\n      );\r\n    }\r\n\r\n    const bounds = boundsFromPoints(points);\r\n\r\n    return {\r\n      ...polygon,\r\n      geometry: { points, bounds }\r\n    }\r\n  }\r\n</script>\r\n\r\n<Editor\r\n  shape={shape}\r\n  transform={transform}\r\n  editor={editor}\r\n  on:change \r\n  on:grab\r\n  on:release\r\n  let:grab={grab}>\r\n\r\n  <polygon\r\n    class=\"a9s-outer\"\r\n    style={computedStyle ? 'display:none;' : undefined}\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    points={geom.points.map(xy => xy.join(',')).join(' ')} />\r\n\r\n  <polygon\r\n    class=\"a9s-inner a9s-shape-handle\"\r\n    style={computedStyle}\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    points={geom.points.map(xy => xy.join(',')).join(' ')} />\r\n\r\n  {#each geom.points as point, idx}\r\n    <rect \r\n      class=\"a9s-corner-handle\"\r\n      on:pointerdown={grab(Handle(idx))}\r\n      x={point[0] - handleSize / 2} y={point[1] - handleSize / 2} height={handleSize} width={handleSize} />\r\n  {/each}\r\n</Editor>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import type { Rectangle } from '../../../model';\r\n  import type { Transform } from '../../Transform';\r\n  import { Editor, Handle } from '..';\r\n\r\n  /** Props */\r\n  export let shape: Rectangle;\r\n  export let computedStyle: string = undefined;\r\n  export let transform: Transform;\r\n  export let viewportScale: number = 1;\r\n\r\n  $: geom = shape.geometry;\r\n\r\n  $: handleSize = 10 / viewportScale;\r\n\r\n  const editor = (rectangle: Rectangle, handle: Handle, delta: [number, number]) => {\r\n    const initialBounds = rectangle.geometry.bounds;\r\n\r\n    let [x0, y0] = [initialBounds.minX, initialBounds.minY];\r\n    let [x1, y1] = [initialBounds.maxX, initialBounds.maxY];\r\n\r\n    const [dx, dy] = delta;\r\n\r\n    if (handle === Handle.SHAPE) {\r\n      x0 += dx;\r\n      x1 += dx;\r\n      y0 += dy;\r\n      y1 += dy;\r\n    } else {\r\n      switch (handle) {\r\n        case Handle.TOP:\r\n        case Handle.TOP_LEFT:\r\n        case Handle.TOP_RIGHT: {\r\n          y0 += dy;\r\n          break;\r\n        }\r\n\r\n        case Handle.BOTTOM:\r\n        case Handle.BOTTOM_LEFT:\r\n        case Handle.BOTTOM_RIGHT: {\r\n          y1 += dy;\r\n          break;\r\n        }\r\n      }\r\n\r\n      switch (handle) {\r\n        case Handle.LEFT:\r\n        case Handle.TOP_LEFT:\r\n        case Handle.BOTTOM_LEFT: {\r\n          x0 += dx;\r\n          break;\r\n        }\r\n\r\n        case Handle.RIGHT:\r\n        case Handle.TOP_RIGHT:\r\n        case Handle.BOTTOM_RIGHT: {\r\n          x1 += dx;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    const x = Math.min(x0, x1);\r\n    const y = Math.min(y0, y1);\r\n    const w = Math.abs(x1 - x0);\r\n    const h = Math.abs(y1 - y0);\r\n\r\n    return {\r\n      ...rectangle,\r\n      geometry: {\r\n        x, y, w, h,\r\n        bounds: {\r\n          minX: x,\r\n          minY: y,\r\n          maxX: x + w,\r\n          maxY: y + h\r\n        }\r\n      }\r\n    };\r\n  }\r\n</script>\r\n\r\n<Editor\r\n  shape={shape}\r\n  transform={transform}\r\n  editor={editor}\r\n  on:grab\r\n  on:change \r\n  on:release\r\n  let:grab={grab}>\r\n\r\n  <rect \r\n    class=\"a9s-outer\"\r\n    style={computedStyle ? 'display:none;' : undefined}\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    x={geom.x} y={geom.y} width={geom.w} height={geom.h} />\r\n\r\n  <rect \r\n    class=\"a9s-inner a9s-shape-handle\"\r\n    style={computedStyle}\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    x={geom.x} y={geom.y} width={geom.w} height={geom.h} />\r\n\r\n  <rect \r\n    class=\"a9s-edge-handle a9s-edge-handle-top\" \r\n    on:pointerdown={grab(Handle.TOP)}\r\n    x={geom.x} y={geom.y} height={1} width={geom.w} />\r\n\r\n  <rect \r\n    class=\"a9s-edge-handle a9s-edge-handle-right\"\r\n    on:pointerdown={grab(Handle.RIGHT)}\r\n    x={geom.x + geom.w} y={geom.y} height={geom.h} width={1}/>\r\n\r\n  <rect \r\n    class=\"a9s-edge-handle a9s-edge-handle-bottom\" \r\n    on:pointerdown={grab(Handle.BOTTOM)}\r\n    x={geom.x} y={geom.y + geom.h} height={1} width={geom.w} />\r\n\r\n  <rect \r\n    class=\"a9s-edge-handle a9s-edge-handle-left\" \r\n    on:pointerdown={grab(Handle.LEFT)}\r\n    x={geom.x} y={geom.y} height={geom.h} width={1} />\r\n\r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-handle-topleft\"\r\n    on:pointerdown={grab(Handle.TOP_LEFT)}\r\n    x={geom.x - handleSize / 2} y={geom.y - handleSize / 2} height={handleSize} width={handleSize} />\r\n\r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-handle-topright\"\r\n    on:pointerdown={grab(Handle.TOP_RIGHT)}\r\n    x={geom.x + geom.w - handleSize / 2} y={geom.y - handleSize / 2} height={handleSize} width={handleSize} />\r\n  \r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-handle-bottomright\"\r\n    on:pointerdown={grab(Handle.BOTTOM_RIGHT)}\r\n    x={geom.x + geom.w - handleSize / 2} y={geom.y + geom.h - handleSize / 2} height={handleSize} width={handleSize} />\r\n    \r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-handle-bottomleft\"\r\n    on:pointerdown={grab(Handle.BOTTOM_LEFT)}\r\n    x={geom.x - handleSize / 2} y={geom.y + geom.h - handleSize / 2} height={handleSize} width={handleSize} />\r\n</Editor>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import { Handle, Editor } from '..';\r\n  import type { Transform } from '../../Transform';\r\n  import type { Ellipse } from '../../../model';\r\n  import type { Transform } from '../../Transform';\r\n\r\n  export let shape: Ellipse;\r\n\r\n  export let transform: Transform;\r\n\r\n  export let viewportScale: number = 1;\r\n\r\n  $: geom = shape.geometry;\r\n\r\n  $: handleSize = 10 / viewportScale;\r\n\r\n  const editor = (ellipse: Ellipse, handle: Handle, delta: [number, number]) => {\r\n    const initialBounds = ellipse.geometry.bounds;\r\n\r\n    let [x0, y0] = [initialBounds.minX, initialBounds.minY];\r\n    let [x1, y1] = [initialBounds.maxX, initialBounds.maxY];\r\n\r\n    const [dx, dy] = delta;\r\n\r\n    if (handle === Handle.SHAPE) {\r\n      x0 += dx;\r\n      x1 += dx;\r\n      y0 += dy;\r\n      y1 += dy;\r\n    } else {\r\n      switch (handle) {\r\n        case Handle.TOP: {\r\n          y0 += dy;\r\n          break;\r\n        }\r\n\r\n        case Handle.BOTTOM: {\r\n          y1 += dy;\r\n          break;\r\n        }\r\n\r\n        case Handle.LEFT: {\r\n          x0 += dx;\r\n          break;\r\n        }\r\n\r\n        case Handle.RIGHT: {\r\n          x1 += dx;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    const x = Math.min(x0, x1);\r\n    const y = Math.min(y0, y1);\r\n    const w = Math.abs(x1 - x0);\r\n    const h = Math.abs(y1 - y0);\r\n\r\n    const cx = (x0 + x1) / 2;\r\n    const cy = (y0 + y1) / 2;\r\n\r\n    const rx = w / 2;\r\n    const ry = h / 2;\r\n\r\n    return {\r\n      ...ellipse,\r\n      geometry: {\r\n        ...ellipse.geometry,\r\n        cx, cy, rx, ry,\r\n        bounds: {\r\n          minX: x,\r\n          minY: y,\r\n          maxX: x + w,\r\n          maxY: y + h\r\n        }\r\n      }\r\n    };\r\n  }\r\n</script>\r\n\r\n<Editor\r\n  shape={shape}\r\n  transform={transform}\r\n  editor={editor}\r\n  on:grab\r\n  on:change \r\n  on:release\r\n  let:grab={grab}>\r\n\r\n  <ellipse \r\n    class=\"a9s-outer\"\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    cx={geom.cx} cy={geom.cy} rx={geom.rx} ry={geom.ry} />\r\n\r\n  <ellipse \r\n    class=\"a9s-inner a9s-shape-handle\"\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    cx={geom.cx} cy={geom.cy} rx={geom.rx} ry={geom.ry} />\r\n\r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-top\"\r\n    on:pointerdown={grab(Handle.TOP)}\r\n    x={geom.cx - handleSize / 2} y={geom.cy - handleSize / 2 - geom.ry} height={handleSize} width={handleSize} />\r\n\r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-handle-right\"\r\n    on:pointerdown={grab(Handle.RIGHT)}\r\n    x={geom.cx + geom.rx - handleSize / 2} y={geom.cy - handleSize / 2} height={handleSize} width={handleSize} />\r\n  \r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-handle-bottom\"\r\n    on:pointerdown={grab(Handle.BOTTOM)}\r\n    x={geom.cx - handleSize / 2} y={geom.cy + geom.ry - handleSize / 2} height={handleSize} width={handleSize} />\r\n    \r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-handle-left\"\r\n    on:pointerdown={grab(Handle.LEFT)}\r\n    x={geom.cx - geom.rx - handleSize / 2} y={geom.cy - handleSize / 2} height={handleSize} width={handleSize} />\r\n</Editor>\r\n","import { ShapeType, type Shape } from '../../model';\r\nimport type { SvelteComponent } from 'svelte';\r\nimport { PolygonEditor } from './polygon';\r\nimport { RectangleEditor } from './rectangle';\r\nimport { EllipseEditor } from './ellipse';\r\n\r\nconst REGISTERED = new Map<ShapeType, typeof SvelteComponent>([\r\n  [ShapeType.RECTANGLE, RectangleEditor],\r\n  [ShapeType.POLYGON, PolygonEditor],\r\n  [ShapeType.ELLIPSE, EllipseEditor],\r\n]);\r\n\r\nexport const getEditor = (shape: Shape) => REGISTERED.get(shape.type);\r\n\r\nexport const registerEditor = (shapeType: ShapeType, editor: typeof SvelteComponent) =>\r\n  REGISTERED.set(shapeType, editor);\r\n","export type Handle = string;\r\n\r\nexport const Handle = (value: string | number) => `HANDLE-${value}`;\r\n\r\nHandle.SHAPE = 'SHAPE';\r\n\r\nHandle.TOP = 'TOP';\r\n\r\nHandle.RIGHT = 'RIGHT';\r\n\r\nHandle.BOTTOM = 'BOTTOM';\r\n\r\nHandle.LEFT = 'LEFT';\r\n\r\nHandle.TOP_LEFT = 'TOP_LEFT';\r\n\r\nHandle.TOP_RIGHT = 'TOP_RIGHT';\r\n\r\nHandle.BOTTOM_RIGHT = 'BOTTOM_RIGHT';\r\n\r\nHandle.BOTTOM_LEFT = 'BOTTOM_LEFT';","<script type=\"ts\" lang=\"ts\">\r\n  import { createEventDispatcher } from 'svelte';\r\n  import type { Shape } from '../../model';\r\n  import type { Handle } from './Handle';\r\n  import type { Transform } from '../Transform';\r\n\r\n  const dispatch = createEventDispatcher<{ grab: undefined, release: undefined, change: Shape }>();\r\n\r\n  /** Props */\r\n  export let shape: Shape;\r\n  export let editor: (shape: Shape, handle: Handle, delta: [number, number]) => Shape;\r\n  export let transform: Transform;\r\n\r\n  let grabbedHandle: Handle = null;\r\n\r\n  let origin: [number, number];\r\n\r\n  let initialShape: Shape = null;\r\n\r\n  const onGrab = (handle: Handle) => (evt: PointerEvent) => {\r\n    grabbedHandle = handle;\r\n    origin = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n    initialShape = shape;\r\n\r\n    const target = evt.target as Element;\r\n    target.setPointerCapture(evt.pointerId);\r\n\r\n    dispatch('grab');\r\n  }\r\n\r\n  const onPointerMove = (evt: PointerEvent) => {\r\n    if (grabbedHandle) {\r\n      const [x, y] = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n\r\n      const delta: [number, number] = [x - origin[0], y - origin[1]];\r\n\r\n      shape = editor(initialShape, grabbedHandle, delta);\r\n      \r\n      dispatch('change', shape);\r\n    }\r\n  }\r\n\r\n  const onRelease = (evt: PointerEvent) => {    \r\n    const target = evt.target as Element;\r\n    target.releasePointerCapture(evt.pointerId);\r\n\r\n    grabbedHandle = null;\r\n\r\n    initialShape = shape;\r\n    \r\n    dispatch('release');\r\n  }\r\n</script>\r\n\r\n<g\r\n  class=\"a9s-annotation selected\"\r\n  on:pointerup={onRelease}\r\n  on:pointermove={onPointerMove}>\r\n\r\n  <slot grab={onGrab} />\r\n</g>\r\n","import type { DrawingStyle } from '@annotorious/core';\r\nimport type { ImageAnnotation } from '../../model';\r\n\r\nexport const computeStyle = (annotation: ImageAnnotation, style?: DrawingStyle | ((a: ImageAnnotation) => DrawingStyle)) => {\r\n  const computed = typeof style === 'function' ? style(annotation) : style;\r\n\r\n  if (computed) {\r\n    const { fill, fillOpacity } = computed;\r\n\r\n    let css = '';\r\n    \r\n    if (fill)\r\n      css += `fill:${fill};stroke:${fill};`;\r\n    \r\n    css += `fill-opacity:${fillOpacity || '0.25'};`;\r\n\r\n    return css;\r\n  }\r\n}","<script type=\"ts\" lang=\"ts\">\r\n  import type { DrawingStyle } from '@annotorious/core';\r\n  import { createEventDispatcher, onMount, type SvelteComponent } from 'svelte';\r\n  import type { ImageAnnotation, Shape } from '../../model';\r\n  import { computeStyle } from '../utils/styling';\r\n  import type { Transform } from '../Transform';\r\n\r\n  const dispatch = createEventDispatcher<{ grab: undefined, release: undefined, change: Shape }>();\r\n\r\n  /** Props */\r\n  export let annotation: ImageAnnotation;\r\n  export let editor: typeof SvelteComponent;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n  export let target: SVGGElement;\r\n  export let transform: Transform;\r\n  export let viewportScale: number;\r\n\r\n  let editorComponent: SvelteComponent;\r\n\r\n  $: computedStyle = computeStyle(annotation, style);\r\n\r\n  $: if (annotation) editorComponent?.$set({ shape: annotation.target.selector });\r\n  $: if (editorComponent) editorComponent.$set({ transform });\r\n  $: if (editorComponent) editorComponent.$set({ viewportScale });\r\n\r\n  onMount(() => {\r\n    editorComponent = new editor({\r\n      target,\r\n      props: { shape: annotation.target.selector, computedStyle, transform, viewportScale }\r\n    });\r\n\r\n    editorComponent.$on('change', event => {\r\n      editorComponent.$$set({ shape: event.detail });\r\n      dispatch('change', event.detail);\r\n    });\r\n\r\n    editorComponent.$on('grab', event => dispatch('grab', event.detail));\r\n    editorComponent.$on('release', event => dispatch('release', event.detail));\r\n\r\n    return () => {\r\n      editorComponent.$destroy();\r\n    }\r\n  });\r\n</script>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import { createEventDispatcher, onMount, type SvelteComponent } from 'svelte';\r\n  import type { Transform } from '../Transform';\r\n  import type { Shape } from 'src/model';\r\n  import type { DrawingMode } from 'src/AnnotoriousOpts';\r\n\r\n  const dispatch = createEventDispatcher<{ create: Shape }>();\r\n\r\n  /** Props **/\r\n  export let drawingMode: DrawingMode;\r\n  export let target: SVGGElement;\r\n  export let tool: typeof SvelteComponent;\r\n  export let transform: Transform;\r\n  export let viewportScale: number;\r\n\r\n  let toolComponent: SvelteComponent;\r\n\r\n  $: if (toolComponent) toolComponent.$set({ transform });\r\n  $: if (toolComponent) toolComponent.$set({ viewportScale });\r\n\r\n  onMount(() => {\r\n    const svg = target.closest('svg');\r\n\r\n    const cleanup: Function[] = [];\r\n\r\n    const addEventListener = (name: string, handler: (evt: PointerEvent) => void, capture?: boolean) => {\r\n      svg.addEventListener(name, handler, capture);\r\n      cleanup.push(() => svg.removeEventListener(name, handler, capture));\r\n    }\r\n\r\n    toolComponent = new tool({\r\n      target,\r\n      props: { \r\n        addEventListener,\r\n        drawingMode,\r\n        transform, \r\n        viewportScale\r\n      }\r\n    });\r\n\r\n    toolComponent.$on('create', \r\n      event => dispatch('create', event.detail));\r\n\r\n    return () => {\r\n      cleanup.forEach(fn => fn());\r\n      toolComponent.$destroy();\r\n    }\r\n  });\r\n</script>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import { createEventDispatcher, onMount } from 'svelte';\r\n  import type { DrawingMode } from '../../../AnnotoriousOpts';\r\n  import { ShapeType, type Rectangle } from '../../../model';\r\n  import type { Transform } from '../..';\r\n\r\n  const dispatch = createEventDispatcher<{ create: Rectangle }>();\r\n  \r\n  /** Props **/\r\n  export let addEventListener: (type: string, fn: EventListener, capture?: boolean) => void;\r\n  export let drawingMode: DrawingMode;\r\n  export let transform: Transform;\r\n\r\n  let lastPointerDown: number;\r\n\r\n  let origin: [x: number, y: number]; \r\n\r\n  let anchor: [number, number];\r\n\r\n  let x: number, y: number, w: number, h: number;\r\n\r\n  const onPointerDown = (evt: PointerEvent) => {\r\n    lastPointerDown = performance.now();\r\n\r\n    if (drawingMode === 'drag') {\r\n      origin = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n      anchor = origin;\r\n\r\n      x = origin[0];\r\n      y = origin[1];\r\n      w = 1;\r\n      h = 1;\r\n    }\r\n  }\r\n\r\n  const onPointerMove = (evt: PointerEvent) => {\r\n    if (origin) {\r\n      anchor = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n\r\n      x = Math.min(anchor[0], origin[0]);\r\n      y = Math.min(anchor[1], origin[1]);\r\n      w = Math.abs(anchor[0] - origin[0]);\r\n      h = Math.abs(anchor[1] - origin[1]);\r\n    }\r\n  }\r\n    \r\n  const onPointerUp = (evt: PointerEvent) => {\r\n    const timeDifference = performance.now() - lastPointerDown;\r\n\r\n    if (drawingMode === 'click') {\r\n      // Not a single click - ignore\r\n      if (timeDifference > 300)\r\n        return;\r\n\r\n      evt.stopPropagation();\r\n\r\n      if (origin) {\r\n        stopDrawing();\r\n      } else {\r\n        // Start drawing\r\n        origin = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n        anchor = origin;\r\n\r\n        x = origin[0];\r\n        y = origin[1];\r\n        w = 1;\r\n        h = 1;\r\n      }\r\n    } else if (origin) {\r\n      if (timeDifference > 300 || w * h > 100) {\r\n        evt.stopPropagation();\r\n        stopDrawing();\r\n      } else {\r\n        origin = null;\r\n        anchor = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  const stopDrawing = () => {\r\n    // Require 4x4 pixels minimum\r\n    if (w * h > 15) {\r\n      const shape: Rectangle = {\r\n        type: ShapeType.RECTANGLE, \r\n        geometry: {\r\n          bounds: {\r\n            minX: x, \r\n            minY: y,\r\n            maxX: x + w,\r\n            maxY: y + h\r\n          },\r\n          x, y, w, h\r\n        }\r\n      }\r\n\r\n      dispatch('create', shape);\r\n    }\r\n    \r\n    origin = null;\r\n    anchor = null;\r\n  }\r\n\r\n  onMount(() => {\r\n    addEventListener('pointerdown', onPointerDown);\r\n    addEventListener('pointermove', onPointerMove);\r\n    addEventListener('pointerup', onPointerUp, true);\r\n  });\r\n</script>\r\n\r\n<g class=\"a9s-annotation a9s-rubberband\">\r\n  {#if origin}\r\n    <rect\r\n      class=\"a9s-outer\"\r\n      x={x} \r\n      y={y} \r\n      width={w} \r\n      height={h} />\r\n\r\n    <rect\r\n      class=\"a9s-inner\"\r\n      x={x} \r\n      y={y} \r\n      width={w} \r\n      height={h} />\r\n  {/if}\r\n</g>\r\n","export const distance = (a: [number, number], b: [number, number]): number => {\r\n  const dx = Math.abs(b[0] - a[0]);\r\n  const dy = Math.abs(b[1] - a[1]);\r\n\r\n  return Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\r\n}","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","import { writable } from 'svelte/store';\r\n\r\nconst setSize = (image: HTMLImageElement | HTMLCanvasElement, svg: SVGElement) => {\r\n  const { naturalWidth, naturalHeight } = (image as HTMLImageElement);\r\n\r\n  if (!naturalWidth && !naturalHeight) {\r\n    // Might be because a) the image has not loaded yet, or b) because it's not \r\n    // an image element (but maybe a CANVAS etc.)! Allow for both possibilities.\r\n    const { width, height } = image;\r\n\r\n    svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\r\n\r\n    image.addEventListener('load', event => {\r\n      const img = event.target as HTMLImageElement;\r\n      svg.setAttribute('viewBox', `0 0 ${img.naturalWidth} ${img.naturalHeight}`);\r\n    });\r\n  } else {\r\n    svg.setAttribute('viewBox', `0 0 ${naturalWidth} ${naturalHeight}`);\r\n  }\r\n\r\n}\r\n\r\nexport const enableResponsive = (image: HTMLImageElement | HTMLCanvasElement, svg: SVGSVGElement) => {\r\n\r\n  setSize(image, svg);\r\n\r\n  const { subscribe, set } = writable(1);\r\n\r\n  let resizeObserver: ResizeObserver;\r\n\r\n  if (window.ResizeObserver) {\r\n    resizeObserver = new ResizeObserver(() => {\r\n      const svgBounds = svg.getBoundingClientRect();\r\n\r\n      const { width, height } = svg.viewBox.baseVal;\r\n  \r\n      const scale = Math.max(\r\n        svgBounds.width / width,\r\n        svgBounds.height / height\r\n      );\r\n  \r\n      set(scale);\r\n    });\r\n  \r\n    resizeObserver.observe(svg.parentElement);\r\n  }\r\n\r\n  const destroy = () => {\r\n    if (resizeObserver)\r\n      resizeObserver.disconnect();\r\n  }\r\n\r\n  return { destroy, subscribe };\r\n\r\n}\r\n\r\n","export const isTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;","<script type=\"ts\" lang=\"ts\">\r\n  import { onMount, createEventDispatcher } from 'svelte';\r\n  import type { DrawingMode } from '../../../AnnotoriousOpts';\r\n  import { boundsFromPoints, computeArea, ShapeType, type Polygon } from '../../../model';\r\n  import { distance } from '../../utils';\r\n  import type { Transform } from '../..';\r\n\r\n  const dispatch = createEventDispatcher<{ create: Polygon }>();\r\n\r\n  /** Props **/\r\n  export let addEventListener: (type: string, fn: EventListener, capture?: boolean) => void;\r\n  export let drawingMode: DrawingMode;\r\n  export let transform: Transform;\r\n  export let viewportScale = 1;\r\n\r\n  let lastPointerDown: { timeStamp: number, offsetX: number, offsetY: number };\r\n\r\n  let points: [number, number][] = [];\r\n  \r\n  let cursor: [number, number] = null;\r\n\r\n  let isClosable: boolean = false;\r\n\r\n  const CLOSE_DISTANCE = 20;\r\n\r\n  $: handleSize = 10 / viewportScale;\r\n\r\n  const onPointerDown = (evt: PointerEvent) => {\r\n    // Note that the event itself is ephemeral!\r\n    const { timeStamp, offsetX, offsetY } = evt;\r\n    lastPointerDown = { timeStamp, offsetX, offsetY };\r\n\r\n    if (drawingMode === 'drag') {\r\n      if (points.length === 0) {\r\n        const point = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n        points.push(point);\r\n\r\n        cursor = point;\r\n      }\r\n    }\r\n  }\r\n\r\n  const onPointerMove = (evt: PointerEvent) => {\r\n    if (points.length > 0) {\r\n      cursor = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n\r\n      if (points.length >  2) {\r\n        const d = distance(cursor, points[0]) * viewportScale;\r\n        isClosable = d < CLOSE_DISTANCE;\r\n      }\r\n    }\r\n  }\r\n\r\n  const onPointerUp = (evt: PointerEvent) => {\r\n    if (drawingMode === 'click') {\r\n      const timeDifference = evt.timeStamp - lastPointerDown.timeStamp;\r\n\r\n      const d = distance(\r\n        [lastPointerDown.offsetX, lastPointerDown.offsetY], \r\n        [evt.offsetX, evt.offsetY]);\r\n\r\n      if (timeDifference > 300 || d > 15) // Not a single click - ignore\r\n        return;\r\n\r\n      if (isClosable) {\r\n        stopDrawing();\r\n      } else if (points.length === 0) {\r\n        // Start drawing\r\n        const point = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n        points.push(point);\r\n\r\n        cursor = point;\r\n      } else {\r\n        points.push(cursor);\r\n      }\r\n    } else {\r\n      // Require minimum drag of 4px\r\n      if (points.length === 1) {\r\n        const dist = distance(points[0], cursor);\r\n\r\n        if (dist <= 4) {\r\n          // Cancel\r\n          points = [];\r\n          cursor = null;\r\n\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Stop click event from propagating if we're drawing\r\n      evt.stopImmediatePropagation();\r\n\r\n      if (isClosable) {\r\n        stopDrawing();\r\n      } else {\r\n        points.push(cursor);\r\n      }\r\n    }\r\n  }\r\n\r\n  const onDblClick = () => {\r\n    // Require min 3 points (incl. cursor) and minimum\r\n    // polygon area\r\n    const p = [...points, cursor];\r\n\r\n    const shape: Polygon = {\r\n      type: ShapeType.POLYGON, \r\n      geometry: {\r\n        bounds: boundsFromPoints(p),\r\n        points: p\r\n      }\r\n    }\r\n\r\n    const area = computeArea(shape);\r\n    if (area > 4) {\r\n      points = [];\r\n      cursor = null;\r\n    \r\n      dispatch('create', shape);\r\n    }\r\n  }\r\n\r\n  const stopDrawing = () => {\r\n    const shape: Polygon = {\r\n      type: ShapeType.POLYGON, \r\n      geometry: {\r\n        bounds: boundsFromPoints(points),\r\n        points: [...points]\r\n      }\r\n    }\r\n\r\n    points = [];\r\n    cursor = null;\r\n  \r\n    dispatch('create', shape);\r\n  }\r\n\r\n  onMount(() => {\r\n    addEventListener('pointerdown', onPointerDown, true);\r\n    addEventListener('pointermove', onPointerMove);\r\n    addEventListener('pointerup', onPointerUp, true);\r\n    addEventListener('dblclick', onDblClick, true);\r\n  });\r\n</script>\r\n\r\n<g class=\"a9s-annotation a9s-rubberband\">\r\n  {#if cursor}\r\n    {@const coords = (isClosable ? points : [...points, cursor]).map(xy => xy.join(',')).join(' ')}\r\n      <polygon \r\n        class=\"a9s-outer\"\r\n        points={coords} />\r\n\r\n      <polygon \r\n        class=\"a9s-inner\"\r\n        points={coords} />\r\n        \r\n    {#if isClosable}\r\n      <rect \r\n        class=\"a9s-corner-handle\"\r\n        x={points[0][0] - handleSize / 2} \r\n        y={points[0][1] - handleSize / 2} \r\n        height={handleSize} \r\n        width={handleSize} />\r\n    {/if}\r\n  {/if}\r\n</g>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import { createEventDispatcher, onMount } from 'svelte';\r\n  import type { DrawingMode } from '../../../AnnotoriousOpts';\r\n  import { ShapeType, type Ellipse } from '../../../model';\r\n  import type { Transform } from '../..';\r\n\r\n  const dispatch = createEventDispatcher<{ create: Ellipse }>();\r\n  \r\n  /** Props **/\r\n  export let addEventListener: (type: string, fn: EventListener, capture?: boolean) => void;\r\n  export let drawingMode: DrawingMode\r\n  export let transform: Transform;\r\n  \r\n  let container: SVGGElement;\r\n\r\n  let origin: [x: number, y: number]; \r\n\r\n  let anchor: [number, number];\r\n\r\n  let x: number, y: number, w: number, h: number;\r\n\r\n  let isShiftPressed = false;\r\n\r\n  let isCtrlPressed = false;\r\n\r\n  let lastPointerDown: number;\r\n\r\n  let lastMoveEvent: PointerEvent;\r\n\r\n  const onPointerDown = (evt: PointerEvent) => {\r\n    lastPointerDown = performance.now();\r\n\r\n    if (drawingMode === 'drag') {\r\n      origin = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n      anchor = origin;\r\n\r\n      x = origin[0];\r\n      y = origin[1];\r\n      w = 1;\r\n      h = 1;\r\n    }\r\n  }\r\n\r\n  const updateShape = (maybeEvent?: PointerEvent) => {\r\n    const evt = maybeEvent || lastMoveEvent;\r\n\r\n    if (origin) {\r\n      anchor = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n\r\n      if (isCtrlPressed) {\r\n        const mw = 2 * Math.abs(anchor[0] - origin[0]);\r\n        const mh = 2 * Math.abs(anchor[1] - origin[1]);\r\n\r\n        w = isShiftPressed ? Math.max(mw, mh) : mw;\r\n        h = isShiftPressed ? w : mh;\r\n\r\n        x = Math.min(anchor[0], origin[0] - w / 2);\r\n        y = Math.min(anchor[1], origin[1] - h / 2);\r\n      } else {\r\n        const mw = Math.abs(anchor[0] - origin[0]);\r\n        const mh = Math.abs(anchor[1] - origin[1]);\r\n\r\n        w = isShiftPressed ? Math.max(mw, mh) : mw;\r\n        h = isShiftPressed ? w : mh;\r\n\r\n        x = Math.min(anchor[0], origin[0]);\r\n        y = Math.min(anchor[1], origin[1]);\r\n      }\r\n    }\r\n\r\n    if (maybeEvent)\r\n      lastMoveEvent = maybeEvent;\r\n  }\r\n    \r\n  const onPointerUp = (evt: PointerEvent) => {\r\n    if (drawingMode === 'click')\r\n      evt.stopImmediatePropagation();\r\n\r\n    const timeDifference = performance.now() - lastPointerDown;\r\n\r\n    if (drawingMode === 'click') {\r\n      // Not a single click - ignore\r\n      if (timeDifference > 300)\r\n        return;\r\n\r\n      evt.stopPropagation();\r\n\r\n      if (origin) {\r\n        stopDrawing();\r\n      } else {\r\n        // Start drawing\r\n        origin = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n        anchor = origin;\r\n\r\n        x = origin[0];\r\n        y = origin[1];\r\n        w = 1;\r\n        h = 1;\r\n      }\r\n    } else if (origin) {\r\n      if (timeDifference > 300 || w * h > 100) {\r\n        evt.stopPropagation();\r\n        stopDrawing();\r\n      } else {\r\n        origin = null;\r\n        anchor = null;\r\n\r\n        lastMoveEvent = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  const stopDrawing = () => {\r\n    // Require 4x4 pixels minimum\r\n    if (w * h > 15) {\r\n      const shape: Ellipse = {\r\n        type: ShapeType.ELLIPSE, \r\n        geometry: {\r\n          bounds: {\r\n            minX: x, \r\n            minY: y,\r\n            maxX: x + w,\r\n            maxY: y + h\r\n          },\r\n          cx: x + w / 2,\r\n          cy: y + h / 2,\r\n          rx: w / 2,\r\n          ry: h / 2\r\n        }\r\n      }\r\n\r\n      dispatch('create', shape);\r\n    }\r\n\r\n    origin = null;\r\n    anchor = null;\r\n\r\n    lastMoveEvent = undefined;\r\n  }\r\n\r\n  const onKeyDown = (evt: KeyboardEvent) => {\r\n    if (evt.key === 'Shift') {\r\n      isShiftPressed = true;  \r\n      updateShape();  \r\n    }\r\n\r\n    if (evt.key === 'Control') {\r\n      isCtrlPressed = true;\r\n      updateShape();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (evt: KeyboardEvent) => {\r\n    if (evt.key === 'Shift') {\r\n      isShiftPressed = false;\r\n      updateShape();  \r\n    }\r\n\r\n    if (evt.key === 'Control') {\r\n      isCtrlPressed = false;\r\n      updateShape();  \r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    document.addEventListener('keyup', onKeyUp);\r\n    document.addEventListener('keydown', onKeyDown);\r\n\r\n    addEventListener('pointerdown', onPointerDown);\r\n    addEventListener('pointermove', updateShape);\r\n    addEventListener('pointerup', onPointerUp);\r\n\r\n    return () => {\r\n      document.removeEventListener('keyup', onKeyUp);\r\n      document.removeEventListener('keydown', onKeyDown);\r\n    }\r\n  });\r\n</script>\r\n\r\n<g \r\n  bind:this={container}\r\n  class=\"a9s-annotation a9s-rubberband\">\r\n  \r\n  {#if origin}\r\n    <ellipse \r\n      class=\"a9s-outer\"\r\n      cx={x + w / 2} \r\n      cy={y + h / 2} \r\n      rx={w / 2} \r\n      ry={h / 2} />\r\n\r\n    <ellipse \r\n      class=\"a9s-inner\"\r\n      cx={x + w / 2} \r\n      cy={y + h / 2} \r\n      rx={w / 2} \r\n      ry={h / 2} />\r\n  {/if}\r\n</g>\r\n","import type { SvelteComponent } from 'svelte';\r\nimport { RubberbandRectangle } from './rectangle';\r\nimport { RubberbandPolygon } from './polygon';\r\nimport { RubberbandEllipse } from './ellipse';\r\nimport type { DrawingMode } from '../../AnnotoriousOpts';\r\n\r\nexport type DrawingTool = 'rectangle' | 'polygon' | string;\r\n\r\nexport type DrawingToolOpts = {\r\n\r\n  drawingMode?: DrawingMode;\r\n\r\n  [key: string]: string;\r\n\r\n}\r\n\r\nconst REGISTERED = new Map<DrawingTool, { tool: typeof SvelteComponent, opts?: DrawingToolOpts }>([\r\n  ['rectangle', { tool: RubberbandRectangle }],\r\n  ['polygon', { tool: RubberbandPolygon }],\r\n  ['ellipse', { tool : RubberbandEllipse }]\r\n]);\r\n\r\nexport const listDrawingTools = () => [...REGISTERED.keys()];\r\n\r\nexport const getTool = (name: string) => REGISTERED.get(name);\r\n  \r\nexport const registerTool = (name: string, tool: typeof SvelteComponent, opts?: DrawingToolOpts) =>\r\n  REGISTERED.set(name, { tool, opts });\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import type { DrawingStyle } from '@annotorious/core';\r\n  import type { Geometry, EllipseGeometry, ImageAnnotation } from '../../model';\r\n  import { computeStyle } from '../utils/styling';\r\n  \r\n  /** Props */\r\n  export let annotation: ImageAnnotation;\r\n  export let geom: Geometry;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n\r\n  $: computedStyle = computeStyle(annotation, style);\r\n\r\n  const { cx, cy, rx, ry } = geom as EllipseGeometry;\r\n</script>\r\n\r\n<g data-id={annotation.id}>\r\n  <ellipse\r\n    class=\"a9s-outer\"\r\n    style={computedStyle ? 'display:none;' : undefined}\r\n    cx={cx} \r\n    cy={cy} \r\n    rx={rx} \r\n    ry={ry} />\r\n\r\n  <ellipse\r\n    class=\"a9s-inner\"\r\n    style={computedStyle}\r\n    cx={cx} \r\n    cy={cy} \r\n    rx={rx} \r\n    ry={ry} />\r\n</g>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import type { DrawingStyle } from '@annotorious/core';\r\n  import type { Geometry, ImageAnnotation, PolygonGeometry } from '../../model';\r\n  import { computeStyle } from '../utils/styling';\r\n  \r\n  /** Props **/\r\n  export let annotation: ImageAnnotation;\r\n  export let geom: Geometry;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n\r\n  $: computedStyle = computeStyle(annotation, style);\r\n\r\n  const { points } = geom as PolygonGeometry;\r\n</script>\r\n\r\n<g data-id={annotation.id}>\r\n  <polygon \r\n    class=\"a9s-outer\"\r\n    style={computedStyle ? 'display:none;' : undefined}\r\n    points={points.map(xy => xy.join(',')).join(' ')} />\r\n\r\n  <polygon \r\n    class=\"a9s-inner\"\r\n    style={computedStyle}\r\n    points={points.map(xy => xy.join(',')).join(' ')} />\r\n</g>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import type { DrawingStyle } from '@annotorious/core';\r\n  import type { Geometry, ImageAnnotation, RectangleGeometry } from '../../model';\r\n  import { computeStyle } from '../utils/styling';\r\n  \r\n  /** Props **/\r\n  export let annotation: ImageAnnotation;\r\n  export let geom: Geometry;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n\r\n  $: computedStyle = computeStyle(annotation, style);\r\n\r\n  $: ({ x, y, w, h } = geom as RectangleGeometry);\r\n</script>\r\n\r\n<g data-id={annotation.id}>\r\n  <rect\r\n    class=\"a9s-outer\"\r\n    style={computedStyle ? 'display:none;' : undefined}\r\n    x={x} \r\n    y={y} \r\n    width={w} \r\n    height={h} />\r\n\r\n  <rect\r\n    class=\"a9s-inner\"\r\n    style={computedStyle}\r\n    x={x} \r\n    y={y} \r\n    width={w} \r\n    height={h} />\r\n</g>\r\n","export interface Transform { \r\n\r\n  elementToImage: (offsetX: number, offsetY: number) => [ number, number ] \r\n\r\n}\r\n\r\nexport const IdentityTransform: Transform = {\r\n\r\n  elementToImage:  (offsetX: number, offsetY: number) => ([ offsetX, offsetY ])\r\n\r\n}\r\n\r\nexport const createSVGTransform = (svg: SVGSVGElement): Transform => ({\r\n\r\n  elementToImage: (offsetX: number, offsetY: number) => {\r\n    const bbox = svg.getBoundingClientRect();\r\n\r\n    const pt = svg.createSVGPoint();\r\n    pt.x = offsetX + bbox.x;\r\n    pt.y = offsetY + bbox.y;\r\n  \r\n    const { x, y } = pt.matrixTransform(svg.getScreenCTM().inverse());\r\n    return [x, y];\r\n  }\r\n\r\n});","import { createEventDispatcher } from 'svelte';\r\nimport type { SvelteImageAnnotationStore } from '../state';\r\nimport type { ImageAnnotation } from '../model';\r\nimport { isTouch } from './utils';\r\n\r\nexport interface SVGAnnotationLayerPointerEvent {\r\n    \r\n  originalEvent: PointerEvent;\r\n  \r\n  annotation?: ImageAnnotation;\r\n\r\n}\r\n\r\n// Maximum amount of ms between pointer down and up to make it a click\r\nconst MAX_CLICK_DURATION = 250;\r\n\r\nexport const addEventListeners = (svg: SVGSVGElement, store: SvelteImageAnnotationStore) => {\r\n  const dispatch = createEventDispatcher<{ click: SVGAnnotationLayerPointerEvent}>();\r\n\r\n  let lastPointerDown: number;\r\n\r\n  const onPointerDown = () =>\r\n    lastPointerDown = performance.now();\r\n\r\n  const onPointerUp = (evt: PointerEvent) => {\r\n    const duration = performance.now() - lastPointerDown;\r\n\r\n    if (duration < MAX_CLICK_DURATION) {\r\n      const { x, y } = getSVGPoint(evt, svg);\r\n\r\n      const annotation = store.getAt(x, y);\r\n\r\n      if (annotation)\r\n        dispatch('click', { originalEvent: evt, annotation });\r\n      else\r\n        dispatch('click', { originalEvent: evt });\r\n    }\r\n  }\r\n\r\n  return { onPointerDown, onPointerUp };\r\n}\r\n\r\nconst getSVGPoint = (evt: PointerEvent, svg: SVGSVGElement) => {\r\n  const pt = svg.createSVGPoint();\r\n  const bbox = svg.getBoundingClientRect();\r\n\r\n  const x = evt.clientX - bbox.x;\r\n  const y = evt.clientY - bbox.y;\r\n\r\n  const { left, top } = svg.getBoundingClientRect();\r\n  pt.x = x + left;\r\n  pt.y = y + top;\r\n\r\n  return pt.matrixTransform(svg.getScreenCTM().inverse());\r\n}","<script type=\"ts\" lang=\"ts\">\r\n  import { onMount, type SvelteComponent } from 'svelte';\r\n  import { v4 as uuidv4 } from 'uuid';\r\n  import type { DrawingStyle, StoreChangeEvent, User } from '@annotorious/core';\r\n  import { ShapeType } from '../model';\r\n  import type { ImageAnnotation, Shape} from '../model';\r\n  import { getEditor, EditorMount } from './editors';\r\n  import { Ellipse, Polygon, Rectangle} from './shapes';\r\n  import { getTool, listDrawingTools, ToolMount } from './tools';\r\n  import { enableResponsive } from './utils';\r\n  import { createSVGTransform } from './Transform';\r\n  import { addEventListeners } from './SVGAnnotationLayerPointerEvent';\r\n  import type { SvelteImageAnnotatorState } from 'src/state';\r\n  import type { DrawingMode } from 'src/AnnotoriousOpts';\r\n\r\n  /** Props **/\r\n  export let drawingEnabled: boolean;\r\n  export let image: HTMLImageElement | HTMLCanvasElement;\r\n  export let preferredDrawingMode: DrawingMode;\r\n  export let state: SvelteImageAnnotatorState;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n  export let toolName: string = listDrawingTools().length > 0 ? listDrawingTools()[0] : undefined;\r\n  export let user: User;\r\n\r\n  $: ({ tool, opts } = getTool(toolName));\r\n\r\n  $: drawingMode = opts?.drawingMode || preferredDrawingMode;\r\n\r\n  /** Drawing tool layer **/\r\n  let drawingEl: SVGGElement;\r\n\r\n  /** Responsive scaling **/\r\n  let svgEl: SVGSVGElement;\r\n    \r\n  let scale: ReturnType<typeof enableResponsive>;\r\n\r\n  onMount(() => scale = enableResponsive(image, svgEl));\r\n\r\n  $: transform = createSVGTransform(svgEl);\r\n\r\n  /** Selection tracking */\r\n  const { selection, store } = state;\r\n\r\n  $: ({ onPointerDown, onPointerUp } = addEventListeners(svgEl, store));\r\n\r\n  let storeObserver = null;\r\n\r\n  let editableAnnotations: ImageAnnotation[] = null;\r\n\r\n  $: isEditable = (a: ImageAnnotation) => $selection.selected.find(s => s.id === a.id && s.editable);\r\n\r\n  $: trackSelection($selection.selected);\r\n\r\n  const trackSelection = (selected: { id: string, editable?: boolean }[]) => {\r\n    store.unobserve(storeObserver);\r\n\r\n    // Track only editable annotations\r\n    const editableIds = \r\n      selected.filter(({ editable }) => editable).map(({ id }) => id);\r\n\r\n    if (editableIds.length > 0) {\r\n      // Resolve selected IDs from the store\r\n      editableAnnotations = editableIds.map(id => store.getAnnotation(id));\r\n\r\n      // Track updates on the editable annotations\r\n      storeObserver = (event: StoreChangeEvent<ImageAnnotation>) => {\r\n        const { updated } = event.changes;\r\n        editableAnnotations = updated.map(change => change.newValue);\r\n      }   \r\n      \r\n      store.observe(storeObserver, { annotations: editableIds });\r\n    } else {\r\n      editableAnnotations = null;\r\n    }\r\n  }\r\n\r\n  const onSelectionCreated = <T extends Shape>(evt: CustomEvent<T>) => {\r\n    const id = uuidv4();\r\n\r\n    const annotation: ImageAnnotation = {\r\n      id,\r\n      bodies: [],\r\n      target: {\r\n        annotation: id,\r\n        selector: evt.detail,\r\n        creator: user,\r\n        created: new Date()\r\n      }\r\n    };\r\n\r\n    store.addAnnotation(annotation);\r\n\r\n    selection.setSelected(annotation.id);\r\n  }\r\n\r\n  const onChangeSelected = (annotation: ImageAnnotation) => (event: CustomEvent<Shape>) => {  \r\n    const { target } = annotation;\r\n\r\n    // We don't consider a shape edit an 'update' if it happens within 10mins\r\n    const GRACE_PERIOD = 10 * 60 * 1000;\r\n\r\n    const isUpdate = \r\n      target.creator?.id !== user.id ||\r\n      !target.created ||\r\n      new Date().getTime() - target.created.getTime() > GRACE_PERIOD;\r\n\r\n    store.updateTarget({\r\n      ...target,\r\n      selector: event.detail,\r\n      created: isUpdate ? target.created : new Date(),\r\n      updated: isUpdate ? new Date() : null,\r\n      updatedBy: isUpdate ? user : null\r\n    });\r\n  }\r\n</script>\r\n\r\n<svg\r\n  bind:this={svgEl}\r\n  class=\"a9s-annotationlayer\"\r\n  class:drawing={tool}\r\n  on:pointerup={onPointerUp}\r\n  on:pointerdown={onPointerDown}>\r\n  \r\n  <g>\r\n    {#each $store as annotation}\r\n      {#if !isEditable(annotation)}\r\n        {@const selector = annotation.target.selector}\r\n        {#key annotation.id}\r\n          {#if (selector.type === ShapeType.ELLIPSE)}\r\n            <Ellipse annotation={annotation} geom={selector.geometry} style={style} />\r\n          {:else if (selector.type === ShapeType.RECTANGLE)}\r\n            <Rectangle annotation={annotation} geom={selector.geometry} style={style} />\r\n          {:else if (selector.type === ShapeType.POLYGON)}\r\n            <Polygon annotation={annotation} geom={selector.geometry} style={style} />\r\n          {/if}\r\n        {/key}\r\n      {/if}\r\n    {/each}\r\n  </g>\r\n\r\n  <g \r\n    bind:this={drawingEl}\r\n    class=\"drawing\" >\r\n    {#if drawingEl}\r\n      {#if editableAnnotations}\r\n        {#each editableAnnotations as editable}\r\n          {#key editable.id}\r\n            <EditorMount\r\n              target={drawingEl}\r\n              editor={getEditor(editable.target.selector)}\r\n              annotation={editable}\r\n              style={style}\r\n              transform={transform}\r\n              viewportScale={$scale}\r\n              on:change={onChangeSelected(editable)} />\r\n          {/key}\r\n        {/each}\r\n      {:else if (tool && drawingEnabled)} \r\n        {#key toolName}\r\n          <ToolMount \r\n            target={drawingEl}\r\n            tool={tool}\r\n            drawingMode={drawingMode}\r\n            transform={transform}\r\n            viewportScale={$scale}\r\n            on:create={onSelectionCreated} />\r\n        {/key}\r\n      {/if}\r\n    {/if}\r\n  </g>\r\n</svg>\r\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","import RBush from 'rbush';\r\nimport { ShapeType,computeArea, intersects } from '../model';\r\nimport type { ImageAnnotationTarget } from '../model';\r\n\r\ninterface IndexedTarget {\r\n\r\n  minX: number;\r\n\r\n  minY: number;\r\n\r\n  maxX: number;\r\n\r\n  maxY: number;\r\n\r\n  target: ImageAnnotationTarget;\r\n\r\n}\r\n\r\nexport const createSpatialTree = () => {\r\n\r\n  const tree = new RBush<IndexedTarget>();\r\n\r\n  const index = new Map<string, IndexedTarget>();\r\n\r\n  const all = () => [...index.values()];\r\n\r\n  const clear = () => {\r\n    tree.clear();\r\n    index.clear();\r\n  }\r\n\r\n  const insert = (target: ImageAnnotationTarget) => {\r\n    const { minX, minY, maxX, maxY } = target.selector.geometry.bounds;\r\n\r\n    const t = { minX, minY, maxX, maxY, target };\r\n\r\n    tree.insert(t);\r\n    index.set(target.annotation, t);\r\n  };\r\n\r\n  const remove = (target: ImageAnnotationTarget) => {\r\n    const item = index.get(target.annotation);\r\n    tree.remove(item);\r\n    index.delete(target.annotation);\r\n  };\r\n\r\n  const update = (previous: ImageAnnotationTarget, updated: ImageAnnotationTarget) => {\r\n    remove(previous);\r\n    insert(updated);\r\n  };\r\n\r\n  const set = (targets: ImageAnnotationTarget[], replace: boolean = true) => {\r\n    if (replace) \r\n      clear();\r\n\r\n    const indexedTargets = targets.map(target => {\r\n      const { minX, minY, maxX, maxY } = target.selector.geometry.bounds;\r\n      return { minX, minY, maxX, maxY, target };\r\n    });\r\n\r\n    indexedTargets.forEach(t => index.set(t.target.annotation, t));\r\n    tree.load(indexedTargets);\r\n  };\r\n\r\n  const getAt = (x: number, y: number): ImageAnnotationTarget | null => {\r\n    const idxHits = tree.search({\r\n      minX: x,\r\n      minY: y,\r\n      maxX: x,\r\n      maxY: y\r\n    }).map(item => item.target);\r\n\r\n    // Exact hit test on shape (not needed for rectangles!)\r\n    const exactHits = idxHits.filter(target => {\r\n      return (target.selector.type === ShapeType.RECTANGLE) ||\r\n        intersects(target.selector, x, y);\r\n    });\r\n\r\n    // Get smallest shape\r\n    if (exactHits.length > 0) {\r\n      exactHits.sort((a, b) => computeArea(a.selector) - computeArea(b.selector));\r\n      return exactHits[0];\r\n    }\r\n  };\r\n\r\n  const getIntersecting = (x: number, y: number, width: number, height: number) =>\r\n    tree.search({\r\n      minX: x,\r\n      minY: y,\r\n      maxX: x + width,\r\n      maxY: y + height\r\n    }).map(item => item.target);\r\n  \r\n  const size = () => tree.all().length;\r\n\r\n  return {\r\n    all,\r\n    clear,\r\n    getAt,\r\n    getIntersecting,\r\n    insert,\r\n    remove,\r\n    set,\r\n    size,\r\n    update\r\n  }\r\n\r\n}\r\n","import type { ImageAnnotation, ImageAnnotationTarget } from '../model';\r\nimport type { AnnotoriousOpts } from '../AnnotoriousOpts';\r\nimport { createSpatialTree } from './spatialTree';\r\nimport { \r\n  createViewportState,\r\n  toSvelteStore,\r\n  type AnnotatorState, \r\n  type HoverState,\r\n  type SelectionState\r\n} from '@annotorious/core';\r\nimport { \r\n  createHoverState, \r\n  createSelectionState, \r\n  createStore\r\n} from '@annotorious/core';\r\nimport type { \r\n  ImageAnnotationStore,\r\n  SvelteImageAnnotationStore, \r\n  SvelteImageAnnotatorState\r\n} from './ImageAnnotationStore';\r\n\r\nexport type ImageAnnotatorState<T extends ImageAnnotationStore = ImageAnnotationStore> = AnnotatorState<ImageAnnotation> & {\r\n\r\n  store: T;\r\n\r\n  selection: SelectionState<ImageAnnotation>;\r\n\r\n  hover: HoverState<ImageAnnotation>;\r\n\r\n}\r\n\r\nexport const createImageAnnotatorState = <E extends unknown>(\r\n  opts: AnnotoriousOpts<ImageAnnotation, E>\r\n): ImageAnnotatorState<ImageAnnotationStore> => {\r\n\r\n  const store = createStore<ImageAnnotation>();\r\n\r\n  const tree = createSpatialTree();\r\n\r\n  const selection = createSelectionState(store, opts.pointerSelectAction);\r\n\r\n  const hover = createHoverState(store);\r\n\r\n  const viewport = createViewportState();\r\n\r\n  store.observe(({ changes }) => {\r\n    tree.set(changes.created.map(a => a.target as ImageAnnotationTarget), false);\r\n    \r\n    changes.deleted.forEach(a => tree.remove(a.target as ImageAnnotationTarget));\r\n    \r\n    changes.updated.forEach(({ oldValue, newValue }) =>\r\n      tree.update(oldValue.target, newValue.target));\r\n  });\r\n\r\n  const getAt = (x: number, y: number): ImageAnnotation | undefined => {\r\n    const target = tree.getAt(x, y);\r\n    return target ? store.getAnnotation(target.annotation) : undefined; \r\n  }\r\n\r\n  const getIntersecting = (x: number, y: number, width: number, height: number) =>\r\n    tree.getIntersecting(x, y, width, height).map(target => store.getAnnotation(target.annotation));\r\n\r\n  return {\r\n    store: {\r\n      ...store,\r\n      getAt,\r\n      getIntersecting\r\n    } as ImageAnnotationStore,\r\n    selection,\r\n    hover,\r\n    viewport\r\n  }\r\n\r\n}\r\n\r\nexport const createSvelteImageAnnotatorState = <E extends unknown>(  \r\n  opts: AnnotoriousOpts<ImageAnnotation, E>\r\n): SvelteImageAnnotatorState => {\r\n\r\n  const state = createImageAnnotatorState(opts);\r\n  \r\n  return {\r\n    ...state,\r\n    store: toSvelteStore(state.store) as SvelteImageAnnotationStore\r\n  }\r\n\r\n}\r\n  ","import type { Theme } from '../../AnnotoriousOpts';\r\n\r\nexport const sampleBrightness = (imageOrCanvas: HTMLElement) => {\r\n\r\n  let canvas: HTMLCanvasElement;\r\n\r\n  let context: CanvasRenderingContext2D;\r\n\r\n  if (imageOrCanvas.nodeName === 'CANVAS') {\r\n    canvas = imageOrCanvas as HTMLCanvasElement;\r\n    context = canvas.getContext('2d', { willReadFrequently: true });\r\n  } else {\r\n    const img = imageOrCanvas as HTMLImageElement;\r\n    // Copy image to in-memory canvas for processing\r\n    canvas = document.createElement('canvas');\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n\r\n    context = canvas.getContext('2d', { willReadFrequently: true });\r\n    context.drawImage(img, 0, 0, img.width, img.height);\r\n  }\r\n\r\n  let totalBrightness = 0;\r\n\r\n  // Sample a grid of points spaced 10% width/height apart (= 9 x 9 samples)\r\n  for (let i = 1; i < 10; i++) {\r\n    for (let j = 1; j < 10; j++) {\r\n      const x = Math.round(j * canvas.width / 10);\r\n      const y = Math.round(i * canvas.height / 10);\r\n\r\n      const pixelData = context.getImageData(x, y, 1, 1).data;\r\n      const brightness = (0.299 * pixelData[0] + 0.587 * pixelData[1] + 0.114 * pixelData[2]) / 255;\r\n      totalBrightness += brightness;\r\n    }\r\n  }\r\n\r\n  return totalBrightness / 81;\r\n}\r\n\r\nexport const detectTheme = (imageOrCanvas: HTMLElement) => {\r\n  const brightness = sampleBrightness(imageOrCanvas);\r\n  const theme = brightness > 0.6 ? 'dark' : 'light'\r\n\r\n  console.log(`[Annotorious] Image brightness: ${brightness.toFixed(1)}. Setting ${theme} theme.`);\r\n\r\n  return theme;\r\n}\r\n\r\nexport const setTheme = (imageOrCanvas: HTMLElement, container: HTMLElement, theme: Theme) =>\r\n  container.setAttribute('data-theme', theme === 'auto' ? detectTheme(imageOrCanvas) : theme);","import type { Annotation, DrawingStyle, FormatAdapter, PointerSelectAction } from '@annotorious/core';\r\nimport type { ImageAnnotation } from './model';\r\n\r\nexport interface AnnotoriousOpts<I extends Annotation = ImageAnnotation, E extends unknown = ImageAnnotation> {\r\n\r\n  adapter?: FormatAdapter<I, E>;\r\n\r\n  autoSave?: boolean;\r\n\r\n  drawingEnabled?: boolean;\r\n\r\n  // 'click': starts on single click, user cannot select unless drawingEnabled = false\r\n  // 'drag': starts drawing on drag, single click always selects\r\n  drawingMode?: DrawingMode;\r\n\r\n  pointerSelectAction?: PointerSelectAction | ((a: I) => PointerSelectAction);\r\n\r\n  style?: DrawingStyle | ((annotation: I) => DrawingStyle);\r\n\r\n  theme?: Theme;\r\n\r\n}\r\n\r\nexport type DrawingMode = 'click' | 'drag';\r\n\r\nexport type Theme = 'dark' | 'light' | 'auto';\r\n\r\nexport const fillDefaults = <I extends ImageAnnotation = ImageAnnotation, E extends unknown = ImageAnnotation> (\r\n  opts: AnnotoriousOpts<I, E>,\r\n  defaults: AnnotoriousOpts<I, E>\r\n): AnnotoriousOpts<I, E> => {\r\n\r\n  return {\r\n    ...opts,\r\n    drawingEnabled: opts.drawingEnabled === undefined ? defaults.drawingEnabled : opts.drawingEnabled,\r\n    drawingMode: opts.drawingMode || defaults.drawingMode,\r\n    pointerSelectAction: opts.pointerSelectAction || defaults.pointerSelectAction,\r\n    theme: opts.theme || defaults.theme\r\n  };\r\n\r\n};\r\n\r\n\r\n\r\n\r\n","import type { Annotation, UndoStack } from '@annotorious/core';\r\n\r\nconst isMac = navigator.userAgent.indexOf('Mac OS X') !== -1;\r\n\r\nexport const initKeyboardCommands = <T extends Annotation>(\r\n  undoStack: UndoStack<T>,\r\n  container?: Element \r\n) => {\r\n\r\n  const el = container || document;\r\n\r\n  const onWinKeyDown = (event: KeyboardEvent) => {\r\n    if (event.key === 'Z' && event.ctrlKey) {\r\n      undoStack.undo();\r\n    } else if (event.key === 'Y' && event.ctrlKey) {\r\n      undoStack.redo()\r\n    }\r\n  };\r\n\r\n  const onMacKeyDown = (event: KeyboardEvent) => {\r\n    if (event.key === 'z' && event.metaKey) {\r\n      if (event.shiftKey) {\r\n        undoStack.redo()\r\n      } else {\r\n        undoStack.undo();\r\n      }\r\n    }\r\n  }\r\n\r\n  const destroy = () => {\r\n    if (isMac) {\r\n      el.removeEventListener('keydown', onMacKeyDown);\r\n    } else {\r\n      el.removeEventListener('keydown', onWinKeyDown);\r\n    }\r\n  }\r\n\r\n  if (isMac)\r\n    el.addEventListener('keydown', onMacKeyDown);\r\n  else\r\n    el.addEventListener('keydown', onWinKeyDown);\r\n\r\n  return { \r\n    destroy\r\n  }\r\n}\r\n","import type { SvelteComponent } from 'svelte';\r\nimport { PointerSelectAction, type Annotator, type DrawingStyle, type Filter, type User } from '@annotorious/core';\r\nimport { createAnonymousGuest, createBaseAnnotator, createLifecyleObserver, createUndoStack } from '@annotorious/core';\r\nimport { registerEditor } from './annotation/editors';\r\nimport { getTool, registerTool, listDrawingTools, type DrawingTool } from './annotation/tools';\r\nimport { SVGAnnotationLayer } from './annotation';\r\nimport type { DrawingToolOpts, SVGAnnotationLayerPointerEvent } from './annotation';\r\nimport type { ImageAnnotation, ShapeType } from './model';\r\nimport { createSvelteImageAnnotatorState } from './state';\r\nimport { setTheme as _setTheme } from './themes';\r\nimport { fillDefaults, type Theme } from './AnnotoriousOpts';\r\nimport type { AnnotoriousOpts } from './AnnotoriousOpts';\r\nimport { initKeyboardCommands } from './keyboardCommands';\r\n\r\nimport './Annotorious.css';\r\nimport './themes/dark/index.css';\r\nimport './themes/light/index.css';\r\n\r\nexport interface ImageAnnotator<E extends unknown = ImageAnnotation> extends Annotator<ImageAnnotation, E> { \r\n\r\n  listDrawingTools(): string[];\r\n\r\n  registerDrawingTool(name: string, tool: typeof SvelteComponent, opts?: DrawingToolOpts): void;\r\n\r\n  registerShapeEditor(shapeType: ShapeType, editor: typeof SvelteComponent): void;\r\n\r\n  setDrawingTool(name: DrawingTool): void; \r\n\r\n  setDrawingEnabled(enabled: boolean): void;\r\n\r\n  setTheme(theme: Theme): void;\r\n\r\n}\r\n\r\nexport const createImageAnnotator = <E extends unknown = ImageAnnotation>(\r\n  image: string | HTMLImageElement | HTMLCanvasElement, \r\n  options: AnnotoriousOpts<ImageAnnotation, E> = {}\r\n): ImageAnnotator<E> => {\r\n\r\n  if (!image)\r\n    throw 'Missing argument: image';\r\n\r\n  const img = (typeof image === 'string' ? \r\n    document.getElementById(image) : image) as HTMLImageElement | HTMLCanvasElement;\r\n\r\n  const opts = fillDefaults<ImageAnnotation, E>(options, {\r\n    drawingEnabled: true,\r\n    drawingMode: 'drag',\r\n    pointerSelectAction: PointerSelectAction.EDIT,\r\n    theme: 'light'\r\n  });\r\n\r\n  const state = createSvelteImageAnnotatorState(opts);\r\n\r\n  const { selection, store } = state;\r\n\r\n  const undoStack = createUndoStack(store);\r\n\r\n  const lifecycle = createLifecyleObserver<ImageAnnotation, E>(\r\n    state, undoStack, opts.adapter, opts.autoSave\r\n  );\r\n\r\n  // We'll wrap the image in a container DIV.\r\n  const container = document.createElement('DIV');\r\n  container.style.position = 'relative';\r\n  container.style.display = 'inline-block';\r\n\r\n  // Wrapper div has unwanted margin at the bottom otherwise!\r\n  img.style.display = 'block';\r\n\r\n  img.parentNode.insertBefore(container, img);\r\n  container.appendChild(img);\r\n\r\n  const keyboardCommands = initKeyboardCommands(undoStack);\r\n\r\n  let currentUser: User = createAnonymousGuest();\r\n\r\n  _setTheme(img, container, opts.theme);\r\n\r\n  const annotationLayer = new SVGAnnotationLayer({\r\n    target: container,\r\n    props: { \r\n      drawingEnabled: opts.drawingEnabled, \r\n      image: img, \r\n      preferredDrawingMode: opts.drawingMode,\r\n      state, \r\n      style: opts.style, \r\n      user: currentUser\r\n    }\r\n  });\r\n\r\n  annotationLayer.$on('click', (evt: CustomEvent<SVGAnnotationLayerPointerEvent>) => {\r\n    const { originalEvent, annotation } = evt.detail;\r\n    if (annotation)\r\n      selection.clickSelect(annotation.id, originalEvent);\r\n    else if (!selection.isEmpty())\r\n      selection.clear();\r\n  });\r\n\r\n  /*************************/\r\n  /*      External API     */\r\n  /******++++++*************/\r\n\r\n  // Most of the external API functions are covered in the base annotator\r\n  const base = createBaseAnnotator<ImageAnnotation, E>(state, undoStack, opts.adapter);\r\n\r\n  const destroy = () => {\r\n    // Destroy Svelte annotation layer\r\n    annotationLayer.$destroy();\r\n\r\n    // Unwrap the image\r\n    container.parentNode.insertBefore(img, container);\r\n    container.parentNode.removeChild(container);\r\n\r\n    // Other cleanup actions\r\n    keyboardCommands.destroy();\r\n    undoStack.destroy();\r\n  }\r\n\r\n  const getUser = () => currentUser;\r\n\r\n  const registerDrawingTool = (name: string, tool: typeof SvelteComponent, opts?: DrawingToolOpts) =>\r\n    registerTool(name, tool, opts);\r\n\r\n  const registerShapeEditor = (shapeType: ShapeType, editor: typeof SvelteComponent) =>\r\n    registerEditor(shapeType, editor);\r\n\r\n  const setDrawingTool = (name: DrawingTool) => {\r\n    // Validate that the tool exists\r\n    const toolSpec = getTool(name);\r\n    if (!toolSpec)\r\n      throw `No drawing tool named ${name}`;\r\n\r\n    annotationLayer.$set({ toolName: name })\r\n  }\r\n\r\n  const setDrawingEnabled = (enabled: boolean) =>\r\n    annotationLayer.$set({ drawingEnabled: enabled });\r\n  \r\n  const setFilter = (filter: Filter) => {\r\n    console.warn('Filter not implemented yet');\r\n  }\r\n\r\n  const setStyle = (style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) | undefined) =>\r\n    annotationLayer.$set({ style });\r\n\r\n  const setTheme = (theme: Theme) => _setTheme(img, container, theme);\r\n  \r\n  const setUser = (user: User) => {\r\n    currentUser = user;\r\n    annotationLayer.$set({ user });\r\n  }\r\n\r\n  return {\r\n    ...base,\r\n    destroy,\r\n    getUser,\r\n    listDrawingTools,\r\n    on: lifecycle.on,\r\n    off: lifecycle.off,\r\n    registerDrawingTool,\r\n    registerShapeEditor,\r\n    setDrawingEnabled,\r\n    setDrawingTool,\r\n    setFilter,\r\n    setStyle,\r\n    setTheme,\r\n    setUser,\r\n    state\r\n  }\r\n\r\n}\r\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","run_all","fns","is_function","thing","safe_not_equal","a","b","is_empty","obj","subscribe","store","callbacks","callback","unsub","component_subscribe","component","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","get_slot_changes","dirty","lets","merged","len","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","get_all_dirty_from_scope","length","append","target","node","insert","anchor","detach","destroy_each","iterations","detaching","svg_element","name","text","data","space","empty","listen","event","handler","options","attr","attribute","value","children","element","toggle_class","toggle","custom_event","type","detail","bubbles","cancelable","current_component","set_current_component","get_current_component","onMount","createEventDispatcher","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","flush","add_render_callback","seen_callbacks","flushidx","saved_component","update","e","$$","flush_render_callbacks","filtered","targets","c","outroing","outros","group_outros","check_outros","transition_in","block","local","transition_out","ensure_array_like","array_like_or_iterator","create_component","mount_component","fragment","after_update","new_on_destroy","destroy_component","make_dirty","init","instance","create_fragment","not_equal","props","append_styles","parent_component","ready","ret","rest","nodes","SvelteComponent","__publicField","index","PUBLIC_VERSION","ShapeType","Utils","registerShapeUtil","util","computeArea","shape","intersects","x","y","boundsFromPoints","points","minX","minY","maxX","maxY","EllipseUtil","cx","cy","rx","ry","rot","cos","sin","dx","dy","tdx","tdy","PolygonUtil","polygon","area","j","inside","xi","yi","xj","yj","RectangleUtil","rect","parseFragmentSelector","fragmentOrSelector","invertY","regex","matches","_","prefix","unit","d","w","h","serializeFragmentSelector","geometry","SVG_NAMESPACE","sanitize","doc","cleanEl","el","scripts","insertSVGNamespace","originalDoc","namespaced","parseSVGXML","isPrefixDeclared","isDefaultNamespaceSVG","parseSVGPolygon","str","p","parseSVGEllipse","bounds","parseSVGSelector","valueOrSelector","serializeSVGSelector","geom","xy","getRandomValues","rnds8","rng","byteToHex","unsafeStringify","arr","offset","randomUUID","native","v4","buf","rnds","Y","B","n","t","$","W","U","be","q","V","ve","s","f","A","G","L","T","R","Z","K","ee","te","M","O","oe","o","u","se","ie","ye","r","l","v","D","C","m","E","g","S","I","Ue","P","de","Le","Se","Te","N","re","De","ae","ce","le","ue","Re","fe","pe","xe","Be","W3CImageFormat","source","serialized","parseW3CImageAnnotation","annotation","serializeW3CImageAnnotation","annotationId","uuidv4","creator","created","updatedBy","updated","body","bodies","parseW3CBodies","w3cSelector","selector","parseW3CUser","w3CSelector","serializeW3CBodies","rect_x_value","rect_y_value","Handle","each_value","polygon0","polygon0_points_value","func","polygon1","polygon1_points_value","func_1","grab","$$props","computedStyle","transform","viewportScale","editor","handle","delta","idx","$$invalidate","handleSize","rect0","rect0_x_value","rect0_y_value","rect0_width_value","rect0_height_value","rect1","rect1_x_value","rect1_y_value","rect1_width_value","rect1_height_value","rect2","rect2_x_value","rect2_y_value","rect2_width_value","rect3","rect3_x_value","rect3_y_value","rect3_height_value","rect4","rect4_x_value","rect4_y_value","rect4_width_value","rect5","rect5_x_value","rect5_y_value","rect5_height_value","rect6","rect6_x_value","rect6_y_value","rect7","rect7_y_value","rect9","rect9_x_value","rect8","rectangle","initialBounds","x0","y0","x1","y1","ellipse0","ellipse0_cx_value","ellipse0_cy_value","ellipse0_rx_value","ellipse0_ry_value","ellipse1","ellipse1_cx_value","ellipse1_cy_value","ellipse1_rx_value","ellipse1_ry_value","ellipse","REGISTERED","RectangleEditor","PolygonEditor","EllipseEditor","getEditor","registerEditor","shapeType","dispatch","grabbedHandle","origin","initialShape","onGrab","evt","onPointerMove","onRelease","computeStyle","style","computed","fill","fillOpacity","css","editorComponent","drawingMode","tool","toolComponent","svg","cleanup","addEventListener","capture","create_if_block","lastPointerDown","onPointerDown","onPointerUp","timeDifference","stopDrawing","distance","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","setSize","image","naturalWidth","naturalHeight","width","height","img","enableResponsive","resizeObserver","svgBounds","scale","isTouch","child_ctx","create_if_block_1","get_if_ctx","CLOSE_DISTANCE","cursor","isClosable","timeStamp","offsetX","offsetY","point","onDblClick","container","isShiftPressed","isCtrlPressed","lastMoveEvent","updateShape","maybeEvent","mw","mh","onKeyDown","onKeyUp","$$value","RubberbandRectangle","RubberbandPolygon","RubberbandEllipse","listDrawingTools","getTool","registerTool","opts","g_data_id_value","IdentityTransform","createSVGTransform","bbox","pt","MAX_CLICK_DURATION","addEventListeners","getSVGPoint","left","top","previous_key","polygon_changes","rectangle_changes","ellipse_changes","show_if","each_blocks","editormount_changes","g0","g1","drawingEnabled","preferredDrawingMode","state","toolName","user","drawingEl","svgEl","selection","storeObserver","editableAnnotations","trackSelection","selected","editableIds","editable","id","change","onSelectionCreated","onChangeSelected","_a","GRACE_PERIOD","isUpdate","isEditable","$selection","quickselect","right","compare","quickselectStep","defaultCompare","z","sd","newLeft","newRight","swap","tmp","RBush","maxEntries","result","toBBox","nodesToSearch","child","childBBox","contains","tmpNode","item","createNode","equalsFn","path","indexes","parent","goingUp","findItem","items","calcBBox","N2","N1","multiSelect","right2","right3","level","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","extend","splitIndex","newNode","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","destNode","stack","mid","createSpatialTree","tree","all","clear","remove","exactHits","replace","indexedTargets","previous","createImageAnnotatorState","createStore","createSelectionState","hover","createHoverState","viewport","createViewportState","changes","oldValue","newValue","createSvelteImageAnnotatorState","toSvelteStore","sampleBrightness","imageOrCanvas","canvas","context","totalBrightness","pixelData","brightness","detectTheme","theme","setTheme","fillDefaults","defaults","isMac","initKeyboardCommands","undoStack","onWinKeyDown","onMacKeyDown","destroy","createImageAnnotator","PointerSelectAction","createUndoStack","lifecycle","createLifecyleObserver","keyboardCommands","currentUser","createAnonymousGuest","_setTheme","annotationLayer","SVGAnnotationLayer","originalEvent","base","createBaseAnnotator","getUser","registerDrawingTool","registerShapeEditor","setDrawingTool","setDrawingEnabled","enabled","setFilter","filter","setStyle","setUser"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,17,18,19,20,21,34,46,47]}