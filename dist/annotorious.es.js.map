{"version":3,"file":"annotorious.es.js","sources":["../node_modules/svelte/internal/index.mjs","../src/model/core/Shape.ts","../src/model/core/shapeUtils.ts","../src/model/core/ellipse/ellipseUtils.ts","../src/model/core/polygon/polygonUtils.ts","../src/model/core/rectangle/rectangleUtils.ts","../src/model/core/freehand/freehandUtils.ts","../src/model/w3c/fragment/FragmentSelector.ts","../src/model/w3c/svg/SVG.ts","../node_modules/perfect-freehand/dist/esm/index.js","../src/annotation/utils/simplify.js","../src/annotation/utils/path.ts","../src/model/w3c/svg/SVGSelector.ts","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/@annotorious/core/dist/annotorious-core.es.js","../src/model/w3c/W3CImageFormatAdapter.ts","../src/annotation/editors/polygon/PolygonEditor.svelte","../src/annotation/editors/rectangle/RectangleEditor.svelte","../src/annotation/editors/ellipse/EllipseEditor.svelte","../src/annotation/utils/styling.ts","../src/annotation/editors/freehand/FreehandEditor.svelte","../src/annotation/editors/editorsRegistry.ts","../src/annotation/editors/Handle.ts","../src/annotation/editors/Editor.svelte","../src/annotation/editors/EditorMount.svelte","../src/annotation/tools/ToolMount.svelte","../src/annotation/tools/rectangle/RubberbandRectangle.svelte","../src/annotation/utils/math.ts","../node_modules/svelte/store/index.mjs","../src/annotation/utils/responsive.ts","../src/annotation/utils/touch.ts","../src/annotation/tools/polygon/RubberbandPolygon.svelte","../src/annotation/tools/ellipse/RubberbandEllipse.svelte","../src/annotation/tools/freehand/RubberbandFreehand.svelte","../src/annotation/tools/drawingToolsRegistry.ts","../src/annotation/shapes/Ellipse.svelte","../src/annotation/shapes/Polygon.svelte","../src/annotation/shapes/Rectangle.svelte","../src/annotation/shapes/Freehand.svelte","../src/annotation/Transform.ts","../src/annotation/SVGAnnotationLayerPointerEvent.ts","../src/annotation/SVGAnnotationLayer.svelte","../node_modules/quickselect/index.js","../node_modules/rbush/index.js","../src/state/spatialTree.ts","../src/state/ImageAnnotatorState.ts","../src/themes/smart/setTheme.ts","../src/AnnotoriousOpts.ts","../src/keyboardCommands.ts","../src/Annotorious.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import type { AbstractSelector } from '@annotorious/core';\r\n\r\nexport interface Shape extends AbstractSelector {\r\n\r\n  type: ShapeType;\r\n\r\n  geometry: Geometry;\r\n\r\n}\r\n\r\nexport enum ShapeType {\r\n\r\n  ELLIPSE = 'ELLIPSE',\r\n\r\n  POLYGON = 'POLYGON',\r\n\r\n  RECTANGLE = 'RECTANGLE',\r\n\r\n  FREEHAND = 'FREEHAND'\r\n\r\n}\r\n\r\nexport interface Geometry {\r\n\r\n  bounds: Bounds;\r\n\r\n}\r\n\r\nexport interface Bounds {\r\n\r\n  minX: number;\r\n\r\n  minY: number;\r\n\r\n  maxX: number;\r\n\r\n  maxY: number;\r\n\r\n}\r\n","import type { Bounds, Shape, ShapeType } from './Shape';\r\n\r\nexport interface ShapeUtil<T extends Shape> {\r\n\r\n  area: (shape: T) => number;\r\n\r\n  intersects: (shape: T, x: number, y: number) => boolean;\r\n\r\n}\r\n\r\nconst Utils: { [key: string]: ShapeUtil<any> } = {};\r\n\r\n/**\r\n * Registers a new ShapeUtil for a given shape type.\r\n * @param type the shape type\r\n * @param util the ShapeUtil implementation for this shape type\r\n */\r\nexport const registerShapeUtil = (type: ShapeType | string, util: ShapeUtil<any>) =>\r\n  (Utils[type] = util);\r\n\r\n/**\r\n * Computes the area of the given shape. Delegates to the corresponding ShapeUtil.\r\n * @param shape the shape\r\n */\r\nexport const computeArea = (shape: Shape) => Utils[shape.type].area(shape);\r\n\r\n/**\r\n * Tests if the given shape intersects the given point. Delegates to\r\n * the corresponding ShapeUtil.\r\n * @param shape the shape\r\n * @param x point x coord\r\n * @param y point y coord\r\n * @returns true if shape and point intersect\r\n */\r\nexport const intersects = (shape: Shape, x: number, y: number): boolean =>\r\n  Utils[shape.type].intersects(shape, x, y);\r\n\r\n/**\r\n * Computes Bounds from a given list of points.\r\n * @param points the points\r\n * @returns the Bounds\r\n */\r\nexport const boundsFromPoints = (points: Array<[number, number]>): Bounds => {\r\n  let minX = Infinity;\r\n  let minY = Infinity;\r\n  let maxX = -Infinity;\r\n  let maxY = -Infinity;\r\n\r\n  points.forEach(([x, y]) => {\r\n    minX = Math.min(minX, x);\r\n    minY = Math.min(minY, y);\r\n    maxX = Math.max(maxX, x);\r\n    maxY = Math.max(maxY, y);\r\n  });\r\n\r\n  return { minX, minY, maxX, maxY };\r\n};","import { ShapeType } from '../Shape';\r\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils';\r\nimport type { Ellipse } from './Ellipse';\r\n\r\nconst EllipseUtil: ShapeUtil<Ellipse> = {\r\n\r\n  area: (e: Ellipse): number => Math.PI * e.geometry.rx * e.geometry.ry,\r\n\r\n  intersects: (e: Ellipse, x: number, y: number): boolean => {\r\n    const { cx, cy, rx, ry } = e.geometry;\r\n\r\n    // For future use\r\n    const rot = 0;\r\n\r\n    const cos = Math.cos(rot);\r\n    const sin = Math.sin(rot);\r\n  \r\n    const dx  = x - cx;\r\n    const dy  = y - cy;\r\n  \r\n    const tdx = cos * dx + sin * dy;\r\n    const tdy = sin * dx - cos * dy;\r\n  \r\n    return (tdx * tdx) / (rx * rx) + (tdy * tdy) / (ry * ry) <= 1;\r\n  }\r\n};\r\n\r\nregisterShapeUtil(ShapeType.ELLIPSE, EllipseUtil);","import { ShapeType } from '../Shape';\r\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils';\r\nimport type { Polygon } from './Polygon';\r\n\r\nconst PolygonUtil: ShapeUtil<Polygon> = {\r\n\r\n  area: (polygon: Polygon): number => {\r\n    const { points } = polygon.geometry;\r\n\r\n    let area = 0;\r\n    let j = points.length - 1;\r\n\r\n    for (let i = 0; i < points.length; i++) {\r\n      area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1]);\r\n      j = i;\r\n    }\r\n\r\n    return Math.abs(0.5 * area);\r\n  },\r\n\r\n  intersects: (polygon: Polygon, x: number, y: number): boolean => {\r\n    // Based on https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html/pnpoly.html\r\n    const { points } = polygon.geometry;\r\n\r\n    let inside = false;\r\n\r\n    for (let i = 0, j = points.length - 1; i < points.length; j = i++) {\r\n      const xi = points[i][0],\r\n        yi = points[i][1];\r\n      const xj = points[j][0],\r\n        yj = points[j][1];\r\n\r\n      const intersect = yi > y != yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\r\n\r\n      if (intersect) inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n  }\r\n  \r\n};\r\n\r\nregisterShapeUtil(ShapeType.POLYGON, PolygonUtil);","import { ShapeType } from '../Shape';\r\nimport type { Rectangle } from './Rectangle';\r\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils';\r\n\r\nexport const RectangleUtil: ShapeUtil<Rectangle> = {\r\n\r\n  area: (rect: Rectangle): number => rect.geometry.w * rect.geometry.h,\r\n\r\n  intersects: (rect: Rectangle, x: number, y: number): boolean =>\r\n    x >= rect.geometry.x &&\r\n    x <= rect.geometry.x + rect.geometry.w &&\r\n    y >= rect.geometry.y &&\r\n    y <= rect.geometry.y + rect.geometry.h\r\n    \r\n};\r\n\r\nregisterShapeUtil(ShapeType.RECTANGLE, RectangleUtil);","import { ShapeType } from '../Shape'\r\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils'\r\nimport type { Freehand } from './Freehand'\r\n\r\nconst FreehandUtil: ShapeUtil<Freehand> = {\r\n  area: (freehand: Freehand): number => {\r\n    const { points } = freehand.geometry\r\n\r\n    let area = 0\r\n    let j = points.length - 1\r\n\r\n    for (let i = 0; i < points.length; i++) {\r\n      area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1])\r\n      j = i\r\n    }\r\n\r\n    return Math.abs(0.5 * area)\r\n  },\r\n\r\n  intersects: (freehand: Freehand, x: number, y: number): boolean => {\r\n    // Based on https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html/pnpoly.html\r\n    const { points } = freehand.geometry\r\n\r\n    let inside = false\r\n\r\n    for (let i = 0, j = points.length - 1; i < points.length; j = i++) {\r\n      const xi = points[i][0],\r\n        yi = points[i][1]\r\n      const xj = points[j][0],\r\n        yj = points[j][1]\r\n\r\n      const intersect =\r\n        yi > y != yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi\r\n\r\n      if (intersect) inside = !inside\r\n    }\r\n\r\n    return inside\r\n  },\r\n}\r\n\r\nregisterShapeUtil(ShapeType.FREEHAND, FreehandUtil)\r\n","import type { W3CSelector } from '@annotorious/core';\r\nimport { ShapeType } from '../../core';\r\nimport type { Rectangle, RectangleGeometry } from '../../core';\r\n\r\nexport interface FragmentSelector extends W3CSelector {\r\n\r\n  type: 'FragmentSelector';\r\n\r\n  conformsTo: 'http://www.w3.org/TR/media-frags/',\r\n\r\n  value: string;\r\n  \r\n}\r\n\r\nexport const parseFragmentSelector = (\r\n  fragmentOrSelector: FragmentSelector | string,\r\n  invertY = false\r\n): Rectangle => {\r\n\r\n  const fragment =\r\n    typeof fragmentOrSelector === 'string' ? fragmentOrSelector : fragmentOrSelector.value;\r\n\r\n  const regex = /^(xywh)=(pixel|percent)?:?(.+?),(.+?),(.+?),(.+)*/g;\r\n\r\n  const matches = [...fragment.matchAll(regex)][0];\r\n  const [_, prefix, unit, a, b, c, d] = matches;\r\n\r\n  if (prefix !== 'xywh') throw new Error('Unsupported MediaFragment: ' + fragment);\r\n\r\n  if (unit && unit !== 'pixel') throw new Error(`Unsupported MediaFragment unit: ${unit}`);\r\n\r\n  const [x, y, w, h] = [a, b, c, d].map(parseFloat);\r\n\r\n  return {\r\n    type: ShapeType.RECTANGLE,\r\n    geometry: {\r\n      x,\r\n      y,\r\n      w,\r\n      h,\r\n      bounds: {\r\n        minX: x,\r\n        minY: invertY ? y - h : y,\r\n        maxX: x + w,\r\n        maxY: invertY ? y : y + h\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const serializeFragmentSelector = (geometry: RectangleGeometry): FragmentSelector => {\r\n  const { x, y, w, h } = geometry;\r\n  \r\n  return {\r\n    type: 'FragmentSelector',\r\n    conformsTo: 'http://www.w3.org/TR/media-frags/',\r\n    value: `xywh=pixel:${x},${y},${w},${h}`\r\n  };\r\n};","export const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\r\n\r\nexport const sanitize = (doc: Element | Document) => {\r\n  // Cf. https://github.com/mattkrick/sanitize-svg#readme  \r\n  // for the basic approach\r\n  const cleanEl = (el: Element) => {\r\n    Array.from(el.attributes).forEach(attr => {\r\n      if (attr.name.startsWith('on'))\r\n        el.removeAttribute(attr.name)\r\n    });\r\n  }\r\n\r\n  // Remove script tags\r\n  const scripts = doc.getElementsByTagName('script');\r\n\r\n  Array.from(scripts).reverse().forEach(el =>\r\n    el.parentNode.removeChild(el));\r\n\r\n  Array.from(doc.querySelectorAll('*')).forEach(cleanEl);\r\n\r\n  return doc;\r\n}\r\n\r\n/** Helper that forces an un-namespaced node to SVG **/\r\nexport const insertSVGNamespace = (originalDoc: Document): Element => {\r\n  // Serialize and parse for the namespace to take effect on every node\r\n  const serializer = new XMLSerializer();\r\n  const str = serializer.serializeToString(originalDoc.documentElement);\r\n\r\n  // Doesn't seem that there's a clean cross-browser way for this...\r\n  const namespaced = str.replace('<svg>', `<svg xmlns=\"${SVG_NAMESPACE}\">`);\r\n\r\n  const parser = new DOMParser();\r\n  const namespacedDoc = parser.parseFromString(namespaced, \"image/svg+xml\");\r\n  return namespacedDoc.documentElement;\r\n}\r\n","function $(e,t,u,x=h=>h){return e*x(.5-t*(.5-u))}function se(e){return[-e[0],-e[1]]}function l(e,t){return[e[0]+t[0],e[1]+t[1]]}function a(e,t){return[e[0]-t[0],e[1]-t[1]]}function b(e,t){return[e[0]*t,e[1]*t]}function he(e,t){return[e[0]/t,e[1]/t]}function R(e){return[e[1],-e[0]]}function B(e,t){return e[0]*t[0]+e[1]*t[1]}function ue(e,t){return e[0]===t[0]&&e[1]===t[1]}function ge(e){return Math.hypot(e[0],e[1])}function de(e){return e[0]*e[0]+e[1]*e[1]}function A(e,t){return de(a(e,t))}function G(e){return he(e,ge(e))}function ie(e,t){return Math.hypot(e[1]-t[1],e[0]-t[0])}function L(e,t,u){let x=Math.sin(u),h=Math.cos(u),y=e[0]-t[0],n=e[1]-t[1],f=y*h-n*x,d=y*x+n*h;return[f+t[0],d+t[1]]}function K(e,t,u){return l(e,b(a(t,e),u))}function ee(e,t,u){return l(e,b(t,u))}var{min:C,PI:xe}=Math,pe=.275,V=xe+1e-4;function ce(e,t={}){let{size:u=16,smoothing:x=.5,thinning:h=.5,simulatePressure:y=!0,easing:n=r=>r,start:f={},end:d={},last:D=!1}=t,{cap:S=!0,easing:j=r=>r*(2-r)}=f,{cap:q=!0,easing:c=r=>--r*r*r+1}=d;if(e.length===0||u<=0)return[];let p=e[e.length-1].runningLength,g=f.taper===!1?0:f.taper===!0?Math.max(u,p):f.taper,T=d.taper===!1?0:d.taper===!0?Math.max(u,p):d.taper,te=Math.pow(u*x,2),_=[],M=[],H=e.slice(0,10).reduce((r,i)=>{let o=i.pressure;if(y){let s=C(1,i.distance/u),W=C(1,1-s);o=C(1,r+(W-r)*(s*pe))}return(r+o)/2},e[0].pressure),m=$(u,h,e[e.length-1].pressure,n),U,X=e[0].vector,z=e[0].point,F=z,O=z,E=F,J=!1;for(let r=0;r<e.length;r++){let{pressure:i}=e[r],{point:o,vector:s,distance:W,runningLength:I}=e[r];if(r<e.length-1&&p-I<3)continue;if(h){if(y){let v=C(1,W/u),Z=C(1,1-v);i=C(1,H+(Z-H)*(v*pe))}m=$(u,h,i,n)}else m=u/2;U===void 0&&(U=m);let le=I<g?j(I/g):1,fe=p-I<T?c((p-I)/T):1;m=Math.max(.01,m*Math.min(le,fe));let re=(r<e.length-1?e[r+1]:e[r]).vector,Y=r<e.length-1?B(s,re):1,be=B(s,X)<0&&!J,ne=Y!==null&&Y<0;if(be||ne){let v=b(R(X),m);for(let Z=1/13,w=0;w<=1;w+=Z)O=L(a(o,v),o,V*w),_.push(O),E=L(l(o,v),o,V*-w),M.push(E);z=O,F=E,ne&&(J=!0);continue}if(J=!1,r===e.length-1){let v=b(R(s),m);_.push(a(o,v)),M.push(l(o,v));continue}let oe=b(R(K(re,s,Y)),m);O=a(o,oe),(r<=1||A(z,O)>te)&&(_.push(O),z=O),E=l(o,oe),(r<=1||A(F,E)>te)&&(M.push(E),F=E),H=i,X=s}let P=e[0].point.slice(0,2),k=e.length>1?e[e.length-1].point.slice(0,2):l(e[0].point,[1,1]),Q=[],N=[];if(e.length===1){if(!(g||T)||D){let r=ee(P,G(R(a(P,k))),-(U||m)),i=[];for(let o=1/13,s=o;s<=1;s+=o)i.push(L(r,P,V*2*s));return i}}else{if(!(g||T&&e.length===1))if(S)for(let i=1/13,o=i;o<=1;o+=i){let s=L(M[0],P,V*o);Q.push(s)}else{let i=a(_[0],M[0]),o=b(i,.5),s=b(i,.51);Q.push(a(P,o),a(P,s),l(P,s),l(P,o))}let r=R(se(e[e.length-1].vector));if(T||g&&e.length===1)N.push(k);else if(q){let i=ee(k,r,m);for(let o=1/29,s=o;s<1;s+=o)N.push(L(i,k,V*3*s))}else N.push(l(k,b(r,m)),l(k,b(r,m*.99)),a(k,b(r,m*.99)),a(k,b(r,m)))}return _.concat(N,M.reverse(),Q)}function me(e,t={}){var q;let{streamline:u=.5,size:x=16,last:h=!1}=t;if(e.length===0)return[];let y=.15+(1-u)*.85,n=Array.isArray(e[0])?e:e.map(({x:c,y:p,pressure:g=.5})=>[c,p,g]);if(n.length===2){let c=n[1];n=n.slice(0,-1);for(let p=1;p<5;p++)n.push(K(n[0],c,p/4))}n.length===1&&(n=[...n,[...l(n[0],[1,1]),...n[0].slice(2)]]);let f=[{point:[n[0][0],n[0][1]],pressure:n[0][2]>=0?n[0][2]:.25,vector:[1,1],distance:0,runningLength:0}],d=!1,D=0,S=f[0],j=n.length-1;for(let c=1;c<n.length;c++){let p=h&&c===j?n[c].slice(0,2):K(S.point,n[c],y);if(ue(S.point,p))continue;let g=ie(p,S.point);if(D+=g,c<j&&!d){if(D<x)continue;d=!0}S={point:p,pressure:n[c][2]>=0?n[c][2]:.5,vector:G(a(S.point,p)),distance:g,runningLength:D},f.push(S)}return f[0].vector=((q=f[1])==null?void 0:q.vector)||[0,0],f}function ae(e,t={}){return ce(me(e,t),t)}var _e=ae;export{_e as default,ae as getStroke,ce as getStrokeOutlinePoints,me as getStrokePoints};\n","/*\r\n (c) 2017, Vladimir Agafonkin\r\n Simplify.js, a high-performance JS polyline simplification library\r\n mourner.github.io/simplify-js\r\n*/\r\n  // to suit your point format, run search/replace for '.x' and '.y';\r\n  // for 3D version, see 3d branch (configurability would draw significant performance overhead)\r\n\r\n  // square distance between 2 points\r\n  function getSqDist(p1, p2) {\r\n    var dx = p1[0] - p2[0],\r\n      dy = p1[1] - p2[1];\r\n\r\n    return dx * dx + dy * dy;\r\n  }\r\n\r\n  // square distance from a point to a segment\r\n  function getSqSegDist(p, p1, p2) {\r\n    var x = p1[0],\r\n      y = p1[1],\r\n      dx = p2[0] - x,\r\n      dy = p2[1] - y;\r\n\r\n    if (dx !== 0 || dy !== 0) {\r\n      var t = ((p[0] - x) * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\r\n\r\n      if (t > 1) {\r\n        x = p2[0];\r\n        y = p2[1];\r\n      } else if (t > 0) {\r\n        x += dx * t;\r\n        y += dy * t;\r\n      }\r\n    }\r\n\r\n    dx = p[0] - x;\r\n    dy = p[1] - y;\r\n\r\n    return dx * dx + dy * dy;\r\n  }\r\n  // rest of the code doesn't care about point format\r\n\r\n  // basic distance-based simplification\r\n  function simplifyRadialDist(points, sqTolerance) {\r\n    var prevPoint = points[0],\r\n      newPoints = [prevPoint],\r\n      point;\r\n\r\n    for (var i = 1, len = points.length; i < len; i++) {\r\n      point = points[i];\r\n\r\n      if (getSqDist(point, prevPoint) > sqTolerance) {\r\n        newPoints.push(point);\r\n        prevPoint = point;\r\n      }\r\n    }\r\n\r\n    if (prevPoint !== point) newPoints.push(point);\r\n\r\n    return newPoints;\r\n  }\r\n\r\n  function simplifyDPStep(points, first, last, sqTolerance, simplified) {\r\n    var maxSqDist = sqTolerance,\r\n      index;\r\n\r\n    for (var i = first + 1; i < last; i++) {\r\n      var sqDist = getSqSegDist(points[i], points[first], points[last]);\r\n\r\n      if (sqDist > maxSqDist) {\r\n        index = i;\r\n        maxSqDist = sqDist;\r\n      }\r\n    }\r\n\r\n    if (maxSqDist > sqTolerance) {\r\n      if (index - first > 1)\r\n        simplifyDPStep(points, first, index, sqTolerance, simplified);\r\n      simplified.push(points[index]);\r\n      if (last - index > 1)\r\n        simplifyDPStep(points, index, last, sqTolerance, simplified);\r\n    }\r\n  }\r\n\r\n  // simplification using Ramer-Douglas-Peucker algorithm\r\n  function simplifyDouglasPeucker(points, sqTolerance) {\r\n    var last = points.length - 1;\r\n\r\n    var simplified = [points[0]];\r\n    simplifyDPStep(points, 0, last, sqTolerance, simplified);\r\n    simplified.push(points[last]);\r\n\r\n    return simplified;\r\n  }\r\n\r\n  // both algorithms combined for awesome performance\r\n  function simplify(points, tolerance, highestQuality) {\r\n    if (points.length <= 2) return points;\r\n\r\n    var sqTolerance = tolerance !== undefined ? tolerance * tolerance : 1;\r\n\r\n    points = highestQuality ? points : simplifyRadialDist(points, sqTolerance);\r\n    points = simplifyDouglasPeucker(points, sqTolerance);\r\n\r\n    return points;\r\n  }\r\n  \r\nexport default simplify\r\n","import { getStroke } from \"perfect-freehand\";\r\nimport simplify from './simplify'\r\n\r\ntype GenericObject = Record<string,unknown>\r\n\r\nexport const options = {\r\n  size: 4,\r\n  thinning: 0.3,\r\n  smoothing: 0.5,\r\n  streamline: 0.5,\r\n  easing: (t) => t,\r\n  start: {\r\n    taper: 0,\r\n    easing: (t) => t,\r\n    cap: true,\r\n  },\r\n  end: {\r\n    taper: 0,\r\n    easing: (t) => t,\r\n    cap: true,\r\n  },\r\n}\r\n\r\nconst average = (a, b) => (a + b) / 2\r\n\r\nfunction getControlPoints(x0, y0, x1, y1, x2, y2, t) {\r\n  // t is the tension and typically between 0 (loose) and 1 (tight)\r\n  const d01 = Math.sqrt((x1 - x0) ** 2 + (y1 - y0) ** 2)\r\n  const d12 = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)\r\n\r\n  const fa = (t * d01) / (d01 + d12) // scaling factor for control point 1\r\n  const fb = (t * d12) / (d01 + d12) // scaling factor for control point 2\r\n\r\n  const p1x = x1 + fa * (x0 - x2) // x2 control point for x1\r\n  const p1y = y1 + fa * (y0 - y2) // y2 control point for y1\r\n\r\n  const p2x = x1 - fb * (x0 - x2) // x2 control point for x2\r\n  const p2y = y1 - fb * (y0 - y2) // y2 control point for y2\r\n\r\n  return [p1x, p1y, p2x, p2y]\r\n}\r\n\r\n// export function getSvgPathFromStroke(points, closed = true) {\r\n//   const len = points.length\r\n\r\n//   if (len < 4) {\r\n//     return ``\r\n//   }\r\n\r\n//   let a = points[0]\r\n//   let b = points[1]\r\n//   const c = points[2]\r\n\r\n//   let result = `M${a[0].toFixed(2)},${a[1].toFixed(2)} Q${b[0].toFixed(\r\n//     2\r\n//   )},${b[1].toFixed(2)} ${average(b[0], c[0]).toFixed(2)},${average(\r\n//     b[1],\r\n//     c[1]\r\n//   ).toFixed(2)} T`\r\n\r\n//   for (let i = 2, max = len - 1; i < max; i++) {\r\n//     a = points[i]\r\n//     b = points[i + 1]\r\n//     result += `${average(a[0], b[0]).toFixed(2)},${average(a[1], b[1]).toFixed(\r\n//       2\r\n//     )} `\r\n//   }\r\n\r\n//   if (closed) {\r\n//     result += 'Z'\r\n//   }\r\n\r\n//   return result\r\n// }\r\n\r\n\r\nexport function getSvgPathFromStroke(stroke) {\r\n  // let stroke = simplify(strokePrev);\r\n  // console.log(\"Stroke\", stroke);\r\n  if (!stroke.length) return ''\r\n\r\n  const d = stroke.reduce(\r\n    (acc, [x0, y0], i, arr) => {\r\n      const [x1, y1] = arr[(i + 1) % arr.length]\r\n      acc.push(x0, y0, (x0 + x1) / 2, (y0 + y1) / 2)\r\n      return acc\r\n    },\r\n    ['M', ...stroke[0], 'Q']\r\n  )\r\n\r\n  d.push('Z')\r\n  return d.join(' ')\r\n}\r\n\r\nexport function getSmoothPathData(\r\n  points: Array<Array<number>>,\r\n  options: GenericObject,\r\n  simplifyPath: Boolean = false\r\n) {\r\n  const stroke = getStroke(points, options)\r\n  const pathData = getSvgPathFromStroke(\r\n    simplifyPath ? simplify(stroke,0.25) : stroke\r\n  )\r\n  return pathData\r\n}\r\n","import type { W3CSelector } from '@annotorious/core';\r\nimport { boundsFromPoints, ShapeType } from '../../core';\r\nimport type { Ellipse, EllipseGeometry, Polygon, PolygonGeometry, Freehand, FreehandGeometry, Shape } from '../../core';\r\nimport { SVG_NAMESPACE, insertSVGNamespace, sanitize } from './SVG';\r\nimport { getSmoothPathData, options } from '../../../annotation/utils/path';\r\n\r\nexport interface SVGSelector extends W3CSelector {\r\n\r\n  type: 'SvgSelector';\r\n\r\n  value: string;\r\n  \r\n}\r\n\r\nconst parseSVGXML = (value: string): Element => {\r\n  const parser = new DOMParser();\r\n\r\n  const doc = parser.parseFromString(value, \"image/svg+xml\");\r\n\r\n  // SVG needs a namespace declaration - check if it's set or insert if not\r\n  const isPrefixDeclared = doc.lookupPrefix(SVG_NAMESPACE); // SVG declared via prefix\r\n  const isDefaultNamespaceSVG = doc.lookupNamespaceURI(null); // SVG declared as default namespace\r\n\r\n  if (isPrefixDeclared || isDefaultNamespaceSVG) {\r\n    return sanitize(doc).firstChild as Element;\r\n  } else {\r\n    return sanitize(insertSVGNamespace(doc)).firstChild as Element;\r\n  }\r\n}\r\n\r\nconst parseSVGFreehand = (value: string): Freehand => {\r\n  const [a, b, str] = value.match(/(<path d=[\"|'])([^(\"|')]*)/) || []\r\n\r\n  if (!str) return\r\n  const pathRegex = /([MQZT])([^MQZT]*)/g\r\n  const matches = Array.from(str.matchAll(pathRegex))\r\n  const points = matches.map((match) => {\r\n    const command = match[1]\r\n    const pointData = match[2].trim().split(/\\s+/).map(parseFloat)\r\n    return pointData\r\n  })\r\n  \r\n  return {\r\n    type: ShapeType.FREEHAND,\r\n    geometry: {\r\n      points,\r\n      bounds: boundsFromPoints(points as [number, number][]),\r\n    },\r\n  }\r\n}\r\n\r\nconst parseSVGPolygon = (value: string): Polygon => {\r\n  const [a, b, str] = value.match(/(<polygon points=[\"|'])([^(\"|')]*)/) || [];\r\n\r\n  if (!str) return;\r\n\r\n  const points = str.split(' ').map((p) => p.split(',').map(parseFloat));\r\n\r\n  return {\r\n    type: ShapeType.POLYGON,\r\n    geometry: {\r\n      points,\r\n      bounds: boundsFromPoints(points as [number, number][])\r\n    }\r\n  };\r\n}\r\n\r\nconst parseSVGEllipse = (value: string): Ellipse => {\r\n  const doc = parseSVGXML(value);\r\n\r\n  const cx = parseFloat(doc.getAttribute('cx'));\r\n  const cy = parseFloat(doc.getAttribute('cy'));\r\n  const rx = parseFloat(doc.getAttribute('rx'));\r\n  const ry = parseFloat(doc.getAttribute('ry'));\r\n\r\n  const bounds = {\r\n    minX: cx - rx,\r\n    minY: cy - ry,\r\n    maxX: cx + rx,\r\n    maxY: cy + ry\r\n  };\r\n\r\n  return {\r\n    type: ShapeType.ELLIPSE,\r\n    geometry: {\r\n      cx,\r\n      cy,\r\n      rx,\r\n      ry,\r\n      bounds\r\n    }\r\n  };\r\n}\r\n\r\nexport const parseSVGSelector = <T extends Shape>(valueOrSelector: SVGSelector | string): T => {\r\n  const value = typeof valueOrSelector === 'string' ? valueOrSelector : valueOrSelector.value;\r\n\r\n  if (value.includes('<polygon points='))\r\n    return parseSVGPolygon(value) as unknown as T\r\n  else if (value.includes('<path d='))\r\n    return parseSVGFreehand(value) as unknown as T\r\n  else if (value.includes('<ellipse '))\r\n    return parseSVGEllipse(value) as unknown as T\r\n}\r\n\r\nexport const serializeSVGSelector = (shape: Shape): SVGSelector => {\r\n  let value: string;\r\n\r\n  if (shape.type === ShapeType.POLYGON) {\r\n    const geom = shape.geometry as PolygonGeometry\r\n    const { points } = geom\r\n    value = `<svg><polygon points=\"${points\r\n      .map((xy) => xy.join(','))\r\n      .join(' ')}\" /></svg>`\r\n  } else if (shape.type === ShapeType.FREEHAND) {\r\n    const geom = shape.geometry as FreehandGeometry\r\n    const pathData = getSmoothPathData(geom.points,options)\r\n    value = `<svg><path d=\"${pathData}\"/></svg>`\r\n  } else if (shape.type === ShapeType.ELLIPSE) {\r\n    const geom = shape.geometry as EllipseGeometry\r\n    value = `<svg><ellipse cx=\"${geom.cx}\" cy=\"${geom.cy}\" rx=\"${geom.rx}\" ry=\"${geom.ry}\" /></svg>`\r\n  }\r\n\r\n  if (value) {\r\n    return { type: 'SvgSelector', value };\r\n  } else {\r\n    throw `Unsupported shape type: ${shape.type}`;\r\n  }\r\n}\r\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","var Y = Object.prototype.hasOwnProperty;\nfunction B(e, n) {\n  var t, o;\n  if (e === n)\n    return !0;\n  if (e && n && (t = e.constructor) === n.constructor) {\n    if (t === Date)\n      return e.getTime() === n.getTime();\n    if (t === RegExp)\n      return e.toString() === n.toString();\n    if (t === Array) {\n      if ((o = e.length) === n.length)\n        for (; o-- && B(e[o], n[o]); )\n          ;\n      return o === -1;\n    }\n    if (!t || typeof e == \"object\") {\n      o = 0;\n      for (t in e)\n        if (Y.call(e, t) && ++o && !Y.call(n, t) || !(t in n) || !B(e[t], n[t]))\n          return !1;\n      return Object.keys(n).length === o;\n    }\n  }\n  return e !== e && n !== n;\n}\nfunction $() {\n}\nfunction W(e, n) {\n  return e != e ? n == n : e !== n || e && typeof e == \"object\" || typeof e == \"function\";\n}\nconst k = [];\nfunction _(e, n = $) {\n  let t;\n  const o = /* @__PURE__ */ new Set();\n  function i(b) {\n    if (W(e, b) && (e = b, t)) {\n      const w = !k.length;\n      for (const u of o)\n        u[1](), k.push(u, e);\n      if (w) {\n        for (let u = 0; u < k.length; u += 2)\n          k[u][0](k[u + 1]);\n        k.length = 0;\n      }\n    }\n  }\n  function h(b) {\n    i(b(e));\n  }\n  function U(b, w = $) {\n    const u = [b, w];\n    return o.add(u), o.size === 1 && (t = n(i) || $), b(e), () => {\n      o.delete(u), o.size === 0 && t && (t(), t = null);\n    };\n  }\n  return { set: i, update: h, subscribe: U };\n}\nconst be = (e) => {\n  const { subscribe: n, set: t } = _(null);\n  let o = null;\n  return n((i) => o = i), e.observe(({ changes: i }) => {\n    if (o) {\n      i.deleted.some((b) => b.id === o) && t(null);\n      const U = i.updated.find(({ oldValue: b }) => b.id === o);\n      U && t(U.newValue.id);\n    }\n  }), {\n    get current() {\n      return o;\n    },\n    subscribe: n,\n    set: t\n  };\n};\nvar q = /* @__PURE__ */ ((e) => (e.EDIT = \"EDIT\", e.SELECT = \"SELECT\", e.NONE = \"NONE\", e))(q || {});\nconst V = { selected: [] }, ve = (e, n = \"EDIT\") => {\n  const { subscribe: t, set: o } = _(V);\n  let i = V;\n  t((s) => i = s);\n  const h = () => o(V), U = () => {\n    var s;\n    return ((s = i.selected) == null ? void 0 : s.length) === 0;\n  }, b = (s) => {\n    if (i.selected.length === 0)\n      return !1;\n    const f = typeof s == \"string\" ? s : s.id;\n    return i.selected.some((y) => y.id === f);\n  }, w = (s, f) => {\n    const y = e.getAnnotation(s);\n    if (y) {\n      const A = G(y, n);\n      o(A === \"EDIT\" ? { selected: [{ id: s, editable: !0 }], pointerEvent: f } : A === \"SELECT\" ? { selected: [{ id: s }], pointerEvent: f } : { selected: [], pointerEvent: f });\n    } else\n      console.warn(\"Invalid selection: \" + s);\n  }, u = (s, f = !0) => {\n    const y = Array.isArray(s) ? s : [s], A = y.map((L) => e.getAnnotation(L)).filter((L) => L);\n    o({ selected: A.map(({ id: L }) => ({ id: L, editable: f })) }), A.length !== y.length && console.warn(\"Invalid selection\", s);\n  }, T = (s) => {\n    if (i.selected.length === 0)\n      return !1;\n    const { selected: f } = i;\n    f.filter(({ id: A }) => s.includes(A)).length > 0 && o({ selected: f.filter(({ id: A }) => !s.includes(A)) });\n  };\n  return e.observe(({ changes: s }) => T(s.deleted.map((f) => f.id))), {\n    clear: h,\n    clickSelect: w,\n    get selected() {\n      return i ? [...i.selected] : null;\n    },\n    get pointerEvent() {\n      return i ? i.pointerEvent : null;\n    },\n    isEmpty: U,\n    isSelected: b,\n    setSelected: u,\n    subscribe: t\n  };\n}, G = (e, n) => typeof n == \"function\" ? n(e) || \"EDIT\" : n || \"EDIT\";\nlet z;\nconst H = new Uint8Array(16);\nfunction F() {\n  if (!z && (z = typeof crypto < \"u\" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto), !z))\n    throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");\n  return z(H);\n}\nconst R = [];\nfor (let e = 0; e < 256; ++e)\n  R.push((e + 256).toString(16).slice(1));\nfunction J(e, n = 0) {\n  return R[e[n + 0]] + R[e[n + 1]] + R[e[n + 2]] + R[e[n + 3]] + \"-\" + R[e[n + 4]] + R[e[n + 5]] + \"-\" + R[e[n + 6]] + R[e[n + 7]] + \"-\" + R[e[n + 8]] + R[e[n + 9]] + \"-\" + R[e[n + 10]] + R[e[n + 11]] + R[e[n + 12]] + R[e[n + 13]] + R[e[n + 14]] + R[e[n + 15]];\n}\nconst Q = typeof crypto < \"u\" && crypto.randomUUID && crypto.randomUUID.bind(crypto), j = {\n  randomUUID: Q\n};\nfunction X(e, n, t) {\n  if (j.randomUUID && !n && !e)\n    return j.randomUUID();\n  e = e || {};\n  const o = e.random || (e.rng || F)();\n  if (o[6] = o[6] & 15 | 64, o[8] = o[8] & 63 | 128, n) {\n    t = t || 0;\n    for (let i = 0; i < 16; ++i)\n      n[t + i] = o[i];\n    return n;\n  }\n  return J(o);\n}\nconst Ce = (e) => {\n  const { creator: n, updatedBy: t } = e.target, o = e.bodies.reduce((i, h) => [...i, h.creator, h.updatedBy], []);\n  return [\n    n,\n    t,\n    ...o\n  ].filter((i) => i);\n}, we = (e, n, t, o) => ({\n  id: X(),\n  annotation: e.id,\n  created: t || /* @__PURE__ */ new Date(),\n  creator: o,\n  ...n\n}), Z = (e, n) => {\n  const t = new Set(e.bodies.map((o) => o.id));\n  return n.bodies.filter((o) => !t.has(o.id));\n}, K = (e, n) => {\n  const t = new Set(n.bodies.map((o) => o.id));\n  return e.bodies.filter((o) => !t.has(o.id));\n}, ee = (e, n) => n.bodies.map((t) => {\n  const o = e.bodies.find((i) => i.id === t.id);\n  return { newBody: t, oldBody: o && !B(o, t) ? o : void 0 };\n}).filter(({ oldBody: t }) => t), te = (e, n) => !B(e.target, n.target), M = (e, n) => {\n  const t = Z(e, n), o = K(e, n), i = ee(e, n);\n  return {\n    oldValue: e,\n    newValue: n,\n    bodiesCreated: t.length > 0 ? t : void 0,\n    bodiesDeleted: o.length > 0 ? o : void 0,\n    bodiesUpdated: i.length > 0 ? i : void 0,\n    targetUpdated: te(e, n) ? { oldTarget: e.target, newTarget: n.target } : void 0\n  };\n};\nvar ne = /* @__PURE__ */ ((e) => (e.BODY_ONLY = \"BODY_ONLY\", e.TARGET_ONLY = \"TARGET_ONLY\", e))(ne || {}), O = /* @__PURE__ */ ((e) => (e.LOCAL = \"LOCAL\", e.REMOTE = \"REMOTE\", e))(O || {});\nconst oe = (e, n) => {\n  var h, U;\n  const { changes: t, origin: o } = n;\n  if (!(!e.options.origin || e.options.origin === o))\n    return !1;\n  if (e.options.ignore) {\n    const { ignore: b } = e.options, w = (T) => (T == null ? void 0 : T.length) > 0;\n    if (!(w(t.created) || w(t.deleted))) {\n      const T = (h = t.updated) == null ? void 0 : h.some((f) => w(f.bodiesCreated) || w(f.bodiesDeleted) || w(f.bodiesUpdated)), s = (U = t.updated) == null ? void 0 : U.some((f) => f.targetUpdated);\n      if (b === \"BODY_ONLY\" && T && !s || b === \"TARGET_ONLY\" && s && !T)\n        return !1;\n    }\n  }\n  if (e.options.annotations) {\n    const b = /* @__PURE__ */ new Set([\n      ...t.created.map((u) => u.id),\n      ...t.deleted.map((u) => u.id),\n      ...t.updated.map(({ oldValue: u }) => u.id)\n    ]);\n    return !!(Array.isArray(e.options.annotations) ? e.options.annotations : [e.options.annotations]).find((u) => b.has(u));\n  } else\n    return !0;\n}, se = (e, n) => {\n  const t = new Set((e.created || []).map((s) => s.id)), o = new Set((e.updated || []).map(({ newValue: s }) => s.id)), i = new Set((n.created || []).map((s) => s.id)), h = new Set((n.deleted || []).map((s) => s.id)), U = new Set((n.updated || []).map(({ oldValue: s }) => s.id)), b = new Set((n.updated || []).filter(({ oldValue: s }) => t.has(s.id) || o.has(s.id)).map(({ oldValue: s }) => s.id)), w = [\n    ...(e.created || []).filter((s) => !h.has(s.id)).map((s) => U.has(s.id) ? n.updated.find(({ oldValue: f }) => f.id === s.id).newValue : s),\n    ...n.created || []\n  ], u = [\n    ...(e.deleted || []).filter((s) => !i.has(s.id)),\n    ...(n.deleted || []).filter((s) => !t.has(s.id))\n  ], T = [\n    ...(e.updated || []).filter(({ newValue: s }) => !h.has(s.id)).map((s) => {\n      const { oldValue: f, newValue: y } = s;\n      if (U.has(y.id)) {\n        const A = n.updated.find((L) => L.oldValue.id === y.id).newValue;\n        return M(f, A);\n      } else\n        return s;\n    }),\n    ...(n.updated || []).filter(({ oldValue: s }) => !b.has(s.id))\n  ];\n  return { created: w, deleted: u, updated: T };\n}, ie = (e) => e.id !== void 0, ye = () => {\n  const e = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map(), t = [], o = (r, l = {}) => t.push({ onChange: r, options: l }), i = (r) => {\n    const l = t.findIndex((a) => a.onChange == r);\n    l > -1 && t.splice(l, 1);\n  }, h = (r, l) => {\n    const a = {\n      origin: r,\n      changes: {\n        created: l.created || [],\n        updated: l.updated || [],\n        deleted: l.deleted || []\n      },\n      state: [...e.values()]\n    };\n    t.forEach((p) => {\n      oe(p, a) && p.onChange(a);\n    });\n  }, U = (r, l = O.LOCAL) => {\n    if (e.get(r.id))\n      throw Error(`Cannot add annotation ${r.id} - exists already`);\n    e.set(r.id, r), r.bodies.forEach((p) => n.set(p.id, r.id)), h(l, { created: [r] });\n  }, b = (r, l) => {\n    const a = typeof r == \"string\" ? l : r, p = typeof r == \"string\" ? r : r.id, v = e.get(p);\n    if (v) {\n      const D = M(v, a);\n      return p === a.id ? e.set(p, a) : (e.delete(p), e.set(a.id, a)), v.bodies.forEach((x) => n.delete(x.id)), a.bodies.forEach((x) => n.set(x.id, a.id)), D;\n    } else\n      console.warn(`Cannot update annotation ${p} - does not exist`);\n  }, w = (r, l = O.LOCAL, a = O.LOCAL) => {\n    const p = ie(l) ? a : l, v = b(r, l);\n    v && h(p, { updated: [v] });\n  }, u = (r, l = O.LOCAL) => {\n    const a = r.reduce((p, v) => {\n      const D = b(v);\n      return D ? [...p, D] : p;\n    }, []);\n    a.length > 0 && h(l, { updated: a });\n  }, T = (r, l = O.LOCAL) => {\n    const a = e.get(r.annotation);\n    if (a) {\n      const p = {\n        ...a,\n        bodies: [...a.bodies, r]\n      };\n      e.set(a.id, p), n.set(r.id, p.id), h(l, { updated: [{\n        oldValue: a,\n        newValue: p,\n        bodiesCreated: [r]\n      }] });\n    } else\n      console.warn(`Attempt to add body to missing annotation: ${r.annotation}`);\n  }, s = () => [...e.values()], f = (r = O.LOCAL) => {\n    const l = [...e.values()];\n    e.clear(), n.clear(), h(r, { deleted: l });\n  }, y = (r, l = !0, a = O.LOCAL) => {\n    if (l) {\n      const p = [...e.values()];\n      e.clear(), n.clear(), r.forEach((v) => {\n        e.set(v.id, v), v.bodies.forEach((D) => n.set(D.id, v.id));\n      }), h(a, { created: r, deleted: p });\n    } else {\n      const p = r.reduce((v, D) => {\n        const x = e.get(D.id);\n        return x ? [...v, x] : v;\n      }, []);\n      if (p.length > 0)\n        throw Error(`Bulk insert would overwrite the following annotations: ${p.map((v) => v.id).join(\", \")}`);\n      r.forEach((v) => {\n        e.set(v.id, v), v.bodies.forEach((D) => n.set(D.id, v.id));\n      }), h(a, { created: r });\n    }\n  }, A = (r) => {\n    const l = typeof r == \"string\" ? r : r.id, a = e.get(l);\n    if (a)\n      return e.delete(l), a.bodies.forEach((p) => n.delete(p.id)), a;\n    console.warn(`Attempt to delete missing annotation: ${l}`);\n  }, L = (r, l = O.LOCAL) => {\n    const a = A(r);\n    a && h(l, { deleted: [a] });\n  }, C = (r, l = O.LOCAL) => {\n    const a = r.reduce((p, v) => {\n      const D = A(v);\n      return D ? [...p, D] : p;\n    }, []);\n    a.length > 0 && h(l, { deleted: a });\n  }, c = (r, l = O.LOCAL) => {\n    const a = e.get(r.annotation);\n    if (a) {\n      const p = a.bodies.find((v) => v.id === r.id);\n      if (p) {\n        n.delete(p.id);\n        const v = {\n          ...a,\n          bodies: a.bodies.filter((x) => x.id !== r.id)\n        };\n        e.set(a.id, v), h(l, { updated: [{\n          oldValue: a,\n          newValue: v,\n          bodiesDeleted: [p]\n        }] });\n      } else\n        console.warn(`Attempt to delete missing body ${r.id} from annotation ${r.annotation}`);\n    } else\n      console.warn(`Attempt to delete body from missing annotation ${r.annotation}`);\n  }, m = (r) => {\n    const l = e.get(r);\n    return l ? { ...l } : void 0;\n  }, d = (r) => {\n    const l = n.get(r);\n    if (l) {\n      const p = m(l).bodies.find((v) => v.id === r);\n      if (p)\n        return p;\n      console.error(`Store integrity error: body ${r} in index, but not in annotation`);\n    } else\n      console.warn(`Attempt to retrieve missing body: ${r}`);\n  }, E = (r, l) => {\n    if (r.annotation !== l.annotation)\n      throw \"Annotation integrity violation: annotation ID must be the same when updating bodies\";\n    const a = e.get(r.annotation);\n    if (a) {\n      const p = a.bodies.find((D) => D.id === r.id), v = {\n        ...a,\n        bodies: a.bodies.map((D) => D.id === p.id ? l : D)\n      };\n      return e.set(a.id, v), p.id !== l.id && (n.delete(p.id), n.set(l.id, v.id)), {\n        oldValue: a,\n        newValue: v,\n        bodiesUpdated: [{ oldBody: p, newBody: l }]\n      };\n    } else\n      console.warn(`Attempt to add body to missing annotation ${r.annotation}`);\n  }, g = (r, l, a = O.LOCAL) => {\n    const p = E(r, l);\n    h(a, { updated: [p] });\n  }, S = (r, l = O.LOCAL) => {\n    const a = r.map((p) => E({ id: p.id, annotation: p.annotation }, p));\n    h(l, { updated: a });\n  }, I = (r) => {\n    const l = e.get(r.annotation);\n    if (l) {\n      const a = {\n        ...l,\n        target: {\n          ...l.target,\n          ...r\n        }\n      };\n      return e.set(l.id, a), {\n        oldValue: l,\n        newValue: a,\n        targetUpdated: {\n          oldTarget: l.target,\n          newTarget: r\n        }\n      };\n    } else\n      console.warn(`Attempt to update target on missing annotation: ${r.annotation}`);\n  };\n  return {\n    addAnnotation: U,\n    addBody: T,\n    all: s,\n    bulkAddAnnotation: y,\n    bulkDeleteAnnotation: C,\n    bulkUpdateAnnotation: u,\n    bulkUpdateBodies: S,\n    bulkUpdateTargets: (r, l = O.LOCAL) => {\n      const a = r.map(I).filter((p) => p);\n      a.length > 0 && h(l, { updated: a });\n    },\n    clear: f,\n    deleteAnnotation: L,\n    deleteBody: c,\n    getAnnotation: m,\n    getBody: d,\n    observe: o,\n    unobserve: i,\n    updateAnnotation: w,\n    updateBody: g,\n    updateTarget: (r, l = O.LOCAL) => {\n      const a = I(r);\n      a && h(l, { updated: [a] });\n    }\n  };\n}, Ue = (e) => ({\n  ...e,\n  subscribe: (t) => {\n    const o = (i) => t(i.state);\n    return e.observe(o), t(e.all()), () => e.unobserve(o);\n  }\n});\nlet P = () => ({\n  emit(e, ...n) {\n    let t = this.events[e] || [];\n    for (let o = 0, i = t.length; o < i; o++)\n      t[o](...n);\n  },\n  events: {},\n  on(e, n) {\n    var t;\n    return (t = this.events[e]) != null && t.push(n) || (this.events[e] = [n]), () => {\n      var o;\n      this.events[e] = (o = this.events[e]) == null ? void 0 : o.filter((i) => n !== i);\n    };\n  }\n});\nconst de = 250, Le = (e) => {\n  const n = P(), t = [];\n  let o = -1, i = !1, h = 0;\n  const U = (d) => {\n    if (!i) {\n      const { changes: E } = d, g = performance.now();\n      if (g - h > de)\n        t.splice(o + 1), t.push(E), o = t.length - 1;\n      else {\n        const S = t.length - 1;\n        t[S] = se(t[S], E);\n      }\n      h = g;\n    }\n    i = !1;\n  };\n  e.observe(U, { origin: O.LOCAL });\n  const b = (d) => (d == null ? void 0 : d.length) > 0 && e.bulkDeleteAnnotation(d), w = (d) => (d == null ? void 0 : d.length) > 0 && e.bulkAddAnnotation(d, !1), u = (d) => (d == null ? void 0 : d.length) > 0 && e.bulkUpdateAnnotation(d.map(({ oldValue: E }) => E)), T = (d) => (d == null ? void 0 : d.length) > 0 && e.bulkUpdateAnnotation(d.map(({ newValue: E }) => E)), s = (d) => (d == null ? void 0 : d.length) > 0 && e.bulkAddAnnotation(d, !1), f = (d) => (d == null ? void 0 : d.length) > 0 && e.bulkDeleteAnnotation(d);\n  return {\n    canRedo: () => t.length - 1 > o,\n    canUndo: () => o > -1,\n    destroy: () => e.unobserve(U),\n    on: (d, E) => n.on(d, E),\n    redo: () => {\n      if (t.length - 1 > o) {\n        i = !0;\n        const { created: d, updated: E, deleted: g } = t[o + 1];\n        w(d), T(E), f(g), n.emit(\"redo\", t[o + 1]), o += 1;\n      }\n    },\n    undo: () => {\n      if (o > -1) {\n        i = !0;\n        const { created: d, updated: E, deleted: g } = t[o];\n        b(d), u(E), s(g), n.emit(\"undo\", t[o]), o -= 1;\n      }\n    }\n  };\n}, Se = () => {\n  const { subscribe: e, set: n } = _([]);\n  return {\n    subscribe: e,\n    set: n\n  };\n}, Te = (e, n, t, o) => {\n  const { store: i, selection: h, hover: U, viewport: b } = e, w = /* @__PURE__ */ new Map();\n  let u = [], T, s;\n  const f = (c, m) => {\n    w.has(c) ? w.get(c).push(m) : w.set(c, [m]);\n  }, y = (c, m) => {\n    const d = w.get(c);\n    d && d.indexOf(m) > 0 && d.splice(d.indexOf(m), 1);\n  }, A = (c, m, d) => {\n    w.has(c) && setTimeout(() => {\n      w.get(c).forEach((E) => {\n        if (t) {\n          const g = Array.isArray(m) ? m.map((I) => t.serialize(I)) : t.serialize(m), S = d ? d instanceof PointerEvent ? d : t.serialize(d) : void 0;\n          E(g, S);\n        } else\n          E(m, d);\n      });\n    }, 1);\n  }, L = () => {\n    const { selected: c } = h, m = c.map(({ id: d }) => i.getAnnotation(d));\n    m.forEach((d) => {\n      const E = u.find((g) => g.id === d.id);\n      (!E || !B(E, d)) && A(\"updateAnnotation\", d, E);\n    }), u = u.map((d) => {\n      const E = m.find(({ id: g }) => g === d.id);\n      return E || d;\n    });\n  };\n  h.subscribe(({ selected: c }) => {\n    if (!(u.length === 0 && c.length === 0)) {\n      if (u.length === 0 && c.length > 0)\n        u = c.map(({ id: m }) => i.getAnnotation(m));\n      else if (u.length > 0 && c.length === 0)\n        u.forEach((m) => {\n          const d = i.getAnnotation(m.id);\n          d && !B(d, m) && A(\"updateAnnotation\", d, m);\n        }), u = [];\n      else {\n        const m = new Set(u.map((g) => g.id)), d = new Set(c.map(({ id: g }) => g));\n        u.filter((g) => !d.has(g.id)).forEach((g) => {\n          const S = i.getAnnotation(g.id);\n          S && !B(S, g) && A(\"updateAnnotation\", S, g);\n        }), u = [\n          // Remove annotations that were deselected\n          ...u.filter((g) => d.has(g.id)),\n          // Add editable annotations that were selected\n          ...c.filter(({ id: g }) => !m.has(g)).map(({ id: g }) => i.getAnnotation(g))\n        ];\n      }\n      A(\"selectionChanged\", u);\n    }\n  }), U.subscribe((c) => {\n    !T && c ? A(\"mouseEnterAnnotation\", i.getAnnotation(c)) : T && !c ? A(\"mouseLeaveAnnotation\", i.getAnnotation(T)) : T && c && (A(\"mouseLeaveAnnotation\", i.getAnnotation(T)), A(\"mouseEnterAnnotation\", i.getAnnotation(c))), T = c;\n  }), b == null || b.subscribe((c) => A(\"viewportIntersect\", c.map(i.getAnnotation))), i.observe((c) => {\n    o && (s && clearTimeout(s), s = setTimeout(L, 1e3));\n    const { created: m, deleted: d } = c.changes;\n    m.forEach((g) => A(\"createAnnotation\", g)), d.forEach((g) => A(\"deleteAnnotation\", g)), c.changes.updated.filter((g) => [\n      ...g.bodiesCreated || [],\n      ...g.bodiesDeleted || [],\n      ...g.bodiesUpdated || []\n    ].length > 0).forEach(({ oldValue: g, newValue: S }) => {\n      const I = u.find((N) => N.id === g.id) || g;\n      u = u.map((N) => N.id === g.id ? S : N), A(\"updateAnnotation\", S, I);\n    });\n  }, { origin: O.LOCAL }), i.observe((c) => {\n    if (u) {\n      const m = new Set(u.map((E) => E.id)), d = c.changes.updated.filter(({ newValue: E }) => m.has(E.id)).map(({ newValue: E }) => E);\n      d.length > 0 && (u = u.map((E) => {\n        const g = d.find((S) => S.id === E.id);\n        return g || E;\n      }));\n    }\n  }, { origin: O.REMOTE });\n  const C = (c) => (m) => {\n    const { created: d, deleted: E, updated: g } = m;\n    d.forEach((S) => A(\"createAnnotation\", S)), E.forEach((S) => A(\"deleteAnnotation\", S)), c ? g.forEach((S) => A(\"updateAnnotation\", S.oldValue, S.newValue)) : g.forEach((S) => A(\"updateAnnotation\", S.newValue, S.oldValue));\n  };\n  return n.on(\"undo\", C(!0)), n.on(\"redo\", C(!1)), { on: f, off: y, emit: A };\n}, Oe = (e) => (n) => n.map((t) => e.serialize(t)), re = (e) => (n) => n.reduce((t, o) => {\n  const { parsed: i, error: h } = e.parse(o);\n  return h ? {\n    parsed: t.parsed,\n    failed: [...t.failed, o]\n  } : {\n    parsed: [...t.parsed, i],\n    failed: t.failed\n  };\n}, { parsed: [], failed: [] }), De = (e, n, t) => {\n  const { store: o, selection: i } = e, h = (C) => {\n    if (t) {\n      const { parsed: c, error: m } = t.parse(C);\n      c ? o.addAnnotation(c, O.REMOTE) : console.error(m);\n    } else\n      o.addAnnotation(C, O.REMOTE);\n  }, U = () => i.clear(), b = () => o.clear(), w = (C) => {\n    const c = o.getAnnotation(C);\n    return t && c ? t.serialize(c) : c;\n  }, u = () => t ? o.all().map(t.serialize) : o.all(), T = () => {\n    var m;\n    const c = (((m = i.selected) == null ? void 0 : m.map((d) => d.id)) || []).map((d) => o.getAnnotation(d));\n    return t ? c.map(t.serialize) : c;\n  }, s = (C) => fetch(C).then((c) => c.json()).then((c) => (y(c), c)), f = (C) => {\n    if (typeof C == \"string\") {\n      const c = o.getAnnotation(C);\n      return o.deleteAnnotation(C), t ? t.serialize(c) : c;\n    } else {\n      const c = t ? t.parse(C).parsed : C;\n      return o.deleteAnnotation(c), C;\n    }\n  }, y = (C) => {\n    if (t) {\n      const { parsed: c, failed: m } = re(t)(C);\n      m.length > 0 && console.warn(`Discarded ${m.length} invalid annotations`, m), o.bulkAddAnnotation(c, !0, O.REMOTE);\n    } else\n      o.bulkAddAnnotation(C, !0, O.REMOTE);\n  }, A = (C) => {\n    C ? i.setSelected(C) : i.clear();\n  }, L = (C) => {\n    if (t) {\n      const c = t.parse(C).parsed, m = t.serialize(o.getAnnotation(c.id));\n      return o.updateAnnotation(c), m;\n    } else {\n      const c = o.getAnnotation(C.id);\n      return o.updateAnnotation(C), c;\n    }\n  };\n  return {\n    addAnnotation: h,\n    cancelSelected: U,\n    canRedo: n.canRedo,\n    canUndo: n.canUndo,\n    clearAnnotations: b,\n    getAnnotationById: w,\n    getAnnotations: u,\n    getSelected: T,\n    loadAnnotations: s,\n    redo: n.redo,\n    removeAnnotation: f,\n    setAnnotations: y,\n    setSelected: A,\n    undo: n.undo,\n    updateAnnotation: L\n  };\n};\nlet ae = (e) => crypto.getRandomValues(new Uint8Array(e)), ce = (e, n, t) => {\n  let o = (2 << Math.log(e.length - 1) / Math.LN2) - 1, i = -~(1.6 * o * n / e.length);\n  return (h = n) => {\n    let U = \"\";\n    for (; ; ) {\n      let b = t(i), w = i;\n      for (; w--; )\n        if (U += e[b[w] & o] || \"\", U.length === h)\n          return U;\n    }\n  };\n}, le = (e, n = 21) => ce(e, n, ae), ue = (e = 21) => crypto.getRandomValues(new Uint8Array(e)).reduce((n, t) => (t &= 63, t < 36 ? n += t.toString(36) : t < 62 ? n += (t - 26).toString(36).toUpperCase() : t > 62 ? n += \"-\" : n += \"_\", n), \"\");\nconst Re = () => ({ isGuest: !0, id: le(\"1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_\", 20)() }), fe = (e) => {\n  const n = JSON.stringify(e);\n  let t = 0;\n  for (let o = 0, i = n.length; o < i; o++) {\n    let h = n.charCodeAt(o);\n    t = (t << 5) - t + h, t |= 0;\n  }\n  return `${t}`;\n}, pe = (e) => e ? typeof e == \"object\" ? { ...e } : e : void 0, xe = (e, n) => (Array.isArray(e) ? e : [e]).map((t) => {\n  const { id: o, type: i, purpose: h, value: U, created: b, creator: w, ...u } = t;\n  return {\n    id: o || `temp-${fe(t)}`,\n    annotation: n,\n    type: i,\n    purpose: h,\n    value: U,\n    created: b ? new Date(b) : void 0,\n    creator: pe(w),\n    ...u\n  };\n}), Be = (e) => e.map((n) => {\n  var o;\n  const t = { ...n };\n  return delete t.annotation, (o = t.id) != null && o.startsWith(\"temp-\") && delete t.id, t;\n}), he = [\n  \"#ff7c00\",\n  // orange\n  \"#1ac938\",\n  // green\n  \"#e8000b\",\n  // red\n  \"#8b2be2\",\n  // purple\n  \"#9f4800\",\n  // brown\n  \"#f14cc1\",\n  // pink\n  \"#ffc400\",\n  // khaki\n  \"#00d7ff\",\n  // cyan\n  \"#023eff\"\n  // blue\n], ge = () => {\n  const e = [...he];\n  return { assignRandomColor: () => {\n    const o = Math.floor(Math.random() * e.length), i = e[o];\n    return e.splice(o, 1), i;\n  }, releaseColor: (o) => e.push(o) };\n}, me = () => {\n  const e = ge();\n  return { addUser: (o, i) => {\n    const h = e.assignRandomColor();\n    return {\n      label: i.name || i.id,\n      avatar: i.avatar,\n      color: h\n    };\n  }, removeUser: (o) => e.releaseColor(o.appearance.color) };\n}, Ae = (e, n) => e.every((t) => e.includes(t)) && n.every((t) => e.includes(t)), Ie = ue(), ke = (e = me()) => {\n  const n = P(), t = /* @__PURE__ */ new Map(), o = /* @__PURE__ */ new Map(), i = (s, f) => {\n    if (t.has(s)) {\n      console.warn(\"Attempt to add user that is already present\", s, f);\n      return;\n    }\n    const y = e.addUser(s, f);\n    t.set(s, {\n      ...f,\n      presenceKey: s,\n      appearance: y\n    });\n  }, h = (s) => {\n    const f = t.get(s);\n    if (!f) {\n      console.warn(\"Attempt to remove user that is not present\", s);\n      return;\n    }\n    e.removeUser(f), t.delete(s);\n  }, U = (s) => {\n    const f = new Set(s.map((L) => L.presenceKey)), y = s.filter(({ presenceKey: L }) => !t.has(L)), A = Array.from(t.values()).filter((L) => !f.has(L.presenceKey));\n    y.forEach(({ presenceKey: L, user: C }) => i(L, C)), A.forEach((L) => {\n      const { presenceKey: C } = L;\n      o.has(C) && n.emit(\"selectionChange\", L, null), h(C);\n    }), (y.length > 0 || A.length > 0) && n.emit(\"presence\", u());\n  }, b = (s, f) => {\n    const y = t.get(s);\n    if (!y) {\n      console.warn(\"Activity notification from user that is not present\");\n      return;\n    }\n    const A = o.get(s);\n    (!A || !Ae(A, f)) && (o.set(s, f), n.emit(\"selectionChange\", y, f));\n  }, w = (s, f) => {\n    const y = t.get(s);\n    if (!y) {\n      console.warn(\"Selection change for user that is not present\", s);\n      return;\n    }\n    f ? o.set(s, f) : o.delete(s), n.emit(\"selectionChange\", y, f);\n  }, u = () => [...Array.from(t.values())];\n  return {\n    getPresentUsers: u,\n    notifyActivity: b,\n    on: (s, f) => n.on(s, f),\n    syncUsers: U,\n    updateSelection: w\n  };\n};\nexport {\n  ne as Ignore,\n  O as Origin,\n  Ie as PRESENCE_KEY,\n  q as PointerSelectAction,\n  Re as createAnonymousGuest,\n  De as createBaseAnnotator,\n  we as createBody,\n  me as createDefaultAppearenceProvider,\n  be as createHoverState,\n  Te as createLifecyleObserver,\n  ke as createPresenceState,\n  ve as createSelectionState,\n  ye as createStore,\n  Le as createUndoStack,\n  Se as createViewportState,\n  ge as defaultColorProvider,\n  M as diffAnnotations,\n  Ce as getContributors,\n  se as mergeChanges,\n  G as onPointerSelect,\n  re as parseAll,\n  xe as parseW3CBodies,\n  pe as parseW3CUser,\n  Oe as serializeAll,\n  Be as serializeW3CBodies,\n  oe as shouldNotify,\n  Ue as toSvelteStore\n};\n//# sourceMappingURL=annotorious-core.es.js.map\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { parseW3CUser, parseW3CBodies, serializeW3CBodies } from '@annotorious/core';\r\nimport type { FormatAdapter, ParseResult, W3CAnnotation } from '@annotorious/core';\r\nimport { ShapeType } from '../core';\r\nimport type { ImageAnnotation, RectangleGeometry } from '../core';\r\nimport type { FragmentSelector } from './fragment';\r\nimport { parseFragmentSelector, serializeFragmentSelector } from './fragment';\r\nimport type { SVGSelector } from './svg';\r\nimport { parseSVGSelector, serializeSVGSelector } from './svg';\r\n\r\nexport type W3CImageFormatAdapter = FormatAdapter<ImageAnnotation, W3CAnnotation>;\r\n\r\nexport const W3CImageFormat = (\r\n  source: string,\r\n  invertY: boolean = false\r\n): W3CImageFormatAdapter => {\r\n\r\n  const parse = (serialized: W3CAnnotation) =>\r\n    parseW3CImageAnnotation(serialized, invertY);\r\n\r\n  const serialize = (annotation: ImageAnnotation) =>\r\n    serializeW3CImageAnnotation(annotation, source);\r\n\r\n  return { parse, serialize }\r\n}\r\n\r\nexport const parseW3CImageAnnotation = (\r\n  annotation: W3CAnnotation, \r\n  invertY: boolean = false\r\n): ParseResult<ImageAnnotation> => {\r\n  const annotationId = annotation.id || uuidv4();\r\n\r\n  const { \r\n    creator,\r\n    created,\r\n    updatedBy,\r\n    updated,\r\n    body, \r\n    ...rest \r\n  } = annotation;\r\n\r\n  const bodies = parseW3CBodies(body, annotationId);\r\n\r\n  const target = Array.isArray(annotation.target) ? annotation.target[0] : annotation.target;\r\n\r\n  const w3cSelector = Array.isArray(target.selector) ? target.selector[0] : target.selector;\r\n\r\n  const selector = \r\n    w3cSelector.type === 'FragmentSelector' ?\r\n      parseFragmentSelector(w3cSelector as FragmentSelector, invertY) :\r\n    w3cSelector.type === 'SvgSelector' ?\r\n      parseSVGSelector(w3cSelector as SVGSelector) : undefined;\r\n\r\n  return selector ? { \r\n    parsed: {\r\n      ...rest,\r\n      id: annotationId,\r\n      bodies,\r\n      target: {\r\n        created: created ? new Date(created) : undefined,\r\n        creator: parseW3CUser(creator),\r\n        ...rest.target,\r\n        annotation: annotationId,\r\n        selector\r\n      }\r\n    }\r\n  } : {\r\n    error: Error(`Unknown selector type: ${w3cSelector.type}`)\r\n  };\r\n\r\n}\r\n\r\nexport const serializeW3CImageAnnotation = (\r\n  annotation: ImageAnnotation, \r\n  source: string\r\n): W3CAnnotation => {\r\n  const { \r\n    selector, \r\n    creator, \r\n    created, \r\n    updated, \r\n    updatedBy, \r\n    ...rest \r\n  } = annotation.target;\r\n\r\n  const w3CSelector =\r\n    selector.type == ShapeType.RECTANGLE ?\r\n      serializeFragmentSelector(selector.geometry as RectangleGeometry) :\r\n      serializeSVGSelector(selector);\r\n\r\n  return {\r\n    ...annotation,\r\n    '@context': 'http://www.w3.org/ns/anno.jsonld',\r\n    id: annotation.id,\r\n    type: 'Annotation',\r\n    body: serializeW3CBodies(annotation.bodies),\r\n    creator,\r\n    created: created?.toISOString(),\r\n    target: {\r\n      ...rest,\r\n      source,\r\n      selector: w3CSelector\r\n    }\r\n  };\r\n};\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import { boundsFromPoints } from '../../../model';\r\n  import type { Polygon } from '../../../model';\r\n  import type { Transform } from '../../Transform';\r\n  import { Editor, Handle } from '..';\r\n\r\n  /** Props */\r\n  export let shape: Polygon;\r\n  export let computedStyle: string = undefined;\r\n  export let transform: Transform;\r\n  export let viewportScale: number = 1;\r\n\r\n  $: geom = shape.geometry;\r\n\r\n  $: handleSize = 10 / viewportScale;\r\n\r\n  const editor = (polygon: Polygon, handle: Handle, delta: [number, number]) => {\r\n    let points: [number, number][];\r\n\r\n    if (handle === Handle.SHAPE) {\r\n      points = polygon.geometry.points.map(([x, y]) => [x + delta[0], y + delta[1]]);\r\n    } else {\r\n      points = polygon.geometry.points.map(([x, y], idx) =>\r\n        handle === Handle(idx) ? [x + delta[0], y + delta[1]] : [x, y]\r\n      );\r\n    }\r\n\r\n    const bounds = boundsFromPoints(points);\r\n\r\n    return {\r\n      ...polygon,\r\n      geometry: { points, bounds }\r\n    }\r\n  }\r\n</script>\r\n\r\n<Editor\r\n  shape={shape}\r\n  transform={transform}\r\n  editor={editor}\r\n  on:change \r\n  on:grab\r\n  on:release\r\n  let:grab={grab}>\r\n\r\n  <polygon\r\n    class=\"a9s-outer\"\r\n    style={computedStyle ? 'display:none;' : undefined}\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    points={geom.points.map(xy => xy.join(',')).join(' ')} />\r\n\r\n  <polygon\r\n    class=\"a9s-inner a9s-shape-handle\"\r\n    style={computedStyle}\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    points={geom.points.map(xy => xy.join(',')).join(' ')} />\r\n\r\n  {#each geom.points as point, idx}\r\n    <rect \r\n      class=\"a9s-corner-handle\"\r\n      on:pointerdown={grab(Handle(idx))}\r\n      x={point[0] - handleSize / 2} y={point[1] - handleSize / 2} height={handleSize} width={handleSize} />\r\n  {/each}\r\n</Editor>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import type { Rectangle } from '../../../model';\r\n  import type { Transform } from '../../Transform';\r\n  import { Editor, Handle } from '..';\r\n\r\n  /** Props */\r\n  export let shape: Rectangle;\r\n  export let computedStyle: string = undefined;\r\n  export let transform: Transform;\r\n  export let viewportScale: number = 1;\r\n\r\n  $: geom = shape.geometry;\r\n\r\n  $: handleSize = 10 / viewportScale;\r\n\r\n  const editor = (rectangle: Rectangle, handle: Handle, delta: [number, number]) => {\r\n    const initialBounds = rectangle.geometry.bounds;\r\n\r\n    let [x0, y0] = [initialBounds.minX, initialBounds.minY];\r\n    let [x1, y1] = [initialBounds.maxX, initialBounds.maxY];\r\n\r\n    const [dx, dy] = delta;\r\n\r\n    if (handle === Handle.SHAPE) {\r\n      x0 += dx;\r\n      x1 += dx;\r\n      y0 += dy;\r\n      y1 += dy;\r\n    } else {\r\n      switch (handle) {\r\n        case Handle.TOP:\r\n        case Handle.TOP_LEFT:\r\n        case Handle.TOP_RIGHT: {\r\n          y0 += dy;\r\n          break;\r\n        }\r\n\r\n        case Handle.BOTTOM:\r\n        case Handle.BOTTOM_LEFT:\r\n        case Handle.BOTTOM_RIGHT: {\r\n          y1 += dy;\r\n          break;\r\n        }\r\n      }\r\n\r\n      switch (handle) {\r\n        case Handle.LEFT:\r\n        case Handle.TOP_LEFT:\r\n        case Handle.BOTTOM_LEFT: {\r\n          x0 += dx;\r\n          break;\r\n        }\r\n\r\n        case Handle.RIGHT:\r\n        case Handle.TOP_RIGHT:\r\n        case Handle.BOTTOM_RIGHT: {\r\n          x1 += dx;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    const x = Math.min(x0, x1);\r\n    const y = Math.min(y0, y1);\r\n    const w = Math.abs(x1 - x0);\r\n    const h = Math.abs(y1 - y0);\r\n\r\n    return {\r\n      ...rectangle,\r\n      geometry: {\r\n        x, y, w, h,\r\n        bounds: {\r\n          minX: x,\r\n          minY: y,\r\n          maxX: x + w,\r\n          maxY: y + h\r\n        }\r\n      }\r\n    };\r\n  }\r\n</script>\r\n\r\n<Editor\r\n  shape={shape}\r\n  transform={transform}\r\n  editor={editor}\r\n  on:grab\r\n  on:change \r\n  on:release\r\n  let:grab={grab}>\r\n\r\n  <rect \r\n    class=\"a9s-outer\"\r\n    style={computedStyle ? 'display:none;' : undefined}\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    x={geom.x} y={geom.y} width={geom.w} height={geom.h} />\r\n\r\n  <rect \r\n    class=\"a9s-inner a9s-shape-handle\"\r\n    style={computedStyle}\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    x={geom.x} y={geom.y} width={geom.w} height={geom.h} />\r\n\r\n  <rect \r\n    class=\"a9s-edge-handle a9s-edge-handle-top\" \r\n    on:pointerdown={grab(Handle.TOP)}\r\n    x={geom.x} y={geom.y} height={1} width={geom.w} />\r\n\r\n  <rect \r\n    class=\"a9s-edge-handle a9s-edge-handle-right\"\r\n    on:pointerdown={grab(Handle.RIGHT)}\r\n    x={geom.x + geom.w} y={geom.y} height={geom.h} width={1}/>\r\n\r\n  <rect \r\n    class=\"a9s-edge-handle a9s-edge-handle-bottom\" \r\n    on:pointerdown={grab(Handle.BOTTOM)}\r\n    x={geom.x} y={geom.y + geom.h} height={1} width={geom.w} />\r\n\r\n  <rect \r\n    class=\"a9s-edge-handle a9s-edge-handle-left\" \r\n    on:pointerdown={grab(Handle.LEFT)}\r\n    x={geom.x} y={geom.y} height={geom.h} width={1} />\r\n\r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-handle-topleft\"\r\n    on:pointerdown={grab(Handle.TOP_LEFT)}\r\n    x={geom.x - handleSize / 2} y={geom.y - handleSize / 2} height={handleSize} width={handleSize} />\r\n\r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-handle-topright\"\r\n    on:pointerdown={grab(Handle.TOP_RIGHT)}\r\n    x={geom.x + geom.w - handleSize / 2} y={geom.y - handleSize / 2} height={handleSize} width={handleSize} />\r\n  \r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-handle-bottomright\"\r\n    on:pointerdown={grab(Handle.BOTTOM_RIGHT)}\r\n    x={geom.x + geom.w - handleSize / 2} y={geom.y + geom.h - handleSize / 2} height={handleSize} width={handleSize} />\r\n    \r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-handle-bottomleft\"\r\n    on:pointerdown={grab(Handle.BOTTOM_LEFT)}\r\n    x={geom.x - handleSize / 2} y={geom.y + geom.h - handleSize / 2} height={handleSize} width={handleSize} />\r\n</Editor>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import { Handle, Editor } from '..';\r\n  import type { Transform } from '../../Transform';\r\n  import type { Ellipse } from '../../../model';\r\n  import type { Transform } from '../../Transform';\r\n\r\n  export let shape: Ellipse;\r\n\r\n  export let transform: Transform;\r\n\r\n  export let viewportScale: number = 1;\r\n\r\n  $: geom = shape.geometry;\r\n\r\n  $: handleSize = 10 / viewportScale;\r\n\r\n  const editor = (ellipse: Ellipse, handle: Handle, delta: [number, number]) => {\r\n    const initialBounds = ellipse.geometry.bounds;\r\n\r\n    let [x0, y0] = [initialBounds.minX, initialBounds.minY];\r\n    let [x1, y1] = [initialBounds.maxX, initialBounds.maxY];\r\n\r\n    const [dx, dy] = delta;\r\n\r\n    if (handle === Handle.SHAPE) {\r\n      x0 += dx;\r\n      x1 += dx;\r\n      y0 += dy;\r\n      y1 += dy;\r\n    } else {\r\n      switch (handle) {\r\n        case Handle.TOP: {\r\n          y0 += dy;\r\n          break;\r\n        }\r\n\r\n        case Handle.BOTTOM: {\r\n          y1 += dy;\r\n          break;\r\n        }\r\n\r\n        case Handle.LEFT: {\r\n          x0 += dx;\r\n          break;\r\n        }\r\n\r\n        case Handle.RIGHT: {\r\n          x1 += dx;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    const x = Math.min(x0, x1);\r\n    const y = Math.min(y0, y1);\r\n    const w = Math.abs(x1 - x0);\r\n    const h = Math.abs(y1 - y0);\r\n\r\n    const cx = (x0 + x1) / 2;\r\n    const cy = (y0 + y1) / 2;\r\n\r\n    const rx = w / 2;\r\n    const ry = h / 2;\r\n\r\n    return {\r\n      ...ellipse,\r\n      geometry: {\r\n        ...ellipse.geometry,\r\n        cx, cy, rx, ry,\r\n        bounds: {\r\n          minX: x,\r\n          minY: y,\r\n          maxX: x + w,\r\n          maxY: y + h\r\n        }\r\n      }\r\n    };\r\n  }\r\n</script>\r\n\r\n<Editor\r\n  shape={shape}\r\n  transform={transform}\r\n  editor={editor}\r\n  on:grab\r\n  on:change \r\n  on:release\r\n  let:grab={grab}>\r\n\r\n  <ellipse \r\n    class=\"a9s-outer\"\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    cx={geom.cx} cy={geom.cy} rx={geom.rx} ry={geom.ry} />\r\n\r\n  <ellipse \r\n    class=\"a9s-inner a9s-shape-handle\"\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    cx={geom.cx} cy={geom.cy} rx={geom.rx} ry={geom.ry} />\r\n\r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-top\"\r\n    on:pointerdown={grab(Handle.TOP)}\r\n    x={geom.cx - handleSize / 2} y={geom.cy - handleSize / 2 - geom.ry} height={handleSize} width={handleSize} />\r\n\r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-handle-right\"\r\n    on:pointerdown={grab(Handle.RIGHT)}\r\n    x={geom.cx + geom.rx - handleSize / 2} y={geom.cy - handleSize / 2} height={handleSize} width={handleSize} />\r\n  \r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-handle-bottom\"\r\n    on:pointerdown={grab(Handle.BOTTOM)}\r\n    x={geom.cx - handleSize / 2} y={geom.cy + geom.ry - handleSize / 2} height={handleSize} width={handleSize} />\r\n    \r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-handle-left\"\r\n    on:pointerdown={grab(Handle.LEFT)}\r\n    x={geom.cx - geom.rx - handleSize / 2} y={geom.cy - handleSize / 2} height={handleSize} width={handleSize} />\r\n</Editor>\r\n","import type { DrawingStyle } from '@annotorious/core';\r\nimport type { ImageAnnotation } from '../../model';\r\n\r\nexport const computeStyle = (annotation: ImageAnnotation, style?: DrawingStyle | ((a: ImageAnnotation) => DrawingStyle), staticProps?: DrawingStyle) => {\r\n  const computed = typeof style === 'function' ? style(annotation) : style;\r\n\r\n  if (computed) {\r\n    const { fill, fillOpacity } = computed;\r\n\r\n    let css = '';\r\n    let staticOpacity = undefined\r\n    \r\n    if (fill)\r\n      css += `fill:${fill};stroke:${fill};`;\r\n    \r\n    if (staticProps) {\r\n      staticOpacity =  staticProps.fillOpacity\r\n    }\r\n    css += `fill-opacity:${staticOpacity || fillOpacity || '0.25'};`\r\n\r\n    return css;\r\n  }\r\n}","<script type=\"ts\" lang=\"ts\">\r\n  import { boundsFromPoints, type ImageAnnotation } from '../../../model';\r\n  import type { Freehand } from '../../../model';\r\n  import type { Transform } from '../../Transform';\r\n  import type { DrawingStyle } from '@annotorious/core';\r\n  import { Editor, Handle } from '..';\r\n  import { getSmoothPathData, options } from '../../utils/path';\r\n  import { computeStyle } from '../../utils/styling';\r\n  /** Props */\r\n  export let shape: Freehand;\r\n//   export let computedStyle: string = undefined;\r\n  export let annotation: ImageAnnotation;\r\n  export let transform: Transform;\r\n  export let viewportScale: number = 1;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n  let staticProps = {\r\n    fillOpacity: 1\r\n  }\r\n  $: geom = shape.geometry;\r\n\r\n  $: handleSize = 10 / viewportScale;\r\n\r\n  $: computedStyle = computeStyle(annotation, style,staticProps);\r\n\r\n  const editor = (path: Freehand, handle: Handle, delta: [number, number]) => {\r\n    let points: [number, number, number][];\r\n\r\n    if (handle === Handle.SHAPE) {\r\n      points = path.geometry.points.map(([x, y, p]) => [x + delta[0], y + delta[1], p]);\r\n    } \r\n\r\n    const bounds = boundsFromPoints(points.map(point => [point[0],point[1]]));\r\n\r\n    return {\r\n      ...path,\r\n      geometry: { points, bounds }\r\n    }\r\n  }\r\n\r\n  $: pathData = getSmoothPathData(geom.points,options,true)\r\n</script>\r\n\r\n<Editor\r\n  shape={shape}\r\n  transform={transform}\r\n  editor={editor}\r\n  on:change \r\n  on:grab\r\n  on:release\r\n  let:grab={grab}>\r\n\r\n  <path\r\n    class=\"a9s-shape-handle\"\r\n    style={computedStyle}\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    d={pathData} />\r\n</Editor>\r\n","import { ShapeType, type Shape } from '../../model';\r\nimport type { SvelteComponent } from 'svelte';\r\nimport { PolygonEditor } from './polygon';\r\nimport { RectangleEditor } from './rectangle';\r\nimport { EllipseEditor } from './ellipse';\r\nimport { FreehandEditor } from './freehand'\r\n\r\nconst REGISTERED = new Map<ShapeType, typeof SvelteComponent>([\r\n  [ShapeType.RECTANGLE, RectangleEditor],\r\n  [ShapeType.POLYGON, PolygonEditor],\r\n  [ShapeType.ELLIPSE, EllipseEditor],\r\n  [ShapeType.FREEHAND, FreehandEditor],\r\n])\r\n\r\nexport const getEditor = (shape: Shape) => REGISTERED.get(shape.type);\r\n\r\nexport const registerEditor = (shapeType: ShapeType, editor: typeof SvelteComponent) =>\r\n  REGISTERED.set(shapeType, editor);\r\n","export type Handle = string;\r\n\r\nexport const Handle = (value: string | number) => `HANDLE-${value}`;\r\n\r\nHandle.SHAPE = 'SHAPE';\r\n\r\nHandle.TOP = 'TOP';\r\n\r\nHandle.RIGHT = 'RIGHT';\r\n\r\nHandle.BOTTOM = 'BOTTOM';\r\n\r\nHandle.LEFT = 'LEFT';\r\n\r\nHandle.TOP_LEFT = 'TOP_LEFT';\r\n\r\nHandle.TOP_RIGHT = 'TOP_RIGHT';\r\n\r\nHandle.BOTTOM_RIGHT = 'BOTTOM_RIGHT';\r\n\r\nHandle.BOTTOM_LEFT = 'BOTTOM_LEFT';","<script type=\"ts\" lang=\"ts\">\r\n  import { createEventDispatcher } from 'svelte';\r\n  import type { Shape } from '../../model';\r\n  import type { Handle } from './Handle';\r\n  import type { Transform } from '../Transform';\r\n\r\n  const dispatch = createEventDispatcher<{ grab: undefined, release: undefined, change: Shape }>();\r\n\r\n  /** Props */\r\n  export let shape: Shape;\r\n  export let editor: (shape: Shape, handle: Handle, delta: [number, number]) => Shape;\r\n  export let transform: Transform;\r\n\r\n  let grabbedHandle: Handle = null;\r\n\r\n  let origin: [number, number];\r\n\r\n  let initialShape: Shape = null;\r\n\r\n  const onGrab = (handle: Handle) => (evt: PointerEvent) => {\r\n    grabbedHandle = handle;\r\n    origin = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n    initialShape = shape;\r\n\r\n    const target = evt.target as Element;\r\n    target.setPointerCapture(evt.pointerId);\r\n\r\n    dispatch('grab');\r\n  }\r\n\r\n  const onPointerMove = (evt: PointerEvent) => {\r\n    if (grabbedHandle) {\r\n      const [x, y] = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n\r\n      const delta: [number, number] = [x - origin[0], y - origin[1]];\r\n\r\n      shape = editor(initialShape, grabbedHandle, delta);\r\n      \r\n      dispatch('change', shape);\r\n    }\r\n  }\r\n\r\n  const onRelease = (evt: PointerEvent) => {    \r\n    const target = evt.target as Element;\r\n    target.releasePointerCapture(evt.pointerId);\r\n\r\n    grabbedHandle = null;\r\n\r\n    initialShape = shape;\r\n    \r\n    dispatch('release');\r\n  }\r\n</script>\r\n\r\n<g\r\n  class=\"a9s-annotation selected\"\r\n  on:pointerup={onRelease}\r\n  on:pointermove={onPointerMove}>\r\n\r\n  <slot grab={onGrab} />\r\n</g>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import type { DrawingStyle } from '@annotorious/core';\r\n  import { createEventDispatcher, onMount, type SvelteComponent } from 'svelte';\r\n  import type { ImageAnnotation, Shape } from '../../model';\r\n  import { computeStyle } from '../utils/styling';\r\n  import type { Transform } from '../Transform';\r\n\r\n  const dispatch = createEventDispatcher<{ grab: undefined, release: undefined, change: Shape }>();\r\n\r\n  /** Props */\r\n  export let annotation: ImageAnnotation;\r\n  export let editor: typeof SvelteComponent;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n  export let target: SVGGElement;\r\n  export let transform: Transform;\r\n  export let viewportScale: number;\r\n\r\n  let editorComponent: SvelteComponent;\r\n\r\n  $: computedStyle = computeStyle(annotation, style);\r\n\r\n  $: if (annotation) editorComponent?.$set({ shape: annotation.target.selector });\r\n  $: if (editorComponent) editorComponent.$set({ transform });\r\n  $: if (editorComponent) editorComponent.$set({ viewportScale });\r\n\r\n  onMount(() => {\r\n    editorComponent = new editor({\r\n      target,\r\n      props: { shape: annotation.target.selector, computedStyle, transform, viewportScale }\r\n    });\r\n\r\n    editorComponent.$on('change', event => {\r\n      editorComponent.$$set({ shape: event.detail });\r\n      dispatch('change', event.detail);\r\n    });\r\n\r\n    editorComponent.$on('grab', event => dispatch('grab', event.detail));\r\n    editorComponent.$on('release', event => dispatch('release', event.detail));\r\n\r\n    return () => {\r\n      editorComponent.$destroy();\r\n    }\r\n  });\r\n</script>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import { createEventDispatcher, onMount, type SvelteComponent } from 'svelte';\r\n  import type { Transform } from '../Transform';\r\n  import type { Shape } from 'src/model';\r\n  import type { DrawingMode } from 'src/AnnotoriousOpts';\r\n\r\n  const dispatch = createEventDispatcher<{ create: Shape }>();\r\n\r\n  /** Props **/\r\n  export let drawingMode: DrawingMode;\r\n  export let target: SVGGElement;\r\n  export let tool: typeof SvelteComponent;\r\n  export let transform: Transform;\r\n  export let viewportScale: number;\r\n\r\n  let toolComponent: SvelteComponent;\r\n\r\n  $: if (toolComponent) toolComponent.$set({ transform });\r\n  $: if (toolComponent) toolComponent.$set({ viewportScale });\r\n\r\n  onMount(() => {\r\n    const svg = target.closest('svg');\r\n\r\n    const cleanup: Function[] = [];\r\n\r\n    const addEventListener = (name: string, handler: (evt: PointerEvent) => void, capture?: boolean) => {\r\n      svg.addEventListener(name, handler, capture);\r\n      cleanup.push(() => svg.removeEventListener(name, handler, capture));\r\n    }\r\n\r\n    toolComponent = new tool({\r\n      target,\r\n      props: { \r\n        addEventListener,\r\n        drawingMode,\r\n        transform, \r\n        viewportScale\r\n      }\r\n    });\r\n\r\n    toolComponent.$on('create', \r\n      event => dispatch('create', event.detail));\r\n\r\n    return () => {\r\n      cleanup.forEach(fn => fn());\r\n      toolComponent.$destroy();\r\n    }\r\n  });\r\n</script>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import { createEventDispatcher, onMount } from 'svelte';\r\n  import type { DrawingMode } from '../../../AnnotoriousOpts';\r\n  import { ShapeType, type Rectangle } from '../../../model';\r\n  import type { Transform } from '../..';\r\n\r\n  const dispatch = createEventDispatcher<{ create: Rectangle }>();\r\n  \r\n  /** Props **/\r\n  export let addEventListener: (type: string, fn: EventListener, capture?: boolean) => void;\r\n  export let drawingMode: DrawingMode;\r\n  export let transform: Transform;\r\n\r\n  let lastPointerDown: number;\r\n\r\n  let origin: [x: number, y: number]; \r\n\r\n  let anchor: [number, number];\r\n\r\n  let x: number, y: number, w: number, h: number;\r\n\r\n  const onPointerDown = (evt: PointerEvent) => {\r\n    lastPointerDown = performance.now();\r\n\r\n    if (drawingMode === 'drag') {\r\n      origin = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n      anchor = origin;\r\n\r\n      x = origin[0];\r\n      y = origin[1];\r\n      w = 1;\r\n      h = 1;\r\n    }\r\n  }\r\n\r\n  const onPointerMove = (evt: PointerEvent) => {\r\n    if (origin) {\r\n      anchor = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n\r\n      x = Math.min(anchor[0], origin[0]);\r\n      y = Math.min(anchor[1], origin[1]);\r\n      w = Math.abs(anchor[0] - origin[0]);\r\n      h = Math.abs(anchor[1] - origin[1]);\r\n    }\r\n  }\r\n    \r\n  const onPointerUp = (evt: PointerEvent) => {\r\n    const timeDifference = performance.now() - lastPointerDown;\r\n\r\n    if (drawingMode === 'click') {\r\n      // Not a single click - ignore\r\n      if (timeDifference > 300)\r\n        return;\r\n\r\n      evt.stopPropagation();\r\n\r\n      if (origin) {\r\n        stopDrawing();\r\n      } else {\r\n        // Start drawing\r\n        origin = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n        anchor = origin;\r\n\r\n        x = origin[0];\r\n        y = origin[1];\r\n        w = 1;\r\n        h = 1;\r\n      }\r\n    } else if (origin) {\r\n      if (timeDifference > 300 || w * h > 100) {\r\n        evt.stopPropagation();\r\n        stopDrawing();\r\n      } else {\r\n        origin = null;\r\n        anchor = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  const stopDrawing = () => {\r\n    // Require 4x4 pixels minimum\r\n    if (w * h > 15) {\r\n      const shape: Rectangle = {\r\n        type: ShapeType.RECTANGLE, \r\n        geometry: {\r\n          bounds: {\r\n            minX: x, \r\n            minY: y,\r\n            maxX: x + w,\r\n            maxY: y + h\r\n          },\r\n          x, y, w, h\r\n        }\r\n      }\r\n\r\n      dispatch('create', shape);\r\n    }\r\n    \r\n    origin = null;\r\n    anchor = null;\r\n  }\r\n\r\n  onMount(() => {\r\n    addEventListener('pointerdown', onPointerDown);\r\n    addEventListener('pointermove', onPointerMove);\r\n    addEventListener('pointerup', onPointerUp, true);\r\n  });\r\n</script>\r\n\r\n<g class=\"a9s-annotation a9s-rubberband\">\r\n  {#if origin}\r\n    <rect\r\n      class=\"a9s-outer\"\r\n      x={x} \r\n      y={y} \r\n      width={w} \r\n      height={h} />\r\n\r\n    <rect\r\n      class=\"a9s-inner\"\r\n      x={x} \r\n      y={y} \r\n      width={w} \r\n      height={h} />\r\n  {/if}\r\n</g>\r\n","export const distance = (a: [number, number], b: [number, number]): number => {\r\n  const dx = Math.abs(b[0] - a[0]);\r\n  const dy = Math.abs(b[1] - a[1]);\r\n\r\n  return Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\r\n}","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","import { writable } from 'svelte/store';\r\n\r\nconst setSize = (image: HTMLImageElement | HTMLCanvasElement, svg: SVGElement) => {\r\n  const { naturalWidth, naturalHeight } = (image as HTMLImageElement);\r\n\r\n  if (!naturalWidth && !naturalHeight) {\r\n    // Might be because a) the image has not loaded yet, or b) because it's not \r\n    // an image element (but maybe a CANVAS etc.)! Allow for both possibilities.\r\n    const { width, height } = image;\r\n\r\n    svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\r\n\r\n    image.addEventListener('load', event => {\r\n      const img = event.target as HTMLImageElement;\r\n      svg.setAttribute('viewBox', `0 0 ${img.naturalWidth} ${img.naturalHeight}`);\r\n    });\r\n  } else {\r\n    svg.setAttribute('viewBox', `0 0 ${naturalWidth} ${naturalHeight}`);\r\n  }\r\n\r\n}\r\n\r\nexport const enableResponsive = (image: HTMLImageElement | HTMLCanvasElement, svg: SVGSVGElement) => {\r\n\r\n  setSize(image, svg);\r\n\r\n  const { subscribe, set } = writable(1);\r\n\r\n  let resizeObserver: ResizeObserver;\r\n\r\n  if (window.ResizeObserver) {\r\n    resizeObserver = new ResizeObserver(() => {\r\n      const svgBounds = svg.getBoundingClientRect();\r\n\r\n      const { width, height } = svg.viewBox.baseVal;\r\n  \r\n      const scale = Math.max(\r\n        svgBounds.width / width,\r\n        svgBounds.height / height\r\n      );\r\n  \r\n      set(scale);\r\n    });\r\n  \r\n    resizeObserver.observe(svg.parentElement);\r\n  }\r\n\r\n  const destroy = () => {\r\n    if (resizeObserver)\r\n      resizeObserver.disconnect();\r\n  }\r\n\r\n  return { destroy, subscribe };\r\n\r\n}\r\n\r\n","export const isTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;","<script type=\"ts\" lang=\"ts\">\r\n  import { onMount, createEventDispatcher } from 'svelte';\r\n  import type { DrawingMode } from '../../../AnnotoriousOpts';\r\n  import { boundsFromPoints, computeArea, ShapeType, type Polygon } from '../../../model';\r\n  import { distance } from '../../utils';\r\n  import type { Transform } from '../..';\r\n\r\n  const dispatch = createEventDispatcher<{ create: Polygon }>();\r\n\r\n  /** Props **/\r\n  export let addEventListener: (type: string, fn: EventListener, capture?: boolean) => void;\r\n  export let drawingMode: DrawingMode;\r\n  export let transform: Transform;\r\n  export let viewportScale = 1;\r\n\r\n  let lastPointerDown: { timeStamp: number, offsetX: number, offsetY: number };\r\n\r\n  let points: [number, number][] = [];\r\n  \r\n  let cursor: [number, number] = null;\r\n\r\n  let isClosable: boolean = false;\r\n\r\n  const CLOSE_DISTANCE = 20;\r\n\r\n  $: handleSize = 10 / viewportScale;\r\n\r\n  const onPointerDown = (evt: PointerEvent) => {\r\n    // Note that the event itself is ephemeral!\r\n    const { timeStamp, offsetX, offsetY } = evt;\r\n    lastPointerDown = { timeStamp, offsetX, offsetY };\r\n\r\n    if (drawingMode === 'drag') {\r\n      if (points.length === 0) {\r\n        const point = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n        points.push(point);\r\n\r\n        cursor = point;\r\n      }\r\n    }\r\n  }\r\n\r\n  const onPointerMove = (evt: PointerEvent) => {\r\n    if (points.length > 0) {\r\n      cursor = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n\r\n      if (points.length >  2) {\r\n        const d = distance(cursor, points[0]) * viewportScale;\r\n        isClosable = d < CLOSE_DISTANCE;\r\n      }\r\n    }\r\n  }\r\n\r\n  const onPointerUp = (evt: PointerEvent) => {\r\n    if (drawingMode === 'click') {\r\n      const timeDifference = evt.timeStamp - lastPointerDown.timeStamp;\r\n\r\n      const d = distance(\r\n        [lastPointerDown.offsetX, lastPointerDown.offsetY], \r\n        [evt.offsetX, evt.offsetY]);\r\n\r\n      if (timeDifference > 300 || d > 15) // Not a single click - ignore\r\n        return;\r\n\r\n      if (isClosable) {\r\n        stopDrawing();\r\n      } else if (points.length === 0) {\r\n        // Start drawing\r\n        const point = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n        points.push(point);\r\n\r\n        cursor = point;\r\n      } else {\r\n        points.push(cursor);\r\n      }\r\n    } else {\r\n      // Require minimum drag of 4px\r\n      if (points.length === 1) {\r\n        const dist = distance(points[0], cursor);\r\n\r\n        if (dist <= 4) {\r\n          // Cancel\r\n          points = [];\r\n          cursor = null;\r\n\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Stop click event from propagating if we're drawing\r\n      evt.stopImmediatePropagation();\r\n\r\n      if (isClosable) {\r\n        stopDrawing();\r\n      } else {\r\n        points.push(cursor);\r\n      }\r\n    }\r\n  }\r\n\r\n  const onDblClick = () => {\r\n    // Require min 3 points (incl. cursor) and minimum\r\n    // polygon area\r\n    const p = [...points, cursor];\r\n\r\n    const shape: Polygon = {\r\n      type: ShapeType.POLYGON, \r\n      geometry: {\r\n        bounds: boundsFromPoints(p),\r\n        points: p\r\n      }\r\n    }\r\n\r\n    const area = computeArea(shape);\r\n    if (area > 4) {\r\n      points = [];\r\n      cursor = null;\r\n    \r\n      dispatch('create', shape);\r\n    }\r\n  }\r\n\r\n  const stopDrawing = () => {\r\n    const shape: Polygon = {\r\n      type: ShapeType.POLYGON, \r\n      geometry: {\r\n        bounds: boundsFromPoints(points),\r\n        points: [...points]\r\n      }\r\n    }\r\n\r\n    points = [];\r\n    cursor = null;\r\n  \r\n    dispatch('create', shape);\r\n  }\r\n\r\n  onMount(() => {\r\n    addEventListener('pointerdown', onPointerDown, true);\r\n    addEventListener('pointermove', onPointerMove);\r\n    addEventListener('pointerup', onPointerUp, true);\r\n    addEventListener('dblclick', onDblClick, true);\r\n  });\r\n</script>\r\n\r\n<g class=\"a9s-annotation a9s-rubberband\">\r\n  {#if cursor}\r\n    {@const coords = (isClosable ? points : [...points, cursor]).map(xy => xy.join(',')).join(' ')}\r\n      <polygon \r\n        class=\"a9s-outer\"\r\n        points={coords} />\r\n\r\n      <polygon \r\n        class=\"a9s-inner\"\r\n        points={coords} />\r\n        \r\n    {#if isClosable}\r\n      <rect \r\n        class=\"a9s-corner-handle\"\r\n        x={points[0][0] - handleSize / 2} \r\n        y={points[0][1] - handleSize / 2} \r\n        height={handleSize} \r\n        width={handleSize} />\r\n    {/if}\r\n  {/if}\r\n</g>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import { createEventDispatcher, onMount } from 'svelte';\r\n  import type { DrawingMode } from '../../../AnnotoriousOpts';\r\n  import { ShapeType, type Ellipse } from '../../../model';\r\n  import type { Transform } from '../..';\r\n\r\n  const dispatch = createEventDispatcher<{ create: Ellipse }>();\r\n  \r\n  /** Props **/\r\n  export let addEventListener: (type: string, fn: EventListener, capture?: boolean) => void;\r\n  export let drawingMode: DrawingMode\r\n  export let transform: Transform;\r\n  \r\n  let container: SVGGElement;\r\n\r\n  let origin: [x: number, y: number]; \r\n\r\n  let anchor: [number, number];\r\n\r\n  let x: number, y: number, w: number, h: number;\r\n\r\n  let isShiftPressed = false;\r\n\r\n  let isCtrlPressed = false;\r\n\r\n  let lastPointerDown: number;\r\n\r\n  let lastMoveEvent: PointerEvent;\r\n\r\n  const onPointerDown = (evt: PointerEvent) => {\r\n    lastPointerDown = performance.now();\r\n\r\n    if (drawingMode === 'drag') {\r\n      origin = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n      anchor = origin;\r\n\r\n      x = origin[0];\r\n      y = origin[1];\r\n      w = 1;\r\n      h = 1;\r\n    }\r\n  }\r\n\r\n  const updateShape = (maybeEvent?: PointerEvent) => {\r\n    const evt = maybeEvent || lastMoveEvent;\r\n\r\n    if (origin) {\r\n      anchor = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n\r\n      if (isCtrlPressed) {\r\n        const mw = 2 * Math.abs(anchor[0] - origin[0]);\r\n        const mh = 2 * Math.abs(anchor[1] - origin[1]);\r\n\r\n        w = isShiftPressed ? Math.max(mw, mh) : mw;\r\n        h = isShiftPressed ? w : mh;\r\n\r\n        x = Math.min(anchor[0], origin[0] - w / 2);\r\n        y = Math.min(anchor[1], origin[1] - h / 2);\r\n      } else {\r\n        const mw = Math.abs(anchor[0] - origin[0]);\r\n        const mh = Math.abs(anchor[1] - origin[1]);\r\n\r\n        w = isShiftPressed ? Math.max(mw, mh) : mw;\r\n        h = isShiftPressed ? w : mh;\r\n\r\n        x = Math.min(anchor[0], origin[0]);\r\n        y = Math.min(anchor[1], origin[1]);\r\n      }\r\n    }\r\n\r\n    if (maybeEvent)\r\n      lastMoveEvent = maybeEvent;\r\n  }\r\n    \r\n  const onPointerUp = (evt: PointerEvent) => {\r\n    if (drawingMode === 'click')\r\n      evt.stopImmediatePropagation();\r\n\r\n    const timeDifference = performance.now() - lastPointerDown;\r\n\r\n    if (drawingMode === 'click') {\r\n      // Not a single click - ignore\r\n      if (timeDifference > 300)\r\n        return;\r\n\r\n      evt.stopPropagation();\r\n\r\n      if (origin) {\r\n        stopDrawing();\r\n      } else {\r\n        // Start drawing\r\n        origin = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n        anchor = origin;\r\n\r\n        x = origin[0];\r\n        y = origin[1];\r\n        w = 1;\r\n        h = 1;\r\n      }\r\n    } else if (origin) {\r\n      if (timeDifference > 300 || w * h > 100) {\r\n        evt.stopPropagation();\r\n        stopDrawing();\r\n      } else {\r\n        origin = null;\r\n        anchor = null;\r\n\r\n        lastMoveEvent = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  const stopDrawing = () => {\r\n    // Require 4x4 pixels minimum\r\n    if (w * h > 15) {\r\n      const shape: Ellipse = {\r\n        type: ShapeType.ELLIPSE, \r\n        geometry: {\r\n          bounds: {\r\n            minX: x, \r\n            minY: y,\r\n            maxX: x + w,\r\n            maxY: y + h\r\n          },\r\n          cx: x + w / 2,\r\n          cy: y + h / 2,\r\n          rx: w / 2,\r\n          ry: h / 2\r\n        }\r\n      }\r\n\r\n      dispatch('create', shape);\r\n    }\r\n\r\n    origin = null;\r\n    anchor = null;\r\n\r\n    lastMoveEvent = undefined;\r\n  }\r\n\r\n  const onKeyDown = (evt: KeyboardEvent) => {\r\n    if (evt.key === 'Shift') {\r\n      isShiftPressed = true;  \r\n      updateShape();  \r\n    }\r\n\r\n    if (evt.key === 'Control') {\r\n      isCtrlPressed = true;\r\n      updateShape();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (evt: KeyboardEvent) => {\r\n    if (evt.key === 'Shift') {\r\n      isShiftPressed = false;\r\n      updateShape();  \r\n    }\r\n\r\n    if (evt.key === 'Control') {\r\n      isCtrlPressed = false;\r\n      updateShape();  \r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    document.addEventListener('keyup', onKeyUp);\r\n    document.addEventListener('keydown', onKeyDown);\r\n\r\n    addEventListener('pointerdown', onPointerDown);\r\n    addEventListener('pointermove', updateShape);\r\n    addEventListener('pointerup', onPointerUp);\r\n\r\n    return () => {\r\n      document.removeEventListener('keyup', onKeyUp);\r\n      document.removeEventListener('keydown', onKeyDown);\r\n    }\r\n  });\r\n</script>\r\n\r\n<g \r\n  bind:this={container}\r\n  class=\"a9s-annotation a9s-rubberband\">\r\n  \r\n  {#if origin}\r\n    <ellipse \r\n      class=\"a9s-outer\"\r\n      cx={x + w / 2} \r\n      cy={y + h / 2} \r\n      rx={w / 2} \r\n      ry={h / 2} />\r\n\r\n    <ellipse \r\n      class=\"a9s-inner\"\r\n      cx={x + w / 2} \r\n      cy={y + h / 2} \r\n      rx={w / 2} \r\n      ry={h / 2} />\r\n  {/if}\r\n</g>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import { onMount, createEventDispatcher } from 'svelte';\r\n  import type { DrawingMode } from '../../../AnnotoriousOpts';\r\n  import type { DrawingStyle } from '@annotorious/core';\r\n  import { boundsFromPoints, computeArea, ShapeType, type Freehand, type ImageAnnotation } from '../../../model';\r\n  import { distance } from '../../utils';\r\n  import { getSmoothPathData, options } from '../../utils/path';\r\n  import { computeStyle } from '../../utils/styling'; \r\n  import type { Transform } from '../..';\r\n\r\n  const dispatch = createEventDispatcher<{ create: Freehand }>();\r\n\r\n  /** Props **/\r\n  export let addEventListener: (type: string, fn: EventListener, capture?: boolean) => void;\r\n  export let drawingMode: DrawingMode;\r\n  export let annotation: ImageAnnotation;\r\n  export let transform: Transform;\r\n  export let viewportScale = 1;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n  let staticProps = {\r\n    fillOpacity: 1\r\n  }\r\n\r\n  let lastPointerDown: { timeStamp: number, offsetX: number, offsetY: number };\r\n\r\n  let points : [number, number, number][] = [];\r\n  \r\n  let pathData: string = ''\r\n\r\n  let cursor: [number, number] = null;\r\n\r\n  let isDrawing: Boolean = false;\r\n\r\n  $: handleSize = 10 / viewportScale;\r\n\r\n  $: computedStyle = computeStyle(annotation, style,staticProps);\r\n\r\n  const onPointerDown = (evt: PointerEvent) => {\r\n    // Note that the event itself is ephemeral!\r\n    const { timeStamp, offsetX, offsetY } = evt;\r\n    lastPointerDown = { timeStamp, offsetX, offsetY };\r\n\r\n    if (drawingMode === 'drag') {\r\n      \r\n      if (points.length === 0) {\r\n        isDrawing = true\r\n        const point = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n        points.push([...point,evt.pressure]);\r\n        \r\n        cursor = point;\r\n        pathData = getSmoothPathData(points,options)\r\n      }\r\n    }\r\n  }\r\n\r\n  const onPointerMove = (evt: PointerEvent) => {\r\n    if (isDrawing){\r\n      const point = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n      points.push([...point,evt.pressure])\r\n      pathData = getSmoothPathData(points,options)\r\n    }\r\n  }\r\n\r\n  const onPointerUp = (evt: PointerEvent) => {\r\n      // Stop click event from propagating if we're drawing\r\n      // evt.stopImmediatePropagation();\r\n      if (isDrawing){\r\n      // pathData = getSmoothPathData(points,options)\r\n        stopDrawing();\r\n      }\r\n  }\r\n\r\n  const stopDrawing = () => {\r\n    const shape: Freehand = {\r\n      type: ShapeType.FREEHAND, \r\n      geometry: {\r\n        bounds: boundsFromPoints(points.map(point => [point[0],point[1]])),\r\n        points: points\r\n      }\r\n    }\r\n    isDrawing = false\r\n    points = [];\r\n    // pathData = null\r\n    cursor = null;\r\n  \r\n    dispatch('create', shape);\r\n  }\r\n\r\n  //  $: pathData = getSmoothPathData(points,options)\r\n  \r\n\r\n  onMount(() => {\r\n    addEventListener('pointerdown', onPointerDown, true);\r\n    addEventListener('pointermove', onPointerMove);\r\n    addEventListener('pointerup', onPointerUp, true);\r\n  });\r\n</script>\r\n\r\n<g class=\"a9s-annotation a9s-rubberband\">\r\n  {#if isDrawing}\r\n    <!-- {#if points.length > 0} -->\r\n        <path \r\n          style={computedStyle}\r\n          d={pathData} />\r\n    <!-- {/if} -->\r\n  {/if}\r\n</g>\r\n","import type { SvelteComponent } from 'svelte';\r\nimport { RubberbandRectangle } from './rectangle';\r\nimport { RubberbandPolygon } from './polygon';\r\nimport { RubberbandEllipse } from './ellipse';\r\nimport { RubberbandFreehand } from './freehand'\r\nimport type { DrawingMode } from '../../AnnotoriousOpts';\r\n\r\nexport type DrawingTool = 'rectangle' | 'polygon' | string;\r\n\r\nexport type DrawingToolOpts = {\r\n\r\n  drawingMode?: DrawingMode;\r\n\r\n  [key: string]: string;\r\n\r\n}\r\n\r\nconst REGISTERED = new Map<\r\n  DrawingTool,\r\n  { tool: typeof SvelteComponent; opts?: DrawingToolOpts }\r\n>([\r\n  ['rectangle', { tool: RubberbandRectangle }],\r\n  ['polygon', { tool: RubberbandPolygon }],\r\n  ['ellipse', { tool: RubberbandEllipse }],\r\n  ['freehand', { tool: RubberbandFreehand }],\r\n])\r\n\r\nexport const listDrawingTools = () => [...REGISTERED.keys()];\r\n\r\nexport const getTool = (name: string) => REGISTERED.get(name);\r\n  \r\nexport const registerTool = (name: string, tool: typeof SvelteComponent, opts?: DrawingToolOpts) =>\r\n  REGISTERED.set(name, { tool, opts });\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import type { DrawingStyle } from '@annotorious/core';\r\n  import type { Geometry, EllipseGeometry, ImageAnnotation } from '../../model';\r\n  import { computeStyle } from '../utils/styling';\r\n  \r\n  /** Props */\r\n  export let annotation: ImageAnnotation;\r\n  export let geom: Geometry;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n\r\n  $: computedStyle = computeStyle(annotation, style);\r\n\r\n  const { cx, cy, rx, ry } = geom as EllipseGeometry;\r\n</script>\r\n\r\n<g data-id={annotation.id}>\r\n  <ellipse\r\n    class=\"a9s-outer\"\r\n    style={computedStyle ? 'display:none;' : undefined}\r\n    cx={cx} \r\n    cy={cy} \r\n    rx={rx} \r\n    ry={ry} />\r\n\r\n  <ellipse\r\n    class=\"a9s-inner\"\r\n    style={computedStyle}\r\n    cx={cx} \r\n    cy={cy} \r\n    rx={rx} \r\n    ry={ry} />\r\n</g>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import type { DrawingStyle } from '@annotorious/core';\r\n  import type { Geometry, ImageAnnotation, PolygonGeometry } from '../../model';\r\n  import { computeStyle } from '../utils/styling';\r\n  \r\n  /** Props **/\r\n  export let annotation: ImageAnnotation;\r\n  export let geom: Geometry;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n\r\n  $: computedStyle = computeStyle(annotation, style);\r\n\r\n  const { points } = geom as PolygonGeometry;\r\n</script>\r\n\r\n<g data-id={annotation.id}>\r\n  <polygon \r\n    class=\"a9s-outer\"\r\n    style={computedStyle ? 'display:none;' : undefined}\r\n    points={points.map(xy => xy.join(',')).join(' ')} />\r\n\r\n  <polygon \r\n    class=\"a9s-inner\"\r\n    style={computedStyle}\r\n    points={points.map(xy => xy.join(',')).join(' ')} />\r\n</g>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import type { DrawingStyle } from '@annotorious/core';\r\n  import type { Geometry, ImageAnnotation, RectangleGeometry } from '../../model';\r\n  import { computeStyle } from '../utils/styling';\r\n  \r\n  /** Props **/\r\n  export let annotation: ImageAnnotation;\r\n  export let geom: Geometry;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n\r\n  $: computedStyle = computeStyle(annotation, style);\r\n\r\n  $: ({ x, y, w, h } = geom as RectangleGeometry);\r\n</script>\r\n\r\n<g data-id={annotation.id}>\r\n  <rect\r\n    class=\"a9s-outer\"\r\n    style={computedStyle ? 'display:none;' : undefined}\r\n    x={x} \r\n    y={y} \r\n    width={w} \r\n    height={h} />\r\n\r\n  <rect\r\n    class=\"a9s-inner\"\r\n    style={computedStyle}\r\n    x={x} \r\n    y={y} \r\n    width={w} \r\n    height={h} />\r\n</g>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import type { DrawingStyle } from '@annotorious/core';\r\n  import type { Geometry, ImageAnnotation, FreehandGeometry } from '../../model';\r\n  import { computeStyle } from '../utils/styling';\r\n  import { getSmoothPathData, options } from '../utils/path';\r\n  \r\n  /** Props **/\r\n  export let annotation: ImageAnnotation;\r\n  export let geom: Geometry;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n\r\n  let staticProps = {\r\n    fillOpacity: 1\r\n  }\r\n  $: computedStyle = computeStyle(annotation, style,staticProps);\r\n\r\n  const { points } = geom as FreehandGeometry;\r\n  $: pathData = getSmoothPathData(points,options,true)\r\n  \r\n</script>\r\n\r\n<g data-id={annotation.id}>\r\n  <path \r\n    style={computedStyle}\r\n    d={pathData} />\r\n</g>\r\n","export interface Transform { \r\n\r\n  elementToImage: (offsetX: number, offsetY: number) => [ number, number ] \r\n\r\n}\r\n\r\nexport const IdentityTransform: Transform = {\r\n\r\n  elementToImage:  (offsetX: number, offsetY: number) => ([ offsetX, offsetY ])\r\n\r\n}\r\n\r\nexport const createSVGTransform = (svg: SVGSVGElement): Transform => ({\r\n\r\n  elementToImage: (offsetX: number, offsetY: number) => {\r\n    const bbox = svg.getBoundingClientRect();\r\n\r\n    const pt = svg.createSVGPoint();\r\n    pt.x = offsetX + bbox.x;\r\n    pt.y = offsetY + bbox.y;\r\n  \r\n    const { x, y } = pt.matrixTransform(svg.getScreenCTM().inverse());\r\n    return [x, y];\r\n  }\r\n\r\n});","import { createEventDispatcher } from 'svelte';\r\nimport type { SvelteImageAnnotationStore } from '../state';\r\nimport type { ImageAnnotation } from '../model';\r\nimport { isTouch } from './utils';\r\n\r\nexport interface SVGAnnotationLayerPointerEvent {\r\n    \r\n  originalEvent: PointerEvent;\r\n  \r\n  annotation?: ImageAnnotation;\r\n\r\n}\r\n\r\n// Maximum amount of ms between pointer down and up to make it a click\r\nconst MAX_CLICK_DURATION = 250;\r\n\r\nexport const addEventListeners = (svg: SVGSVGElement, store: SvelteImageAnnotationStore) => {\r\n  const dispatch = createEventDispatcher<{ click: SVGAnnotationLayerPointerEvent}>();\r\n\r\n  let lastPointerDown: number;\r\n\r\n  const onPointerDown = () =>\r\n    lastPointerDown = performance.now();\r\n\r\n  const onPointerUp = (evt: PointerEvent) => {\r\n    const duration = performance.now() - lastPointerDown;\r\n\r\n    if (duration < MAX_CLICK_DURATION) {\r\n      const { x, y } = getSVGPoint(evt, svg);\r\n\r\n      const annotation = store.getAt(x, y);\r\n\r\n      if (annotation)\r\n        dispatch('click', { originalEvent: evt, annotation });\r\n      else\r\n        dispatch('click', { originalEvent: evt });\r\n    }\r\n  }\r\n\r\n  return { onPointerDown, onPointerUp };\r\n}\r\n\r\nconst getSVGPoint = (evt: PointerEvent, svg: SVGSVGElement) => {\r\n  const pt = svg.createSVGPoint();\r\n  const bbox = svg.getBoundingClientRect();\r\n\r\n  const x = evt.clientX - bbox.x;\r\n  const y = evt.clientY - bbox.y;\r\n\r\n  const { left, top } = svg.getBoundingClientRect();\r\n  pt.x = x + left;\r\n  pt.y = y + top;\r\n\r\n  return pt.matrixTransform(svg.getScreenCTM().inverse());\r\n}","<script type=\"ts\" lang=\"ts\">\r\n  import { onMount, type SvelteComponent } from 'svelte';\r\n  import { v4 as uuidv4 } from 'uuid';\r\n  import type { DrawingStyle, StoreChangeEvent, User } from '@annotorious/core';\r\n  import { ShapeType } from '../model';\r\n  import type { ImageAnnotation, Shape} from '../model';\r\n  import { getEditor, EditorMount } from './editors';\r\n  import { Ellipse, Polygon, Rectangle,Freehand} from './shapes';\r\n  import { getTool, listDrawingTools, ToolMount } from './tools';\r\n  import { enableResponsive } from './utils';\r\n  import { createSVGTransform } from './Transform';\r\n  import { addEventListeners } from './SVGAnnotationLayerPointerEvent';\r\n  import type { SvelteImageAnnotatorState } from 'src/state';\r\n  import type { DrawingMode } from 'src/AnnotoriousOpts';\r\n\r\n  /** Props **/\r\n  export let drawingEnabled: boolean;\r\n  export let image: HTMLImageElement | HTMLCanvasElement;\r\n  export let preferredDrawingMode: DrawingMode;\r\n  export let state: SvelteImageAnnotatorState;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n  export let toolName: string = listDrawingTools().length > 0 ? listDrawingTools()[0] : undefined;\r\n  export let user: User;\r\n\r\n  $: ({ tool, opts } = getTool(toolName));\r\n\r\n  $: drawingMode = opts?.drawingMode || preferredDrawingMode;\r\n\r\n  /** Drawing tool layer **/\r\n  let drawingEl: SVGGElement;\r\n\r\n  /** Responsive scaling **/\r\n  let svgEl: SVGSVGElement;\r\n    \r\n  let scale: ReturnType<typeof enableResponsive>;\r\n\r\n  onMount(() => scale = enableResponsive(image, svgEl));\r\n\r\n  $: transform = createSVGTransform(svgEl);\r\n\r\n  /** Selection tracking */\r\n  const { selection, store } = state;\r\n\r\n  $: ({ onPointerDown, onPointerUp } = addEventListeners(svgEl, store));\r\n\r\n  let storeObserver = null;\r\n\r\n  let editableAnnotations: ImageAnnotation[] = null;\r\n\r\n  $: isEditable = (a: ImageAnnotation) => $selection.selected.find(s => s.id === a.id && s.editable);\r\n\r\n  $: trackSelection($selection.selected);\r\n\r\n  const trackSelection = (selected: { id: string, editable?: boolean }[]) => {\r\n    store.unobserve(storeObserver);\r\n\r\n    // Track only editable annotations\r\n    const editableIds = \r\n      selected.filter(({ editable }) => editable).map(({ id }) => id);\r\n\r\n    if (editableIds.length > 0) {\r\n      // Resolve selected IDs from the store\r\n      editableAnnotations = editableIds.map(id => store.getAnnotation(id));\r\n\r\n      // Track updates on the editable annotations\r\n      storeObserver = (event: StoreChangeEvent<ImageAnnotation>) => {\r\n        const { updated } = event.changes;\r\n        editableAnnotations = updated.map(change => change.newValue);\r\n      }   \r\n      \r\n      store.observe(storeObserver, { annotations: editableIds });\r\n    } else {\r\n      editableAnnotations = null;\r\n    }\r\n  }\r\n\r\n  const onSelectionCreated = <T extends Shape>(evt: CustomEvent<T>) => {\r\n    const id = uuidv4();\r\n\r\n    const annotation: ImageAnnotation = {\r\n      id,\r\n      bodies: [],\r\n      target: {\r\n        annotation: id,\r\n        selector: evt.detail,\r\n        creator: user,\r\n        created: new Date()\r\n      }\r\n    };\r\n\r\n    store.addAnnotation(annotation);\r\n\r\n    selection.setSelected(annotation.id);\r\n  }\r\n\r\n  const onChangeSelected = (annotation: ImageAnnotation) => (event: CustomEvent<Shape>) => {  \r\n    const { target } = annotation;\r\n\r\n    // We don't consider a shape edit an 'update' if it happens within 10mins\r\n    const GRACE_PERIOD = 10 * 60 * 1000;\r\n\r\n    const isUpdate = \r\n      target.creator?.id !== user.id ||\r\n      !target.created ||\r\n      new Date().getTime() - target.created.getTime() > GRACE_PERIOD;\r\n\r\n    store.updateTarget({\r\n      ...target,\r\n      selector: event.detail,\r\n      created: isUpdate ? target.created : new Date(),\r\n      updated: isUpdate ? new Date() : null,\r\n      updatedBy: isUpdate ? user : null\r\n    });\r\n  }\r\n</script>\r\n\r\n<svg\r\n  bind:this={svgEl}\r\n  class=\"a9s-annotationlayer\"\r\n  class:drawing={tool}\r\n  on:pointerup={onPointerUp}\r\n  on:pointerdown={onPointerDown}>\r\n  \r\n  <g>\r\n    {#each $store as annotation}\r\n      {#if !isEditable(annotation)}\r\n        {@const selector = annotation.target.selector}\r\n        {#key annotation.id}\r\n          {#if (selector.type === ShapeType.ELLIPSE)}\r\n            <Ellipse annotation={annotation} geom={selector.geometry} style={style} />\r\n          {:else if (selector.type === ShapeType.RECTANGLE)}\r\n            <Rectangle annotation={annotation} geom={selector.geometry} style={style} />\r\n          {:else if (selector.type === ShapeType.POLYGON)}\r\n            <Polygon annotation={annotation} geom={selector.geometry} style={style} />\r\n          {:else if (selector.type === ShapeType.FREEHAND)}\r\n            <Freehand annotation={annotation} geom={selector.geometry} style={style} />\r\n          {/if}\r\n        {/key}\r\n      {/if}\r\n    {/each}\r\n  </g>\r\n\r\n  <g \r\n    bind:this={drawingEl}\r\n    class=\"drawing\" >\r\n    {#if drawingEl}\r\n      {#if editableAnnotations}\r\n        {#each editableAnnotations as editable}\r\n          {#key editable.id}\r\n            <EditorMount\r\n              target={drawingEl}\r\n              editor={getEditor(editable.target.selector)}\r\n              annotation={editable}\r\n              style={style}\r\n              transform={transform}\r\n              viewportScale={$scale}\r\n              on:change={onChangeSelected(editable)} />\r\n          {/key}\r\n        {/each}\r\n      {:else if (tool && drawingEnabled)} \r\n        {#key toolName}\r\n          <ToolMount \r\n            target={drawingEl}\r\n            tool={tool}\r\n            drawingMode={drawingMode}\r\n            transform={transform}\r\n            viewportScale={$scale}\r\n            on:create={onSelectionCreated} />\r\n        {/key}\r\n      {/if}\r\n    {/if}\r\n  </g>\r\n</svg>\r\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","import RBush from 'rbush';\r\nimport { ShapeType,computeArea, intersects } from '../model';\r\nimport type { ImageAnnotationTarget } from '../model';\r\n\r\ninterface IndexedTarget {\r\n\r\n  minX: number;\r\n\r\n  minY: number;\r\n\r\n  maxX: number;\r\n\r\n  maxY: number;\r\n\r\n  target: ImageAnnotationTarget;\r\n\r\n}\r\n\r\nexport const createSpatialTree = () => {\r\n\r\n  const tree = new RBush<IndexedTarget>();\r\n\r\n  const index = new Map<string, IndexedTarget>();\r\n\r\n  const all = () => [...index.values()];\r\n\r\n  const clear = () => {\r\n    tree.clear();\r\n    index.clear();\r\n  }\r\n\r\n  const insert = (target: ImageAnnotationTarget) => {\r\n    const { minX, minY, maxX, maxY } = target.selector.geometry.bounds;\r\n\r\n    const t = { minX, minY, maxX, maxY, target };\r\n\r\n    tree.insert(t);\r\n    index.set(target.annotation, t);\r\n  };\r\n\r\n  const remove = (target: ImageAnnotationTarget) => {\r\n    const item = index.get(target.annotation);\r\n    tree.remove(item);\r\n    index.delete(target.annotation);\r\n  };\r\n\r\n  const update = (previous: ImageAnnotationTarget, updated: ImageAnnotationTarget) => {\r\n    remove(previous);\r\n    insert(updated);\r\n  };\r\n\r\n  const set = (targets: ImageAnnotationTarget[], replace: boolean = true) => {\r\n    if (replace) \r\n      clear();\r\n\r\n    const indexedTargets = targets.map(target => {\r\n      const { minX, minY, maxX, maxY } = target.selector.geometry.bounds;\r\n      return { minX, minY, maxX, maxY, target };\r\n    });\r\n\r\n    indexedTargets.forEach(t => index.set(t.target.annotation, t));\r\n    tree.load(indexedTargets);\r\n  };\r\n\r\n  const getAt = (x: number, y: number): ImageAnnotationTarget | null => {\r\n    const idxHits = tree.search({\r\n      minX: x,\r\n      minY: y,\r\n      maxX: x,\r\n      maxY: y\r\n    }).map(item => item.target);\r\n\r\n    // Exact hit test on shape (not needed for rectangles!)\r\n    const exactHits = idxHits.filter(target => {\r\n      return (target.selector.type === ShapeType.RECTANGLE) ||\r\n        intersects(target.selector, x, y);\r\n    });\r\n\r\n    // Get smallest shape\r\n    if (exactHits.length > 0) {\r\n      exactHits.sort((a, b) => computeArea(a.selector) - computeArea(b.selector));\r\n      return exactHits[0];\r\n    }\r\n  };\r\n\r\n  const getIntersecting = (x: number, y: number, width: number, height: number) =>\r\n    tree.search({\r\n      minX: x,\r\n      minY: y,\r\n      maxX: x + width,\r\n      maxY: y + height\r\n    }).map(item => item.target);\r\n  \r\n  const size = () => tree.all().length;\r\n\r\n  return {\r\n    all,\r\n    clear,\r\n    getAt,\r\n    getIntersecting,\r\n    insert,\r\n    remove,\r\n    set,\r\n    size,\r\n    update\r\n  }\r\n\r\n}\r\n","import type { ImageAnnotation, ImageAnnotationTarget } from '../model';\r\nimport type { AnnotoriousOpts } from '../AnnotoriousOpts';\r\nimport { createSpatialTree } from './spatialTree';\r\nimport { \r\n  createViewportState,\r\n  toSvelteStore,\r\n  type AnnotatorState, \r\n  type HoverState,\r\n  type SelectionState\r\n} from '@annotorious/core';\r\nimport { \r\n  createHoverState, \r\n  createSelectionState, \r\n  createStore\r\n} from '@annotorious/core';\r\nimport type { \r\n  ImageAnnotationStore,\r\n  SvelteImageAnnotationStore, \r\n  SvelteImageAnnotatorState\r\n} from './ImageAnnotationStore';\r\n\r\nexport type ImageAnnotatorState<T extends ImageAnnotationStore = ImageAnnotationStore> = AnnotatorState<ImageAnnotation> & {\r\n\r\n  store: T;\r\n\r\n  selection: SelectionState<ImageAnnotation>;\r\n\r\n  hover: HoverState<ImageAnnotation>;\r\n\r\n}\r\n\r\nexport const createImageAnnotatorState = <E extends unknown>(\r\n  opts: AnnotoriousOpts<ImageAnnotation, E>\r\n): ImageAnnotatorState<ImageAnnotationStore> => {\r\n\r\n  const store = createStore<ImageAnnotation>();\r\n\r\n  const tree = createSpatialTree();\r\n\r\n  const selection = createSelectionState(store, opts.pointerSelectAction);\r\n\r\n  const hover = createHoverState(store);\r\n\r\n  const viewport = createViewportState();\r\n\r\n  store.observe(({ changes }) => {\r\n    tree.set(changes.created.map(a => a.target as ImageAnnotationTarget), false);\r\n    \r\n    changes.deleted.forEach(a => tree.remove(a.target as ImageAnnotationTarget));\r\n    \r\n    changes.updated.forEach(({ oldValue, newValue }) =>\r\n      tree.update(oldValue.target, newValue.target));\r\n  });\r\n\r\n  const getAt = (x: number, y: number): ImageAnnotation | undefined => {\r\n    const target = tree.getAt(x, y);\r\n    return target ? store.getAnnotation(target.annotation) : undefined; \r\n  }\r\n\r\n  const getIntersecting = (x: number, y: number, width: number, height: number) =>\r\n    tree.getIntersecting(x, y, width, height).map(target => store.getAnnotation(target.annotation));\r\n\r\n  return {\r\n    store: {\r\n      ...store,\r\n      getAt,\r\n      getIntersecting\r\n    } as ImageAnnotationStore,\r\n    selection,\r\n    hover,\r\n    viewport\r\n  }\r\n\r\n}\r\n\r\nexport const createSvelteImageAnnotatorState = <E extends unknown>(  \r\n  opts: AnnotoriousOpts<ImageAnnotation, E>\r\n): SvelteImageAnnotatorState => {\r\n\r\n  const state = createImageAnnotatorState(opts);\r\n  \r\n  return {\r\n    ...state,\r\n    store: toSvelteStore(state.store) as SvelteImageAnnotationStore\r\n  }\r\n\r\n}\r\n  ","import type { Theme } from '../../AnnotoriousOpts';\r\n\r\nexport const sampleBrightness = (imageOrCanvas: HTMLElement) => {\r\n\r\n  let canvas: HTMLCanvasElement;\r\n\r\n  let context: CanvasRenderingContext2D;\r\n\r\n  if (imageOrCanvas.nodeName === 'CANVAS') {\r\n    canvas = imageOrCanvas as HTMLCanvasElement;\r\n    context = canvas.getContext('2d', { willReadFrequently: true });\r\n  } else {\r\n    const img = imageOrCanvas as HTMLImageElement;\r\n    // Copy image to in-memory canvas for processing\r\n    canvas = document.createElement('canvas');\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n\r\n    context = canvas.getContext('2d', { willReadFrequently: true });\r\n    context.drawImage(img, 0, 0, img.width, img.height);\r\n  }\r\n\r\n  let totalBrightness = 0;\r\n\r\n  // Sample a grid of points spaced 10% width/height apart (= 9 x 9 samples)\r\n  for (let i = 1; i < 10; i++) {\r\n    for (let j = 1; j < 10; j++) {\r\n      const x = Math.round(j * canvas.width / 10);\r\n      const y = Math.round(i * canvas.height / 10);\r\n\r\n      const pixelData = context.getImageData(x, y, 1, 1).data;\r\n      const brightness = (0.299 * pixelData[0] + 0.587 * pixelData[1] + 0.114 * pixelData[2]) / 255;\r\n      totalBrightness += brightness;\r\n    }\r\n  }\r\n\r\n  return totalBrightness / 81;\r\n}\r\n\r\nexport const detectTheme = (imageOrCanvas: HTMLElement) => {\r\n  const brightness = sampleBrightness(imageOrCanvas);\r\n  const theme = brightness > 0.6 ? 'dark' : 'light'\r\n\r\n  console.log(`[Annotorious] Image brightness: ${brightness.toFixed(1)}. Setting ${theme} theme.`);\r\n\r\n  return theme;\r\n}\r\n\r\nexport const setTheme = (imageOrCanvas: HTMLElement, container: HTMLElement, theme: Theme) =>\r\n  container.setAttribute('data-theme', theme === 'auto' ? detectTheme(imageOrCanvas) : theme);","import type { Annotation, DrawingStyle, FormatAdapter, PointerSelectAction } from '@annotorious/core';\r\nimport type { ImageAnnotation } from './model';\r\n\r\nexport interface AnnotoriousOpts<I extends Annotation = ImageAnnotation, E extends unknown = ImageAnnotation> {\r\n\r\n  adapter?: FormatAdapter<I, E>;\r\n\r\n  autoSave?: boolean;\r\n\r\n  drawingEnabled?: boolean;\r\n\r\n  // 'click': starts on single click, user cannot select unless drawingEnabled = false\r\n  // 'drag': starts drawing on drag, single click always selects\r\n  drawingMode?: DrawingMode;\r\n\r\n  pointerSelectAction?: PointerSelectAction | ((a: I) => PointerSelectAction);\r\n\r\n  style?: DrawingStyle | ((annotation: I) => DrawingStyle);\r\n\r\n  theme?: Theme;\r\n\r\n}\r\n\r\nexport type DrawingMode = 'click' | 'drag';\r\n\r\nexport type Theme = 'dark' | 'light' | 'auto';\r\n\r\nexport const fillDefaults = <I extends ImageAnnotation = ImageAnnotation, E extends unknown = ImageAnnotation> (\r\n  opts: AnnotoriousOpts<I, E>,\r\n  defaults: AnnotoriousOpts<I, E>\r\n): AnnotoriousOpts<I, E> => {\r\n\r\n  return {\r\n    ...opts,\r\n    drawingEnabled: opts.drawingEnabled === undefined ? defaults.drawingEnabled : opts.drawingEnabled,\r\n    drawingMode: opts.drawingMode || defaults.drawingMode,\r\n    pointerSelectAction: opts.pointerSelectAction || defaults.pointerSelectAction,\r\n    theme: opts.theme || defaults.theme\r\n  };\r\n\r\n};\r\n\r\n\r\n\r\n\r\n","import type { Annotation, UndoStack } from '@annotorious/core';\r\n\r\nconst isMac = navigator.userAgent.indexOf('Mac OS X') !== -1;\r\n\r\nexport const initKeyboardCommands = <T extends Annotation>(\r\n  undoStack: UndoStack<T>,\r\n  container?: Element \r\n) => {\r\n\r\n  const el = container || document;\r\n\r\n  const onWinKeyDown = (event: KeyboardEvent) => {\r\n    if (event.key === 'Z' && event.ctrlKey) {\r\n      undoStack.undo();\r\n    } else if (event.key === 'Y' && event.ctrlKey) {\r\n      undoStack.redo()\r\n    }\r\n  };\r\n\r\n  const onMacKeyDown = (event: KeyboardEvent) => {\r\n    if (event.key === 'z' && event.metaKey) {\r\n      if (event.shiftKey) {\r\n        undoStack.redo()\r\n      } else {\r\n        undoStack.undo();\r\n      }\r\n    }\r\n  }\r\n\r\n  const destroy = () => {\r\n    if (isMac) {\r\n      el.removeEventListener('keydown', onMacKeyDown);\r\n    } else {\r\n      el.removeEventListener('keydown', onWinKeyDown);\r\n    }\r\n  }\r\n\r\n  if (isMac)\r\n    el.addEventListener('keydown', onMacKeyDown);\r\n  else\r\n    el.addEventListener('keydown', onWinKeyDown);\r\n\r\n  return { \r\n    destroy\r\n  }\r\n}\r\n","import type { SvelteComponent } from 'svelte';\r\nimport { PointerSelectAction, type Annotator, type DrawingStyle, type Filter, type User } from '@annotorious/core';\r\nimport { createAnonymousGuest, createBaseAnnotator, createLifecyleObserver, createUndoStack } from '@annotorious/core';\r\nimport { registerEditor } from './annotation/editors';\r\nimport { getTool, registerTool, listDrawingTools, type DrawingTool } from './annotation/tools';\r\nimport { SVGAnnotationLayer } from './annotation';\r\nimport type { DrawingToolOpts, SVGAnnotationLayerPointerEvent } from './annotation';\r\nimport type { ImageAnnotation, ShapeType } from './model';\r\nimport { createSvelteImageAnnotatorState } from './state';\r\nimport { setTheme as _setTheme } from './themes';\r\nimport { fillDefaults, type Theme } from './AnnotoriousOpts';\r\nimport type { AnnotoriousOpts } from './AnnotoriousOpts';\r\nimport { initKeyboardCommands } from './keyboardCommands';\r\n\r\nimport './Annotorious.css';\r\nimport './themes/dark/index.css';\r\nimport './themes/light/index.css';\r\n\r\nexport interface ImageAnnotator<E extends unknown = ImageAnnotation> extends Annotator<ImageAnnotation, E> { \r\n\r\n  listDrawingTools(): string[];\r\n\r\n  registerDrawingTool(name: string, tool: typeof SvelteComponent, opts?: DrawingToolOpts): void;\r\n\r\n  registerShapeEditor(shapeType: ShapeType, editor: typeof SvelteComponent): void;\r\n\r\n  setDrawingTool(name: DrawingTool): void; \r\n\r\n  setDrawingEnabled(enabled: boolean): void;\r\n\r\n  setTheme(theme: Theme): void;\r\n\r\n}\r\n\r\nexport const createImageAnnotator = <E extends unknown = ImageAnnotation>(\r\n  image: string | HTMLImageElement | HTMLCanvasElement, \r\n  options: AnnotoriousOpts<ImageAnnotation, E> = {}\r\n): ImageAnnotator<E> => {\r\n\r\n  if (!image)\r\n    throw 'Missing argument: image';\r\n\r\n  const img = (typeof image === 'string' ? \r\n    document.getElementById(image) : image) as HTMLImageElement | HTMLCanvasElement;\r\n\r\n  const opts = fillDefaults<ImageAnnotation, E>(options, {\r\n    drawingEnabled: true,\r\n    drawingMode: 'drag',\r\n    pointerSelectAction: PointerSelectAction.EDIT,\r\n    theme: 'light'\r\n  });\r\n\r\n  const state = createSvelteImageAnnotatorState(opts);\r\n\r\n  const { selection, store } = state;\r\n\r\n  const undoStack = createUndoStack(store);\r\n\r\n  const lifecycle = createLifecyleObserver<ImageAnnotation, E>(\r\n    state, undoStack, opts.adapter, opts.autoSave\r\n  );\r\n\r\n  // We'll wrap the image in a container DIV.\r\n  const container = document.createElement('DIV');\r\n  container.style.position = 'relative';\r\n  container.style.display = 'inline-block';\r\n\r\n  // Wrapper div has unwanted margin at the bottom otherwise!\r\n  img.style.display = 'block';\r\n\r\n  img.parentNode.insertBefore(container, img);\r\n  container.appendChild(img);\r\n\r\n  const keyboardCommands = initKeyboardCommands(undoStack);\r\n\r\n  let currentUser: User = createAnonymousGuest();\r\n\r\n  _setTheme(img, container, opts.theme);\r\n\r\n  const annotationLayer = new SVGAnnotationLayer({\r\n    target: container,\r\n    props: { \r\n      drawingEnabled: opts.drawingEnabled, \r\n      image: img, \r\n      preferredDrawingMode: opts.drawingMode,\r\n      state, \r\n      style: opts.style, \r\n      user: currentUser\r\n    }\r\n  });\r\n\r\n  annotationLayer.$on('click', (evt: CustomEvent<SVGAnnotationLayerPointerEvent>) => {\r\n    const { originalEvent, annotation } = evt.detail;\r\n    if (annotation)\r\n      selection.clickSelect(annotation.id, originalEvent);\r\n    else if (!selection.isEmpty())\r\n      selection.clear();\r\n  });\r\n\r\n  /*************************/\r\n  /*      External API     */\r\n  /******++++++*************/\r\n\r\n  // Most of the external API functions are covered in the base annotator\r\n  const base = createBaseAnnotator<ImageAnnotation, E>(state, undoStack, opts.adapter);\r\n\r\n  const destroy = () => {\r\n    // Destroy Svelte annotation layer\r\n    annotationLayer.$destroy();\r\n\r\n    // Unwrap the image\r\n    container.parentNode.insertBefore(img, container);\r\n    container.parentNode.removeChild(container);\r\n\r\n    // Other cleanup actions\r\n    keyboardCommands.destroy();\r\n    undoStack.destroy();\r\n  }\r\n\r\n  const getUser = () => currentUser;\r\n\r\n  const registerDrawingTool = (name: string, tool: typeof SvelteComponent, opts?: DrawingToolOpts) =>\r\n    registerTool(name, tool, opts);\r\n\r\n  const registerShapeEditor = (shapeType: ShapeType, editor: typeof SvelteComponent) =>\r\n    registerEditor(shapeType, editor);\r\n\r\n  const setDrawingTool = (name: DrawingTool) => {\r\n    // Validate that the tool exists\r\n    const toolSpec = getTool(name)\r\n    if (!toolSpec) throw `No drawing tool named ${name}`\r\n    // @ts-ignore\r\n    annotationLayer.$set({ toolName: name })\r\n  }\r\n\r\n  const setDrawingEnabled = (enabled: boolean) =>\r\n    annotationLayer.$set({ drawingEnabled: enabled });\r\n  \r\n  const setFilter = (filter: Filter) => {\r\n    console.warn('Filter not implemented yet');\r\n  }\r\n\r\n  const setStyle = (style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) | undefined) =>\r\n    annotationLayer.$set({ style });\r\n\r\n  const setTheme = (theme: Theme) => _setTheme(img, container, theme);\r\n  \r\n  const setUser = (user: User) => {\r\n    currentUser = user;\r\n    annotationLayer.$set({ user });\r\n  }\r\n\r\n  return {\r\n    ...base,\r\n    destroy,\r\n    getUser,\r\n    listDrawingTools,\r\n    on: lifecycle.on,\r\n    off: lifecycle.off,\r\n    registerDrawingTool,\r\n    registerShapeEditor,\r\n    setDrawingEnabled,\r\n    setDrawingTool,\r\n    setFilter,\r\n    setStyle,\r\n    setTheme,\r\n    setUser,\r\n    state\r\n  }\r\n\r\n}\r\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","run_all","fns","is_function","thing","safe_not_equal","a","b","is_empty","obj","subscribe","store","callbacks","unsub","component_subscribe","component","callback","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","get_slot_changes","dirty","lets","merged","len","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","get_all_dirty_from_scope","length","append","target","node","insert","anchor","detach","destroy_each","iterations","detaching","svg_element","name","text","data","space","empty","listen","event","handler","options","attr","attribute","value","children","element","toggle_class","toggle","custom_event","type","detail","bubbles","cancelable","e","current_component","set_current_component","get_current_component","onMount","createEventDispatcher","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","flush","add_render_callback","seen_callbacks","flushidx","saved_component","update","$$","flush_render_callbacks","filtered","targets","c","outroing","outros","group_outros","check_outros","transition_in","block","local","transition_out","create_component","mount_component","customElement","fragment","after_update","new_on_destroy","destroy_component","make_dirty","init","instance","create_fragment","not_equal","props","append_styles","parent_component","ready","ret","rest","nodes","SvelteComponent","index","$$props","ShapeType","Utils","registerShapeUtil","util","computeArea","shape","intersects","x","y","boundsFromPoints","points","minX","minY","maxX","maxY","EllipseUtil","cx","cy","rx","ry","rot","cos","sin","dx","dy","tdx","tdy","PolygonUtil","polygon","area","j","inside","xi","yi","xj","yj","RectangleUtil","rect","FreehandUtil","freehand","parseFragmentSelector","fragmentOrSelector","invertY","regex","matches","_","prefix","unit","d","w","h","serializeFragmentSelector","geometry","SVG_NAMESPACE","sanitize","doc","cleanEl","el","scripts","insertSVGNamespace","originalDoc","namespaced","$","u","se","l","he","R","B","ue","ge","de","A","G","ie","L","n","f","K","ee","C","xe","pe","V","ce","r","D","S","q","p","g","T","te","M","H","o","s","W","m","U","X","z","F","O","E","J","I","v","Z","le","fe","re","Y","be","ne","oe","P","Q","N","me","ae","getSqDist","p1","p2","getSqSegDist","t","simplifyRadialDist","sqTolerance","prevPoint","newPoints","point","simplifyDPStep","first","last","simplified","maxSqDist","sqDist","simplifyDouglasPeucker","simplify","tolerance","highestQuality","getSvgPathFromStroke","stroke","acc","x0","y0","arr","x1","y1","getSmoothPathData","simplifyPath","getStroke","parseSVGXML","isPrefixDeclared","isDefaultNamespaceSVG","parseSVGFreehand","str","pathRegex","match","parseSVGPolygon","parseSVGEllipse","bounds","parseSVGSelector","valueOrSelector","serializeSVGSelector","geom","xy","getRandomValues","rnds8","rng","byteToHex","unsafeStringify","offset","randomUUID","native","v4","buf","rnds","ve","ye","Ue","Le","Se","Te","De","Re","Be","W3CImageFormat","source","serialized","parseW3CImageAnnotation","annotation","serializeW3CImageAnnotation","annotationId","uuidv4","creator","created","updatedBy","updated","body","bodies","parseW3CBodies","w3cSelector","selector","parseW3CUser","w3CSelector","serializeW3CBodies","rect_x_value","rect_y_value","Handle","each_value","polygon0","polygon0_points_value","func","polygon1","polygon1_points_value","func_1","grab","computedStyle","transform","viewportScale","editor","handle","delta","idx","$$invalidate","handleSize","rect0","rect0_x_value","rect0_y_value","rect0_width_value","rect0_height_value","rect1","rect1_x_value","rect1_y_value","rect1_width_value","rect1_height_value","rect2","rect2_x_value","rect2_y_value","rect2_width_value","rect3","rect3_x_value","rect3_y_value","rect3_height_value","rect4","rect4_x_value","rect4_y_value","rect4_width_value","rect5","rect5_x_value","rect5_y_value","rect5_height_value","rect6","rect6_x_value","rect6_y_value","rect7","rect7_y_value","rect9","rect9_x_value","rect8","rectangle","initialBounds","ellipse0","ellipse0_cx_value","ellipse0_cy_value","ellipse0_rx_value","ellipse0_ry_value","ellipse1","ellipse1_cx_value","ellipse1_cy_value","ellipse1_rx_value","ellipse1_ry_value","ellipse","computeStyle","style","staticProps","computed","fill","fillOpacity","css","staticOpacity","path","pathData","REGISTERED","RectangleEditor","PolygonEditor","EllipseEditor","FreehandEditor","getEditor","registerEditor","shapeType","dispatch","grabbedHandle","origin","initialShape","onGrab","evt","onPointerMove","onRelease","editorComponent","drawingMode","tool","toolComponent","svg","cleanup","addEventListener","capture","create_if_block","lastPointerDown","onPointerDown","onPointerUp","timeDifference","stopDrawing","distance","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","setSize","image","naturalWidth","naturalHeight","width","height","img","enableResponsive","resizeObserver","svgBounds","scale","isTouch","child_ctx","create_if_block_1","get_if_ctx","CLOSE_DISTANCE","cursor","isClosable","timeStamp","offsetX","offsetY","onDblClick","container","isShiftPressed","isCtrlPressed","lastMoveEvent","updateShape","maybeEvent","mw","mh","onKeyDown","onKeyUp","$$value","isDrawing","RubberbandRectangle","RubberbandPolygon","RubberbandEllipse","RubberbandFreehand","listDrawingTools","getTool","registerTool","opts","g_data_id_value","IdentityTransform","createSVGTransform","bbox","pt","MAX_CLICK_DURATION","addEventListeners","getSVGPoint","left","top","previous_key","freehand_changes","polygon_changes","rectangle_changes","ellipse_changes","show_if","each_blocks","editormount_changes","g0","g1","drawingEnabled","preferredDrawingMode","state","toolName","user","drawingEl","svgEl","selection","storeObserver","editableAnnotations","trackSelection","selected","editableIds","editable","id","change","onSelectionCreated","onChangeSelected","_a","GRACE_PERIOD","isUpdate","isEditable","$selection","quickselect","right","compare","quickselectStep","defaultCompare","sd","newLeft","newRight","swap","tmp","RBush","maxEntries","result","toBBox","nodesToSearch","child","childBBox","contains","tmpNode","item","createNode","equalsFn","indexes","parent","goingUp","findItem","items","calcBBox","N2","N1","multiSelect","right2","right3","level","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","extend","splitIndex","newNode","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","destNode","stack","mid","createSpatialTree","tree","all","clear","remove","exactHits","replace","indexedTargets","previous","createImageAnnotatorState","createStore","createSelectionState","hover","createHoverState","viewport","createViewportState","changes","oldValue","newValue","createSvelteImageAnnotatorState","toSvelteStore","sampleBrightness","imageOrCanvas","canvas","context","totalBrightness","pixelData","brightness","detectTheme","theme","setTheme","fillDefaults","defaults","isMac","initKeyboardCommands","undoStack","onWinKeyDown","onMacKeyDown","destroy","createImageAnnotator","PointerSelectAction","createUndoStack","lifecycle","createLifecyleObserver","keyboardCommands","currentUser","createAnonymousGuest","_setTheme","annotationLayer","SVGAnnotationLayer","originalEvent","base","createBaseAnnotator","getUser","registerDrawingTool","registerShapeEditor","setDrawingTool","setDrawingEnabled","enabled","setFilter","filter","setStyle","setUser"],"mappings":"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","x_google_ignoreList":[0,9,13,14,15,16,17,31,45,46]}