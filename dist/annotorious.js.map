{"version":3,"file":"annotorious.js","sources":["../node_modules/svelte/internal/index.mjs","../src/model/core/Shape.ts","../src/model/core/shapeUtils.ts","../src/model/core/ellipse/ellipseUtils.ts","../src/model/core/polygon/polygonUtils.ts","../src/model/core/rectangle/rectangleUtils.ts","../src/model/core/freehand/freehandUtils.ts","../src/model/core/line/lineUtils.ts","../src/model/w3c/fragment/FragmentSelector.ts","../src/model/w3c/svg/SVG.ts","../src/annotation/utils/simplify.js","../src/annotation/utils/path.ts","../src/model/w3c/svg/SVGSelector.ts","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/@annotorious/core/dist/annotorious-core.es.js","../src/model/w3c/W3CImageFormatAdapter.ts","../src/annotation/editors/polygon/PolygonEditor.svelte","../src/annotation/editors/rectangle/RectangleEditor.svelte","../src/annotation/editors/ellipse/EllipseEditor.svelte","../src/annotation/utils/styling.ts","../src/annotation/editors/freehand/FreehandEditor.svelte","../src/annotation/editors/line/LineEditor.svelte","../src/annotation/editors/editorsRegistry.ts","../src/annotation/editors/Handle.ts","../src/annotation/editors/Editor.svelte","../src/annotation/editors/EditorMount.svelte","../src/annotation/tools/ToolMount.svelte","../src/annotation/tools/rectangle/RubberbandRectangle.svelte","../src/annotation/utils/math.ts","../node_modules/svelte/store/index.mjs","../src/annotation/utils/responsive.ts","../src/annotation/utils/touch.ts","../src/annotation/tools/polygon/RubberbandPolygon.svelte","../src/annotation/tools/ellipse/RubberbandEllipse.svelte","../src/annotation/tools/freehand/RubberbandFreehand.svelte","../src/annotation/tools/line/RubberbandLine.svelte","../src/annotation/tools/drawingToolsRegistry.ts","../src/annotation/shapes/Ellipse.svelte","../src/annotation/shapes/Polygon.svelte","../src/annotation/shapes/Rectangle.svelte","../src/annotation/shapes/Freehand.svelte","../src/annotation/shapes/Line.svelte","../src/annotation/Transform.ts","../src/annotation/SVGAnnotationLayerPointerEvent.ts","../src/annotation/SVGAnnotationLayer.svelte","../node_modules/quickselect/index.js","../node_modules/rbush/index.js","../src/state/spatialTree.ts","../src/state/ImageAnnotatorState.ts","../src/themes/smart/setTheme.ts","../src/AnnotoriousOpts.ts","../src/keyboardCommands.ts","../src/Annotorious.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import type { AbstractSelector } from '@annotorious/core';\r\n\r\nexport interface Shape extends AbstractSelector {\r\n\r\n  type: ShapeType;\r\n\r\n  geometry: Geometry;\r\n\r\n}\r\n\r\nexport enum ShapeType {\r\n\r\n  ELLIPSE = 'ELLIPSE',\r\n\r\n  POLYGON = 'POLYGON',\r\n\r\n  RECTANGLE = 'RECTANGLE',\r\n\r\n  FREEHAND = 'FREEHAND',\r\n\r\n  LINE = 'LINE'\r\n\r\n}\r\n\r\nexport interface Geometry {\r\n\r\n  bounds: Bounds;\r\n\r\n}\r\n\r\nexport interface Bounds {\r\n\r\n  minX: number;\r\n\r\n  minY: number;\r\n\r\n  maxX: number;\r\n\r\n  maxY: number;\r\n\r\n}\r\n","import type { Bounds, Shape, ShapeType } from './Shape';\r\n\r\nexport interface ShapeUtil<T extends Shape> {\r\n\r\n  area: (shape: T) => number;\r\n\r\n  intersects: (shape: T, x: number, y: number) => boolean;\r\n\r\n}\r\n\r\nconst Utils: { [key: string]: ShapeUtil<any> } = {};\r\n\r\n/**\r\n * Registers a new ShapeUtil for a given shape type.\r\n * @param type the shape type\r\n * @param util the ShapeUtil implementation for this shape type\r\n */\r\nexport const registerShapeUtil = (type: ShapeType | string, util: ShapeUtil<any>) =>\r\n  (Utils[type] = util);\r\n\r\n/**\r\n * Computes the area of the given shape. Delegates to the corresponding ShapeUtil.\r\n * @param shape the shape\r\n */\r\nexport const computeArea = (shape: Shape) => Utils[shape.type].area(shape);\r\n\r\n/**\r\n * Tests if the given shape intersects the given point. Delegates to\r\n * the corresponding ShapeUtil.\r\n * @param shape the shape\r\n * @param x point x coord\r\n * @param y point y coord\r\n * @returns true if shape and point intersect\r\n */\r\nexport const intersects = (shape: Shape, x: number, y: number): boolean =>\r\n  Utils[shape.type].intersects(shape, x, y);\r\n\r\n/**\r\n * Computes Bounds from a given list of points.\r\n * @param points the points\r\n * @returns the Bounds\r\n */\r\nexport const boundsFromPoints = (points: Array<[number, number]>): Bounds => {\r\n  let minX = Infinity;\r\n  let minY = Infinity;\r\n  let maxX = -Infinity;\r\n  let maxY = -Infinity;\r\n\r\n  points.forEach(([x, y]) => {\r\n    minX = Math.min(minX, x);\r\n    minY = Math.min(minY, y);\r\n    maxX = Math.max(maxX, x);\r\n    maxY = Math.max(maxY, y);\r\n  });\r\n\r\n  return { minX, minY, maxX, maxY };\r\n};","import { ShapeType } from '../Shape';\r\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils';\r\nimport type { Ellipse } from './Ellipse';\r\n\r\nconst EllipseUtil: ShapeUtil<Ellipse> = {\r\n\r\n  area: (e: Ellipse): number => Math.PI * e.geometry.rx * e.geometry.ry,\r\n\r\n  intersects: (e: Ellipse, x: number, y: number): boolean => {\r\n    const { cx, cy, rx, ry } = e.geometry;\r\n\r\n    // For future use\r\n    const rot = 0;\r\n\r\n    const cos = Math.cos(rot);\r\n    const sin = Math.sin(rot);\r\n  \r\n    const dx  = x - cx;\r\n    const dy  = y - cy;\r\n  \r\n    const tdx = cos * dx + sin * dy;\r\n    const tdy = sin * dx - cos * dy;\r\n  \r\n    return (tdx * tdx) / (rx * rx) + (tdy * tdy) / (ry * ry) <= 1;\r\n  }\r\n};\r\n\r\nregisterShapeUtil(ShapeType.ELLIPSE, EllipseUtil);","import { ShapeType } from '../Shape';\r\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils';\r\nimport type { Polygon } from './Polygon';\r\n\r\nconst PolygonUtil: ShapeUtil<Polygon> = {\r\n\r\n  area: (polygon: Polygon): number => {\r\n    const { points } = polygon.geometry;\r\n\r\n    let area = 0;\r\n    let j = points.length - 1;\r\n\r\n    for (let i = 0; i < points.length; i++) {\r\n      area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1]);\r\n      j = i;\r\n    }\r\n\r\n    return Math.abs(0.5 * area);\r\n  },\r\n\r\n  intersects: (polygon: Polygon, x: number, y: number): boolean => {\r\n    // Based on https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html/pnpoly.html\r\n    const { points } = polygon.geometry;\r\n\r\n    let inside = false;\r\n\r\n    for (let i = 0, j = points.length - 1; i < points.length; j = i++) {\r\n      const xi = points[i][0],\r\n        yi = points[i][1];\r\n      const xj = points[j][0],\r\n        yj = points[j][1];\r\n\r\n      const intersect = yi > y != yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\r\n\r\n      if (intersect) inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n  }\r\n  \r\n};\r\n\r\nregisterShapeUtil(ShapeType.POLYGON, PolygonUtil);","import { ShapeType } from '../Shape';\r\nimport type { Rectangle } from './Rectangle';\r\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils';\r\n\r\nexport const RectangleUtil: ShapeUtil<Rectangle> = {\r\n\r\n  area: (rect: Rectangle): number => rect.geometry.w * rect.geometry.h,\r\n\r\n  intersects: (rect: Rectangle, x: number, y: number): boolean =>\r\n    x >= rect.geometry.x &&\r\n    x <= rect.geometry.x + rect.geometry.w &&\r\n    y >= rect.geometry.y &&\r\n    y <= rect.geometry.y + rect.geometry.h\r\n    \r\n};\r\n\r\nregisterShapeUtil(ShapeType.RECTANGLE, RectangleUtil);","import { ShapeType } from '../Shape'\r\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils'\r\nimport type { Freehand } from './Freehand'\r\n\r\nconst FreehandUtil: ShapeUtil<Freehand> = {\r\n  area: (freehand: Freehand): number => {\r\n    const { points } = freehand.geometry\r\n\r\n    let area = 0\r\n    let j = points.length - 1\r\n\r\n    for (let i = 0; i < points.length; i++) {\r\n      area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1])\r\n      j = i\r\n    }\r\n\r\n    return Math.abs(0.5 * area)\r\n  },\r\n\r\n  intersects: (freehand: Freehand, x: number, y: number): boolean => {\r\n    // Based on https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html/pnpoly.html\r\n    const { points } = freehand.geometry\r\n\r\n    let inside = false\r\n\r\n    for (let i = 0, j = points.length - 1; i < points.length; j = i++) {\r\n      const xi = points[i][0],\r\n        yi = points[i][1]\r\n      const xj = points[j][0],\r\n        yj = points[j][1]\r\n\r\n      const intersect =\r\n        yi > y != yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi\r\n\r\n      if (intersect) inside = !inside\r\n    }\r\n\r\n    return inside\r\n  },\r\n}\r\n\r\nregisterShapeUtil(ShapeType.FREEHAND, FreehandUtil)\r\n","import { ShapeType } from '../Shape'\r\nimport type { Line } from './Line'\r\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils'\r\n\r\nexport const LineUtil: ShapeUtil<Line> = {\r\n  area: (line: Line): number => 0,\r\n\r\n  intersects: (line: Line, x: number, y: number): boolean => {\r\n    const x1 = line.geometry.x1\r\n    const x2 = line.geometry.x2\r\n    const y1 = line.geometry.y1\r\n    const y2 = line.geometry.y2\r\n    var distanceToStart = Math.sqrt(Math.pow(x - x1, 2) + Math.pow(y - y1, 2))\r\n    var distanceToEnd = Math.sqrt(Math.pow(x - x2, 2) + Math.pow(y - y2, 2))\r\n\r\n    // Calculate the length of the line segment\r\n    var lineLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2))\r\n\r\n    // Calculate the sum of the distances from the point to each endpoint\r\n    var totalDistance = distanceToStart + distanceToEnd\r\n\r\n    // Check if the point is approximately on the line segment\r\n    return Math.abs(totalDistance - lineLength) <= 0.1\r\n  }\r\n}\r\n\r\nregisterShapeUtil(ShapeType.LINE, LineUtil)\r\n","import type { W3CSelector } from '@annotorious/core';\r\nimport { ShapeType } from '../../core';\r\nimport type { Rectangle, RectangleGeometry } from '../../core';\r\n\r\nexport interface FragmentSelector extends W3CSelector {\r\n\r\n  type: 'FragmentSelector';\r\n\r\n  conformsTo: 'http://www.w3.org/TR/media-frags/',\r\n\r\n  value: string;\r\n  \r\n}\r\n\r\nexport const parseFragmentSelector = (\r\n  fragmentOrSelector: FragmentSelector | string,\r\n  invertY = false\r\n): Rectangle => {\r\n\r\n  const fragment =\r\n    typeof fragmentOrSelector === 'string' ? fragmentOrSelector : fragmentOrSelector.value;\r\n\r\n  const regex = /^(xywh)=(pixel|percent)?:?(.+?),(.+?),(.+?),(.+)*/g;\r\n\r\n  const matches = [...fragment.matchAll(regex)][0];\r\n  const [_, prefix, unit, a, b, c, d] = matches;\r\n\r\n  if (prefix !== 'xywh') throw new Error('Unsupported MediaFragment: ' + fragment);\r\n\r\n  if (unit && unit !== 'pixel') throw new Error(`Unsupported MediaFragment unit: ${unit}`);\r\n\r\n  const [x, y, w, h] = [a, b, c, d].map(parseFloat);\r\n\r\n  return {\r\n    type: ShapeType.RECTANGLE,\r\n    geometry: {\r\n      x,\r\n      y,\r\n      w,\r\n      h,\r\n      bounds: {\r\n        minX: x,\r\n        minY: invertY ? y - h : y,\r\n        maxX: x + w,\r\n        maxY: invertY ? y : y + h\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const serializeFragmentSelector = (geometry: RectangleGeometry): FragmentSelector => {\r\n  const { x, y, w, h } = geometry;\r\n  \r\n  return {\r\n    type: 'FragmentSelector',\r\n    conformsTo: 'http://www.w3.org/TR/media-frags/',\r\n    value: `xywh=pixel:${x},${y},${w},${h}`\r\n  };\r\n};","export const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\r\n\r\nexport const sanitize = (doc: Element | Document) => {\r\n  // Cf. https://github.com/mattkrick/sanitize-svg#readme  \r\n  // for the basic approach\r\n  const cleanEl = (el: Element) => {\r\n    Array.from(el.attributes).forEach(attr => {\r\n      if (attr.name.startsWith('on'))\r\n        el.removeAttribute(attr.name)\r\n    });\r\n  }\r\n\r\n  // Remove script tags\r\n  const scripts = doc.getElementsByTagName('script');\r\n\r\n  Array.from(scripts).reverse().forEach(el =>\r\n    el.parentNode.removeChild(el));\r\n\r\n  Array.from(doc.querySelectorAll('*')).forEach(cleanEl);\r\n\r\n  return doc;\r\n}\r\n\r\n/** Helper that forces an un-namespaced node to SVG **/\r\nexport const insertSVGNamespace = (originalDoc: Document): Element => {\r\n  // Serialize and parse for the namespace to take effect on every node\r\n  const serializer = new XMLSerializer();\r\n  const str = serializer.serializeToString(originalDoc.documentElement);\r\n\r\n  // Doesn't seem that there's a clean cross-browser way for this...\r\n  const namespaced = str.replace('<svg>', `<svg xmlns=\"${SVG_NAMESPACE}\">`);\r\n\r\n  const parser = new DOMParser();\r\n  const namespacedDoc = parser.parseFromString(namespaced, \"image/svg+xml\");\r\n  return namespacedDoc.documentElement;\r\n}\r\n","/*\r\n (c) 2017, Vladimir Agafonkin\r\n Simplify.js, a high-performance JS polyline simplification library\r\n mourner.github.io/simplify-js\r\n*/\r\n  // to suit your point format, run search/replace for '.x' and '.y';\r\n  // for 3D version, see 3d branch (configurability would draw significant performance overhead)\r\n\r\n  // square distance between 2 points\r\n  function getSqDist(p1, p2) {\r\n    var dx = p1[0] - p2[0],\r\n      dy = p1[1] - p2[1];\r\n\r\n    return dx * dx + dy * dy;\r\n  }\r\n\r\n  // square distance from a point to a segment\r\n  function getSqSegDist(p, p1, p2) {\r\n    var x = p1[0],\r\n      y = p1[1],\r\n      dx = p2[0] - x,\r\n      dy = p2[1] - y;\r\n\r\n    if (dx !== 0 || dy !== 0) {\r\n      var t = ((p[0] - x) * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\r\n\r\n      if (t > 1) {\r\n        x = p2[0];\r\n        y = p2[1];\r\n      } else if (t > 0) {\r\n        x += dx * t;\r\n        y += dy * t;\r\n      }\r\n    }\r\n\r\n    dx = p[0] - x;\r\n    dy = p[1] - y;\r\n\r\n    return dx * dx + dy * dy;\r\n  }\r\n  // rest of the code doesn't care about point format\r\n\r\n  // basic distance-based simplification\r\n  function simplifyRadialDist(points, sqTolerance) {\r\n    var prevPoint = points[0],\r\n      newPoints = [prevPoint],\r\n      point;\r\n\r\n    for (var i = 1, len = points.length; i < len; i++) {\r\n      point = points[i];\r\n\r\n      if (getSqDist(point, prevPoint) > sqTolerance) {\r\n        newPoints.push(point);\r\n        prevPoint = point;\r\n      }\r\n    }\r\n\r\n    if (prevPoint !== point) newPoints.push(point);\r\n\r\n    return newPoints;\r\n  }\r\n\r\n  function simplifyDPStep(points, first, last, sqTolerance, simplified) {\r\n    var maxSqDist = sqTolerance,\r\n      index;\r\n\r\n    for (var i = first + 1; i < last; i++) {\r\n      var sqDist = getSqSegDist(points[i], points[first], points[last]);\r\n\r\n      if (sqDist > maxSqDist) {\r\n        index = i;\r\n        maxSqDist = sqDist;\r\n      }\r\n    }\r\n\r\n    if (maxSqDist > sqTolerance) {\r\n      if (index - first > 1)\r\n        simplifyDPStep(points, first, index, sqTolerance, simplified);\r\n      simplified.push(points[index]);\r\n      if (last - index > 1)\r\n        simplifyDPStep(points, index, last, sqTolerance, simplified);\r\n    }\r\n  }\r\n\r\n  // simplification using Ramer-Douglas-Peucker algorithm\r\n  function simplifyDouglasPeucker(points, sqTolerance) {\r\n    var last = points.length - 1;\r\n\r\n    var simplified = [points[0]];\r\n    simplifyDPStep(points, 0, last, sqTolerance, simplified);\r\n    simplified.push(points[last]);\r\n\r\n    return simplified;\r\n  }\r\n\r\n  // both algorithms combined for awesome performance\r\n  function simplify(points, tolerance, highestQuality) {\r\n    if (points.length <= 2) return points;\r\n\r\n    var sqTolerance = tolerance !== undefined ? tolerance * tolerance : 1;\r\n\r\n    points = highestQuality ? points : simplifyRadialDist(points, sqTolerance);\r\n    points = simplifyDouglasPeucker(points, sqTolerance);\r\n\r\n    return points;\r\n  }\r\n  \r\nexport default simplify\r\n","import { getStroke } from \"perfect-freehand\";\r\nimport simplify from './simplify'\r\n\r\ntype GenericObject = Record<string,unknown>\r\n\r\nexport const options = {\r\n  size: 4,\r\n  thinning: 0.3,\r\n  smoothing: 0.5,\r\n  streamline: 0.5,\r\n  easing: (t) => t,\r\n  start: {\r\n    taper: 0,\r\n    easing: (t) => t,\r\n    cap: true,\r\n  },\r\n  end: {\r\n    taper: 0,\r\n    easing: (t) => t,\r\n    cap: true,\r\n  },\r\n}\r\n\r\nconst average = (a, b) => (a + b) / 2\r\n\r\nfunction getControlPoints(x0, y0, x1, y1, x2, y2, t) {\r\n  // t is the tension and typically between 0 (loose) and 1 (tight)\r\n  const d01 = Math.sqrt((x1 - x0) ** 2 + (y1 - y0) ** 2)\r\n  const d12 = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)\r\n\r\n  const fa = (t * d01) / (d01 + d12) // scaling factor for control point 1\r\n  const fb = (t * d12) / (d01 + d12) // scaling factor for control point 2\r\n\r\n  const p1x = x1 + fa * (x0 - x2) // x2 control point for x1\r\n  const p1y = y1 + fa * (y0 - y2) // y2 control point for y1\r\n\r\n  const p2x = x1 - fb * (x0 - x2) // x2 control point for x2\r\n  const p2y = y1 - fb * (y0 - y2) // y2 control point for y2\r\n\r\n  return [p1x, p1y, p2x, p2y]\r\n}\r\n\r\n// export function getSvgPathFromStroke(points, closed = true) {\r\n//   const len = points.length\r\n\r\n//   if (len < 4) {\r\n//     return ``\r\n//   }\r\n\r\n//   let a = points[0]\r\n//   let b = points[1]\r\n//   const c = points[2]\r\n\r\n//   let result = `M${a[0].toFixed(2)},${a[1].toFixed(2)} Q${b[0].toFixed(\r\n//     2\r\n//   )},${b[1].toFixed(2)} ${average(b[0], c[0]).toFixed(2)},${average(\r\n//     b[1],\r\n//     c[1]\r\n//   ).toFixed(2)} T`\r\n\r\n//   for (let i = 2, max = len - 1; i < max; i++) {\r\n//     a = points[i]\r\n//     b = points[i + 1]\r\n//     result += `${average(a[0], b[0]).toFixed(2)},${average(a[1], b[1]).toFixed(\r\n//       2\r\n//     )} `\r\n//   }\r\n\r\n//   if (closed) {\r\n//     result += 'Z'\r\n//   }\r\n\r\n//   return result\r\n// }\r\n\r\n\r\nexport function getSvgPathFromStroke(stroke) {\r\n  // let stroke = simplify(strokePrev);\r\n  // console.log(\"Stroke\", stroke);\r\n  if (!stroke.length) return ''\r\n\r\n  const d = stroke.reduce(\r\n    (acc, [x0, y0], i, arr) => {\r\n      const [x1, y1] = arr[(i + 1) % arr.length]\r\n      acc.push(x0, y0, (x0 + x1) / 2, (y0 + y1) / 2)\r\n      return acc\r\n    },\r\n    ['M', ...stroke[0], 'Q']\r\n  )\r\n\r\n  d.push('Z')\r\n  return d.join(' ')\r\n}\r\n\r\nexport function getSmoothPathData(\r\n  points: Array<Array<number>>,\r\n  options: GenericObject,\r\n  simplifyPath: Boolean = false\r\n) {\r\n  // const stroke = getStroke(points, options)\r\n  const pathData = getSvgPathFromStroke(\r\n    simplifyPath ? simplify(points,1) : points\r\n  )\r\n  return pathData\r\n}\r\n","import type { W3CSelector } from '@annotorious/core';\r\nimport { boundsFromPoints, ShapeType } from '../../core';\r\nimport type { Ellipse, EllipseGeometry, Polygon, PolygonGeometry, Freehand, FreehandGeometry,Line, LineGeometry, Shape } from '../../core';\r\nimport { SVG_NAMESPACE, insertSVGNamespace, sanitize } from './SVG';\r\nimport { getSmoothPathData, options } from '../../../annotation/utils/path';\r\n\r\nexport interface SVGSelector extends W3CSelector {\r\n\r\n  type: 'SvgSelector';\r\n\r\n  value: string;\r\n  \r\n}\r\n\r\nconst parseSVGXML = (value: string): Element => {\r\n  const parser = new DOMParser();\r\n\r\n  const doc = parser.parseFromString(value, \"image/svg+xml\");\r\n\r\n  // SVG needs a namespace declaration - check if it's set or insert if not\r\n  const isPrefixDeclared = doc.lookupPrefix(SVG_NAMESPACE); // SVG declared via prefix\r\n  const isDefaultNamespaceSVG = doc.lookupNamespaceURI(null); // SVG declared as default namespace\r\n\r\n  if (isPrefixDeclared || isDefaultNamespaceSVG) {\r\n    return sanitize(doc).firstChild as Element;\r\n  } else {\r\n    return sanitize(insertSVGNamespace(doc)).firstChild as Element;\r\n  }\r\n}\r\n\r\nconst parseSVGFreehand = (value: string): Freehand => {\r\n  const [a, b, str] = value.match(/(<path d=[\"|'])([^(\"|')]*)/) || []\r\n\r\n  if (!str) return\r\n  const pathRegex = /([MQZT])([^MQZT]*)/g\r\n  const matches = Array.from(str.matchAll(pathRegex))\r\n  const points = matches.map((match) => {\r\n    const command = match[1]\r\n    const pointData = match[2].trim().split(/\\s+/).map(parseFloat)\r\n    return pointData\r\n  })\r\n  \r\n  return {\r\n    type: ShapeType.FREEHAND,\r\n    geometry: {\r\n      points,\r\n      bounds: boundsFromPoints(points as [number, number][]),\r\n    },\r\n  }\r\n}\r\n\r\nconst parseSVGPolygon = (value: string): Polygon => {\r\n  const [a, b, str] = value.match(/(<polygon points=[\"|'])([^(\"|')]*)/) || [];\r\n\r\n  if (!str) return;\r\n\r\n  const points = str.split(' ').map((p) => p.split(',').map(parseFloat));\r\n\r\n  return {\r\n    type: ShapeType.POLYGON,\r\n    geometry: {\r\n      points,\r\n      bounds: boundsFromPoints(points as [number, number][])\r\n    }\r\n  };\r\n}\r\n\r\nconst parseSVGEllipse = (value: string): Ellipse => {\r\n  const doc = parseSVGXML(value);\r\n\r\n  const cx = parseFloat(doc.getAttribute('cx'));\r\n  const cy = parseFloat(doc.getAttribute('cy'));\r\n  const rx = parseFloat(doc.getAttribute('rx'));\r\n  const ry = parseFloat(doc.getAttribute('ry'));\r\n\r\n  const bounds = {\r\n    minX: cx - rx,\r\n    minY: cy - ry,\r\n    maxX: cx + rx,\r\n    maxY: cy + ry\r\n  };\r\n\r\n  return {\r\n    type: ShapeType.ELLIPSE,\r\n    geometry: {\r\n      cx,\r\n      cy,\r\n      rx,\r\n      ry,\r\n      bounds\r\n    }\r\n  };\r\n}\r\n\r\nconst parseSVGLine = (value: string): Line => {\r\n  const doc = parseSVGXML(value)\r\n\r\n  const x1 = parseFloat(doc.getAttribute('x1'))\r\n  const x2 = parseFloat(doc.getAttribute('x2'))\r\n  const y1 = parseFloat(doc.getAttribute('y1'))\r\n  const y2 = parseFloat(doc.getAttribute('y2'))\r\n\r\n  const bounds = {\r\n    minX: Math.min(x1, x2),\r\n    minY: Math.min(y1, y2),\r\n    maxX: Math.max(x1, x2),\r\n    maxY: Math.max(y1, y2),\r\n  }\r\n\r\n  return {\r\n    type: ShapeType.LINE,\r\n    geometry: {\r\n      x1,\r\n      x2,\r\n      y1,\r\n      y2,\r\n      bounds,\r\n    },\r\n  }\r\n}\r\n\r\n\r\nexport const parseSVGSelector = <T extends Shape>(valueOrSelector: SVGSelector | string): T => {\r\n  const value = typeof valueOrSelector === 'string' ? valueOrSelector : valueOrSelector.value;\r\n\r\n  if (value.includes('<polygon points='))\r\n    return parseSVGPolygon(value) as unknown as T\r\n  else if (value.includes('<path d='))\r\n    return parseSVGFreehand(value) as unknown as T\r\n  else if (value.includes('<ellipse '))\r\n    return parseSVGEllipse(value) as unknown as T\r\n  else if (value.includes('<line '))\r\n    return parseSVGLine(value) as unknown as T\r\n}\r\n\r\nexport const serializeSVGSelector = (shape: Shape): SVGSelector => {\r\n  let value: string;\r\n\r\n  if (shape.type === ShapeType.POLYGON) {\r\n    const geom = shape.geometry as PolygonGeometry\r\n    const { points } = geom\r\n    value = `<svg><polygon points=\"${points\r\n      .map((xy) => xy.join(','))\r\n      .join(' ')}\" /></svg>`\r\n  } else if (shape.type === ShapeType.FREEHAND) {\r\n    const geom = shape.geometry as FreehandGeometry\r\n    const pathData = getSmoothPathData(geom.points, options)\r\n    value = `<svg><path d=\"${pathData}\"/></svg>`\r\n  } else if (shape.type === ShapeType.ELLIPSE) {\r\n    const geom = shape.geometry as EllipseGeometry\r\n    value = `<svg><ellipse cx=\"${geom.cx}\" cy=\"${geom.cy}\" rx=\"${geom.rx}\" ry=\"${geom.ry}\" /></svg>`\r\n  } else if (shape.type === ShapeType.LINE) {\r\n    const geom = shape.geometry as LineGeometry\r\n    value = `<svg><line x1=\"${geom.x1}\" x2=\"${geom.x2}\" y1=\"${geom.y1}\" y2=\"${geom.y2}\" /></svg>`\r\n  }\r\n\r\n  if (value) {\r\n    return { type: 'SvgSelector', value };\r\n  } else {\r\n    throw `Unsupported shape type: ${shape.type}`;\r\n  }\r\n}\r\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","var Y = Object.prototype.hasOwnProperty;\nfunction B(e, n) {\n  var t, o;\n  if (e === n)\n    return !0;\n  if (e && n && (t = e.constructor) === n.constructor) {\n    if (t === Date)\n      return e.getTime() === n.getTime();\n    if (t === RegExp)\n      return e.toString() === n.toString();\n    if (t === Array) {\n      if ((o = e.length) === n.length)\n        for (; o-- && B(e[o], n[o]); )\n          ;\n      return o === -1;\n    }\n    if (!t || typeof e == \"object\") {\n      o = 0;\n      for (t in e)\n        if (Y.call(e, t) && ++o && !Y.call(n, t) || !(t in n) || !B(e[t], n[t]))\n          return !1;\n      return Object.keys(n).length === o;\n    }\n  }\n  return e !== e && n !== n;\n}\nfunction $() {\n}\nfunction W(e, n) {\n  return e != e ? n == n : e !== n || e && typeof e == \"object\" || typeof e == \"function\";\n}\nconst k = [];\nfunction _(e, n = $) {\n  let t;\n  const o = /* @__PURE__ */ new Set();\n  function i(b) {\n    if (W(e, b) && (e = b, t)) {\n      const w = !k.length;\n      for (const u of o)\n        u[1](), k.push(u, e);\n      if (w) {\n        for (let u = 0; u < k.length; u += 2)\n          k[u][0](k[u + 1]);\n        k.length = 0;\n      }\n    }\n  }\n  function h(b) {\n    i(b(e));\n  }\n  function U(b, w = $) {\n    const u = [b, w];\n    return o.add(u), o.size === 1 && (t = n(i) || $), b(e), () => {\n      o.delete(u), o.size === 0 && t && (t(), t = null);\n    };\n  }\n  return { set: i, update: h, subscribe: U };\n}\nconst be = (e) => {\n  const { subscribe: n, set: t } = _(null);\n  let o = null;\n  return n((i) => o = i), e.observe(({ changes: i }) => {\n    if (o) {\n      i.deleted.some((b) => b.id === o) && t(null);\n      const U = i.updated.find(({ oldValue: b }) => b.id === o);\n      U && t(U.newValue.id);\n    }\n  }), {\n    get current() {\n      return o;\n    },\n    subscribe: n,\n    set: t\n  };\n};\nvar q = /* @__PURE__ */ ((e) => (e.EDIT = \"EDIT\", e.SELECT = \"SELECT\", e.NONE = \"NONE\", e))(q || {});\nconst V = { selected: [] }, ve = (e, n = \"EDIT\") => {\n  const { subscribe: t, set: o } = _(V);\n  let i = V;\n  t((s) => i = s);\n  const h = () => o(V), U = () => {\n    var s;\n    return ((s = i.selected) == null ? void 0 : s.length) === 0;\n  }, b = (s) => {\n    if (i.selected.length === 0)\n      return !1;\n    const f = typeof s == \"string\" ? s : s.id;\n    return i.selected.some((y) => y.id === f);\n  }, w = (s, f) => {\n    const y = e.getAnnotation(s);\n    if (y) {\n      const A = G(y, n);\n      o(A === \"EDIT\" ? { selected: [{ id: s, editable: !0 }], pointerEvent: f } : A === \"SELECT\" ? { selected: [{ id: s }], pointerEvent: f } : { selected: [], pointerEvent: f });\n    } else\n      console.warn(\"Invalid selection: \" + s);\n  }, u = (s, f = !0) => {\n    const y = Array.isArray(s) ? s : [s], A = y.map((L) => e.getAnnotation(L)).filter((L) => L);\n    o({ selected: A.map(({ id: L }) => ({ id: L, editable: f })) }), A.length !== y.length && console.warn(\"Invalid selection\", s);\n  }, T = (s) => {\n    if (i.selected.length === 0)\n      return !1;\n    const { selected: f } = i;\n    f.filter(({ id: A }) => s.includes(A)).length > 0 && o({ selected: f.filter(({ id: A }) => !s.includes(A)) });\n  };\n  return e.observe(({ changes: s }) => T(s.deleted.map((f) => f.id))), {\n    clear: h,\n    clickSelect: w,\n    get selected() {\n      return i ? [...i.selected] : null;\n    },\n    get pointerEvent() {\n      return i ? i.pointerEvent : null;\n    },\n    isEmpty: U,\n    isSelected: b,\n    setSelected: u,\n    subscribe: t\n  };\n}, G = (e, n) => typeof n == \"function\" ? n(e) || \"EDIT\" : n || \"EDIT\";\nlet z;\nconst H = new Uint8Array(16);\nfunction F() {\n  if (!z && (z = typeof crypto < \"u\" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto), !z))\n    throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");\n  return z(H);\n}\nconst R = [];\nfor (let e = 0; e < 256; ++e)\n  R.push((e + 256).toString(16).slice(1));\nfunction J(e, n = 0) {\n  return R[e[n + 0]] + R[e[n + 1]] + R[e[n + 2]] + R[e[n + 3]] + \"-\" + R[e[n + 4]] + R[e[n + 5]] + \"-\" + R[e[n + 6]] + R[e[n + 7]] + \"-\" + R[e[n + 8]] + R[e[n + 9]] + \"-\" + R[e[n + 10]] + R[e[n + 11]] + R[e[n + 12]] + R[e[n + 13]] + R[e[n + 14]] + R[e[n + 15]];\n}\nconst Q = typeof crypto < \"u\" && crypto.randomUUID && crypto.randomUUID.bind(crypto), j = {\n  randomUUID: Q\n};\nfunction X(e, n, t) {\n  if (j.randomUUID && !n && !e)\n    return j.randomUUID();\n  e = e || {};\n  const o = e.random || (e.rng || F)();\n  if (o[6] = o[6] & 15 | 64, o[8] = o[8] & 63 | 128, n) {\n    t = t || 0;\n    for (let i = 0; i < 16; ++i)\n      n[t + i] = o[i];\n    return n;\n  }\n  return J(o);\n}\nconst Ce = (e) => {\n  const { creator: n, updatedBy: t } = e.target, o = e.bodies.reduce((i, h) => [...i, h.creator, h.updatedBy], []);\n  return [\n    n,\n    t,\n    ...o\n  ].filter((i) => i);\n}, we = (e, n, t, o) => ({\n  id: X(),\n  annotation: e.id,\n  created: t || /* @__PURE__ */ new Date(),\n  creator: o,\n  ...n\n}), Z = (e, n) => {\n  const t = new Set(e.bodies.map((o) => o.id));\n  return n.bodies.filter((o) => !t.has(o.id));\n}, K = (e, n) => {\n  const t = new Set(n.bodies.map((o) => o.id));\n  return e.bodies.filter((o) => !t.has(o.id));\n}, ee = (e, n) => n.bodies.map((t) => {\n  const o = e.bodies.find((i) => i.id === t.id);\n  return { newBody: t, oldBody: o && !B(o, t) ? o : void 0 };\n}).filter(({ oldBody: t }) => t), te = (e, n) => !B(e.target, n.target), M = (e, n) => {\n  const t = Z(e, n), o = K(e, n), i = ee(e, n);\n  return {\n    oldValue: e,\n    newValue: n,\n    bodiesCreated: t.length > 0 ? t : void 0,\n    bodiesDeleted: o.length > 0 ? o : void 0,\n    bodiesUpdated: i.length > 0 ? i : void 0,\n    targetUpdated: te(e, n) ? { oldTarget: e.target, newTarget: n.target } : void 0\n  };\n};\nvar ne = /* @__PURE__ */ ((e) => (e.BODY_ONLY = \"BODY_ONLY\", e.TARGET_ONLY = \"TARGET_ONLY\", e))(ne || {}), O = /* @__PURE__ */ ((e) => (e.LOCAL = \"LOCAL\", e.REMOTE = \"REMOTE\", e))(O || {});\nconst oe = (e, n) => {\n  var h, U;\n  const { changes: t, origin: o } = n;\n  if (!(!e.options.origin || e.options.origin === o))\n    return !1;\n  if (e.options.ignore) {\n    const { ignore: b } = e.options, w = (T) => (T == null ? void 0 : T.length) > 0;\n    if (!(w(t.created) || w(t.deleted))) {\n      const T = (h = t.updated) == null ? void 0 : h.some((f) => w(f.bodiesCreated) || w(f.bodiesDeleted) || w(f.bodiesUpdated)), s = (U = t.updated) == null ? void 0 : U.some((f) => f.targetUpdated);\n      if (b === \"BODY_ONLY\" && T && !s || b === \"TARGET_ONLY\" && s && !T)\n        return !1;\n    }\n  }\n  if (e.options.annotations) {\n    const b = /* @__PURE__ */ new Set([\n      ...t.created.map((u) => u.id),\n      ...t.deleted.map((u) => u.id),\n      ...t.updated.map(({ oldValue: u }) => u.id)\n    ]);\n    return !!(Array.isArray(e.options.annotations) ? e.options.annotations : [e.options.annotations]).find((u) => b.has(u));\n  } else\n    return !0;\n}, se = (e, n) => {\n  const t = new Set((e.created || []).map((s) => s.id)), o = new Set((e.updated || []).map(({ newValue: s }) => s.id)), i = new Set((n.created || []).map((s) => s.id)), h = new Set((n.deleted || []).map((s) => s.id)), U = new Set((n.updated || []).map(({ oldValue: s }) => s.id)), b = new Set((n.updated || []).filter(({ oldValue: s }) => t.has(s.id) || o.has(s.id)).map(({ oldValue: s }) => s.id)), w = [\n    ...(e.created || []).filter((s) => !h.has(s.id)).map((s) => U.has(s.id) ? n.updated.find(({ oldValue: f }) => f.id === s.id).newValue : s),\n    ...n.created || []\n  ], u = [\n    ...(e.deleted || []).filter((s) => !i.has(s.id)),\n    ...(n.deleted || []).filter((s) => !t.has(s.id))\n  ], T = [\n    ...(e.updated || []).filter(({ newValue: s }) => !h.has(s.id)).map((s) => {\n      const { oldValue: f, newValue: y } = s;\n      if (U.has(y.id)) {\n        const A = n.updated.find((L) => L.oldValue.id === y.id).newValue;\n        return M(f, A);\n      } else\n        return s;\n    }),\n    ...(n.updated || []).filter(({ oldValue: s }) => !b.has(s.id))\n  ];\n  return { created: w, deleted: u, updated: T };\n}, ie = (e) => e.id !== void 0, ye = () => {\n  const e = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map(), t = [], o = (r, l = {}) => t.push({ onChange: r, options: l }), i = (r) => {\n    const l = t.findIndex((a) => a.onChange == r);\n    l > -1 && t.splice(l, 1);\n  }, h = (r, l) => {\n    const a = {\n      origin: r,\n      changes: {\n        created: l.created || [],\n        updated: l.updated || [],\n        deleted: l.deleted || []\n      },\n      state: [...e.values()]\n    };\n    t.forEach((p) => {\n      oe(p, a) && p.onChange(a);\n    });\n  }, U = (r, l = O.LOCAL) => {\n    if (e.get(r.id))\n      throw Error(`Cannot add annotation ${r.id} - exists already`);\n    e.set(r.id, r), r.bodies.forEach((p) => n.set(p.id, r.id)), h(l, { created: [r] });\n  }, b = (r, l) => {\n    const a = typeof r == \"string\" ? l : r, p = typeof r == \"string\" ? r : r.id, v = e.get(p);\n    if (v) {\n      const D = M(v, a);\n      return p === a.id ? e.set(p, a) : (e.delete(p), e.set(a.id, a)), v.bodies.forEach((x) => n.delete(x.id)), a.bodies.forEach((x) => n.set(x.id, a.id)), D;\n    } else\n      console.warn(`Cannot update annotation ${p} - does not exist`);\n  }, w = (r, l = O.LOCAL, a = O.LOCAL) => {\n    const p = ie(l) ? a : l, v = b(r, l);\n    v && h(p, { updated: [v] });\n  }, u = (r, l = O.LOCAL) => {\n    const a = r.reduce((p, v) => {\n      const D = b(v);\n      return D ? [...p, D] : p;\n    }, []);\n    a.length > 0 && h(l, { updated: a });\n  }, T = (r, l = O.LOCAL) => {\n    const a = e.get(r.annotation);\n    if (a) {\n      const p = {\n        ...a,\n        bodies: [...a.bodies, r]\n      };\n      e.set(a.id, p), n.set(r.id, p.id), h(l, { updated: [{\n        oldValue: a,\n        newValue: p,\n        bodiesCreated: [r]\n      }] });\n    } else\n      console.warn(`Attempt to add body to missing annotation: ${r.annotation}`);\n  }, s = () => [...e.values()], f = (r = O.LOCAL) => {\n    const l = [...e.values()];\n    e.clear(), n.clear(), h(r, { deleted: l });\n  }, y = (r, l = !0, a = O.LOCAL) => {\n    if (l) {\n      const p = [...e.values()];\n      e.clear(), n.clear(), r.forEach((v) => {\n        e.set(v.id, v), v.bodies.forEach((D) => n.set(D.id, v.id));\n      }), h(a, { created: r, deleted: p });\n    } else {\n      const p = r.reduce((v, D) => {\n        const x = e.get(D.id);\n        return x ? [...v, x] : v;\n      }, []);\n      if (p.length > 0)\n        throw Error(`Bulk insert would overwrite the following annotations: ${p.map((v) => v.id).join(\", \")}`);\n      r.forEach((v) => {\n        e.set(v.id, v), v.bodies.forEach((D) => n.set(D.id, v.id));\n      }), h(a, { created: r });\n    }\n  }, A = (r) => {\n    const l = typeof r == \"string\" ? r : r.id, a = e.get(l);\n    if (a)\n      return e.delete(l), a.bodies.forEach((p) => n.delete(p.id)), a;\n    console.warn(`Attempt to delete missing annotation: ${l}`);\n  }, L = (r, l = O.LOCAL) => {\n    const a = A(r);\n    a && h(l, { deleted: [a] });\n  }, C = (r, l = O.LOCAL) => {\n    const a = r.reduce((p, v) => {\n      const D = A(v);\n      return D ? [...p, D] : p;\n    }, []);\n    a.length > 0 && h(l, { deleted: a });\n  }, c = (r, l = O.LOCAL) => {\n    const a = e.get(r.annotation);\n    if (a) {\n      const p = a.bodies.find((v) => v.id === r.id);\n      if (p) {\n        n.delete(p.id);\n        const v = {\n          ...a,\n          bodies: a.bodies.filter((x) => x.id !== r.id)\n        };\n        e.set(a.id, v), h(l, { updated: [{\n          oldValue: a,\n          newValue: v,\n          bodiesDeleted: [p]\n        }] });\n      } else\n        console.warn(`Attempt to delete missing body ${r.id} from annotation ${r.annotation}`);\n    } else\n      console.warn(`Attempt to delete body from missing annotation ${r.annotation}`);\n  }, m = (r) => {\n    const l = e.get(r);\n    return l ? { ...l } : void 0;\n  }, d = (r) => {\n    const l = n.get(r);\n    if (l) {\n      const p = m(l).bodies.find((v) => v.id === r);\n      if (p)\n        return p;\n      console.error(`Store integrity error: body ${r} in index, but not in annotation`);\n    } else\n      console.warn(`Attempt to retrieve missing body: ${r}`);\n  }, E = (r, l) => {\n    if (r.annotation !== l.annotation)\n      throw \"Annotation integrity violation: annotation ID must be the same when updating bodies\";\n    const a = e.get(r.annotation);\n    if (a) {\n      const p = a.bodies.find((D) => D.id === r.id), v = {\n        ...a,\n        bodies: a.bodies.map((D) => D.id === p.id ? l : D)\n      };\n      return e.set(a.id, v), p.id !== l.id && (n.delete(p.id), n.set(l.id, v.id)), {\n        oldValue: a,\n        newValue: v,\n        bodiesUpdated: [{ oldBody: p, newBody: l }]\n      };\n    } else\n      console.warn(`Attempt to add body to missing annotation ${r.annotation}`);\n  }, g = (r, l, a = O.LOCAL) => {\n    const p = E(r, l);\n    h(a, { updated: [p] });\n  }, S = (r, l = O.LOCAL) => {\n    const a = r.map((p) => E({ id: p.id, annotation: p.annotation }, p));\n    h(l, { updated: a });\n  }, I = (r) => {\n    const l = e.get(r.annotation);\n    if (l) {\n      const a = {\n        ...l,\n        target: {\n          ...l.target,\n          ...r\n        }\n      };\n      return e.set(l.id, a), {\n        oldValue: l,\n        newValue: a,\n        targetUpdated: {\n          oldTarget: l.target,\n          newTarget: r\n        }\n      };\n    } else\n      console.warn(`Attempt to update target on missing annotation: ${r.annotation}`);\n  };\n  return {\n    addAnnotation: U,\n    addBody: T,\n    all: s,\n    bulkAddAnnotation: y,\n    bulkDeleteAnnotation: C,\n    bulkUpdateAnnotation: u,\n    bulkUpdateBodies: S,\n    bulkUpdateTargets: (r, l = O.LOCAL) => {\n      const a = r.map(I).filter((p) => p);\n      a.length > 0 && h(l, { updated: a });\n    },\n    clear: f,\n    deleteAnnotation: L,\n    deleteBody: c,\n    getAnnotation: m,\n    getBody: d,\n    observe: o,\n    unobserve: i,\n    updateAnnotation: w,\n    updateBody: g,\n    updateTarget: (r, l = O.LOCAL) => {\n      const a = I(r);\n      a && h(l, { updated: [a] });\n    }\n  };\n}, Ue = (e) => ({\n  ...e,\n  subscribe: (t) => {\n    const o = (i) => t(i.state);\n    return e.observe(o), t(e.all()), () => e.unobserve(o);\n  }\n});\nlet P = () => ({\n  emit(e, ...n) {\n    let t = this.events[e] || [];\n    for (let o = 0, i = t.length; o < i; o++)\n      t[o](...n);\n  },\n  events: {},\n  on(e, n) {\n    var t;\n    return (t = this.events[e]) != null && t.push(n) || (this.events[e] = [n]), () => {\n      var o;\n      this.events[e] = (o = this.events[e]) == null ? void 0 : o.filter((i) => n !== i);\n    };\n  }\n});\nconst de = 250, Le = (e) => {\n  const n = P(), t = [];\n  let o = -1, i = !1, h = 0;\n  const U = (d) => {\n    if (!i) {\n      const { changes: E } = d, g = performance.now();\n      if (g - h > de)\n        t.splice(o + 1), t.push(E), o = t.length - 1;\n      else {\n        const S = t.length - 1;\n        t[S] = se(t[S], E);\n      }\n      h = g;\n    }\n    i = !1;\n  };\n  e.observe(U, { origin: O.LOCAL });\n  const b = (d) => (d == null ? void 0 : d.length) > 0 && e.bulkDeleteAnnotation(d), w = (d) => (d == null ? void 0 : d.length) > 0 && e.bulkAddAnnotation(d, !1), u = (d) => (d == null ? void 0 : d.length) > 0 && e.bulkUpdateAnnotation(d.map(({ oldValue: E }) => E)), T = (d) => (d == null ? void 0 : d.length) > 0 && e.bulkUpdateAnnotation(d.map(({ newValue: E }) => E)), s = (d) => (d == null ? void 0 : d.length) > 0 && e.bulkAddAnnotation(d, !1), f = (d) => (d == null ? void 0 : d.length) > 0 && e.bulkDeleteAnnotation(d);\n  return {\n    canRedo: () => t.length - 1 > o,\n    canUndo: () => o > -1,\n    destroy: () => e.unobserve(U),\n    on: (d, E) => n.on(d, E),\n    redo: () => {\n      if (t.length - 1 > o) {\n        i = !0;\n        const { created: d, updated: E, deleted: g } = t[o + 1];\n        w(d), T(E), f(g), n.emit(\"redo\", t[o + 1]), o += 1;\n      }\n    },\n    undo: () => {\n      if (o > -1) {\n        i = !0;\n        const { created: d, updated: E, deleted: g } = t[o];\n        b(d), u(E), s(g), n.emit(\"undo\", t[o]), o -= 1;\n      }\n    }\n  };\n}, Se = () => {\n  const { subscribe: e, set: n } = _([]);\n  return {\n    subscribe: e,\n    set: n\n  };\n}, Te = (e, n, t, o) => {\n  const { store: i, selection: h, hover: U, viewport: b } = e, w = /* @__PURE__ */ new Map();\n  let u = [], T, s;\n  const f = (c, m) => {\n    w.has(c) ? w.get(c).push(m) : w.set(c, [m]);\n  }, y = (c, m) => {\n    const d = w.get(c);\n    d && d.indexOf(m) > 0 && d.splice(d.indexOf(m), 1);\n  }, A = (c, m, d) => {\n    w.has(c) && setTimeout(() => {\n      w.get(c).forEach((E) => {\n        if (t) {\n          const g = Array.isArray(m) ? m.map((I) => t.serialize(I)) : t.serialize(m), S = d ? d instanceof PointerEvent ? d : t.serialize(d) : void 0;\n          E(g, S);\n        } else\n          E(m, d);\n      });\n    }, 1);\n  }, L = () => {\n    const { selected: c } = h, m = c.map(({ id: d }) => i.getAnnotation(d));\n    m.forEach((d) => {\n      const E = u.find((g) => g.id === d.id);\n      (!E || !B(E, d)) && A(\"updateAnnotation\", d, E);\n    }), u = u.map((d) => {\n      const E = m.find(({ id: g }) => g === d.id);\n      return E || d;\n    });\n  };\n  h.subscribe(({ selected: c }) => {\n    if (!(u.length === 0 && c.length === 0)) {\n      if (u.length === 0 && c.length > 0)\n        u = c.map(({ id: m }) => i.getAnnotation(m));\n      else if (u.length > 0 && c.length === 0)\n        u.forEach((m) => {\n          const d = i.getAnnotation(m.id);\n          d && !B(d, m) && A(\"updateAnnotation\", d, m);\n        }), u = [];\n      else {\n        const m = new Set(u.map((g) => g.id)), d = new Set(c.map(({ id: g }) => g));\n        u.filter((g) => !d.has(g.id)).forEach((g) => {\n          const S = i.getAnnotation(g.id);\n          S && !B(S, g) && A(\"updateAnnotation\", S, g);\n        }), u = [\n          // Remove annotations that were deselected\n          ...u.filter((g) => d.has(g.id)),\n          // Add editable annotations that were selected\n          ...c.filter(({ id: g }) => !m.has(g)).map(({ id: g }) => i.getAnnotation(g))\n        ];\n      }\n      A(\"selectionChanged\", u);\n    }\n  }), U.subscribe((c) => {\n    !T && c ? A(\"mouseEnterAnnotation\", i.getAnnotation(c)) : T && !c ? A(\"mouseLeaveAnnotation\", i.getAnnotation(T)) : T && c && (A(\"mouseLeaveAnnotation\", i.getAnnotation(T)), A(\"mouseEnterAnnotation\", i.getAnnotation(c))), T = c;\n  }), b == null || b.subscribe((c) => A(\"viewportIntersect\", c.map(i.getAnnotation))), i.observe((c) => {\n    o && (s && clearTimeout(s), s = setTimeout(L, 1e3));\n    const { created: m, deleted: d } = c.changes;\n    m.forEach((g) => A(\"createAnnotation\", g)), d.forEach((g) => A(\"deleteAnnotation\", g)), c.changes.updated.filter((g) => [\n      ...g.bodiesCreated || [],\n      ...g.bodiesDeleted || [],\n      ...g.bodiesUpdated || []\n    ].length > 0).forEach(({ oldValue: g, newValue: S }) => {\n      const I = u.find((N) => N.id === g.id) || g;\n      u = u.map((N) => N.id === g.id ? S : N), A(\"updateAnnotation\", S, I);\n    });\n  }, { origin: O.LOCAL }), i.observe((c) => {\n    if (u) {\n      const m = new Set(u.map((E) => E.id)), d = c.changes.updated.filter(({ newValue: E }) => m.has(E.id)).map(({ newValue: E }) => E);\n      d.length > 0 && (u = u.map((E) => {\n        const g = d.find((S) => S.id === E.id);\n        return g || E;\n      }));\n    }\n  }, { origin: O.REMOTE });\n  const C = (c) => (m) => {\n    const { created: d, deleted: E, updated: g } = m;\n    d.forEach((S) => A(\"createAnnotation\", S)), E.forEach((S) => A(\"deleteAnnotation\", S)), c ? g.forEach((S) => A(\"updateAnnotation\", S.oldValue, S.newValue)) : g.forEach((S) => A(\"updateAnnotation\", S.newValue, S.oldValue));\n  };\n  return n.on(\"undo\", C(!0)), n.on(\"redo\", C(!1)), { on: f, off: y, emit: A };\n}, Oe = (e) => (n) => n.map((t) => e.serialize(t)), re = (e) => (n) => n.reduce((t, o) => {\n  const { parsed: i, error: h } = e.parse(o);\n  return h ? {\n    parsed: t.parsed,\n    failed: [...t.failed, o]\n  } : {\n    parsed: [...t.parsed, i],\n    failed: t.failed\n  };\n}, { parsed: [], failed: [] }), De = (e, n, t) => {\n  const { store: o, selection: i } = e, h = (C) => {\n    if (t) {\n      const { parsed: c, error: m } = t.parse(C);\n      c ? o.addAnnotation(c, O.REMOTE) : console.error(m);\n    } else\n      o.addAnnotation(C, O.REMOTE);\n  }, U = () => i.clear(), b = () => o.clear(), w = (C) => {\n    const c = o.getAnnotation(C);\n    return t && c ? t.serialize(c) : c;\n  }, u = () => t ? o.all().map(t.serialize) : o.all(), T = () => {\n    var m;\n    const c = (((m = i.selected) == null ? void 0 : m.map((d) => d.id)) || []).map((d) => o.getAnnotation(d));\n    return t ? c.map(t.serialize) : c;\n  }, s = (C) => fetch(C).then((c) => c.json()).then((c) => (y(c), c)), f = (C) => {\n    if (typeof C == \"string\") {\n      const c = o.getAnnotation(C);\n      return o.deleteAnnotation(C), t ? t.serialize(c) : c;\n    } else {\n      const c = t ? t.parse(C).parsed : C;\n      return o.deleteAnnotation(c), C;\n    }\n  }, y = (C) => {\n    if (t) {\n      const { parsed: c, failed: m } = re(t)(C);\n      m.length > 0 && console.warn(`Discarded ${m.length} invalid annotations`, m), o.bulkAddAnnotation(c, !0, O.REMOTE);\n    } else\n      o.bulkAddAnnotation(C, !0, O.REMOTE);\n  }, A = (C) => {\n    C ? i.setSelected(C) : i.clear();\n  }, L = (C) => {\n    if (t) {\n      const c = t.parse(C).parsed, m = t.serialize(o.getAnnotation(c.id));\n      return o.updateAnnotation(c), m;\n    } else {\n      const c = o.getAnnotation(C.id);\n      return o.updateAnnotation(C), c;\n    }\n  };\n  return {\n    addAnnotation: h,\n    cancelSelected: U,\n    canRedo: n.canRedo,\n    canUndo: n.canUndo,\n    clearAnnotations: b,\n    getAnnotationById: w,\n    getAnnotations: u,\n    getSelected: T,\n    loadAnnotations: s,\n    redo: n.redo,\n    removeAnnotation: f,\n    setAnnotations: y,\n    setSelected: A,\n    undo: n.undo,\n    updateAnnotation: L\n  };\n};\nlet ae = (e) => crypto.getRandomValues(new Uint8Array(e)), ce = (e, n, t) => {\n  let o = (2 << Math.log(e.length - 1) / Math.LN2) - 1, i = -~(1.6 * o * n / e.length);\n  return (h = n) => {\n    let U = \"\";\n    for (; ; ) {\n      let b = t(i), w = i;\n      for (; w--; )\n        if (U += e[b[w] & o] || \"\", U.length === h)\n          return U;\n    }\n  };\n}, le = (e, n = 21) => ce(e, n, ae), ue = (e = 21) => crypto.getRandomValues(new Uint8Array(e)).reduce((n, t) => (t &= 63, t < 36 ? n += t.toString(36) : t < 62 ? n += (t - 26).toString(36).toUpperCase() : t > 62 ? n += \"-\" : n += \"_\", n), \"\");\nconst Re = () => ({ isGuest: !0, id: le(\"1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_\", 20)() }), fe = (e) => {\n  const n = JSON.stringify(e);\n  let t = 0;\n  for (let o = 0, i = n.length; o < i; o++) {\n    let h = n.charCodeAt(o);\n    t = (t << 5) - t + h, t |= 0;\n  }\n  return `${t}`;\n}, pe = (e) => e ? typeof e == \"object\" ? { ...e } : e : void 0, xe = (e, n) => (Array.isArray(e) ? e : [e]).map((t) => {\n  const { id: o, type: i, purpose: h, value: U, created: b, creator: w, ...u } = t;\n  return {\n    id: o || `temp-${fe(t)}`,\n    annotation: n,\n    type: i,\n    purpose: h,\n    value: U,\n    created: b ? new Date(b) : void 0,\n    creator: pe(w),\n    ...u\n  };\n}), Be = (e) => e.map((n) => {\n  var o;\n  const t = { ...n };\n  return delete t.annotation, (o = t.id) != null && o.startsWith(\"temp-\") && delete t.id, t;\n}), he = [\n  \"#ff7c00\",\n  // orange\n  \"#1ac938\",\n  // green\n  \"#e8000b\",\n  // red\n  \"#8b2be2\",\n  // purple\n  \"#9f4800\",\n  // brown\n  \"#f14cc1\",\n  // pink\n  \"#ffc400\",\n  // khaki\n  \"#00d7ff\",\n  // cyan\n  \"#023eff\"\n  // blue\n], ge = () => {\n  const e = [...he];\n  return { assignRandomColor: () => {\n    const o = Math.floor(Math.random() * e.length), i = e[o];\n    return e.splice(o, 1), i;\n  }, releaseColor: (o) => e.push(o) };\n}, me = () => {\n  const e = ge();\n  return { addUser: (o, i) => {\n    const h = e.assignRandomColor();\n    return {\n      label: i.name || i.id,\n      avatar: i.avatar,\n      color: h\n    };\n  }, removeUser: (o) => e.releaseColor(o.appearance.color) };\n}, Ae = (e, n) => e.every((t) => e.includes(t)) && n.every((t) => e.includes(t)), Ie = ue(), ke = (e = me()) => {\n  const n = P(), t = /* @__PURE__ */ new Map(), o = /* @__PURE__ */ new Map(), i = (s, f) => {\n    if (t.has(s)) {\n      console.warn(\"Attempt to add user that is already present\", s, f);\n      return;\n    }\n    const y = e.addUser(s, f);\n    t.set(s, {\n      ...f,\n      presenceKey: s,\n      appearance: y\n    });\n  }, h = (s) => {\n    const f = t.get(s);\n    if (!f) {\n      console.warn(\"Attempt to remove user that is not present\", s);\n      return;\n    }\n    e.removeUser(f), t.delete(s);\n  }, U = (s) => {\n    const f = new Set(s.map((L) => L.presenceKey)), y = s.filter(({ presenceKey: L }) => !t.has(L)), A = Array.from(t.values()).filter((L) => !f.has(L.presenceKey));\n    y.forEach(({ presenceKey: L, user: C }) => i(L, C)), A.forEach((L) => {\n      const { presenceKey: C } = L;\n      o.has(C) && n.emit(\"selectionChange\", L, null), h(C);\n    }), (y.length > 0 || A.length > 0) && n.emit(\"presence\", u());\n  }, b = (s, f) => {\n    const y = t.get(s);\n    if (!y) {\n      console.warn(\"Activity notification from user that is not present\");\n      return;\n    }\n    const A = o.get(s);\n    (!A || !Ae(A, f)) && (o.set(s, f), n.emit(\"selectionChange\", y, f));\n  }, w = (s, f) => {\n    const y = t.get(s);\n    if (!y) {\n      console.warn(\"Selection change for user that is not present\", s);\n      return;\n    }\n    f ? o.set(s, f) : o.delete(s), n.emit(\"selectionChange\", y, f);\n  }, u = () => [...Array.from(t.values())];\n  return {\n    getPresentUsers: u,\n    notifyActivity: b,\n    on: (s, f) => n.on(s, f),\n    syncUsers: U,\n    updateSelection: w\n  };\n};\nexport {\n  ne as Ignore,\n  O as Origin,\n  Ie as PRESENCE_KEY,\n  q as PointerSelectAction,\n  Re as createAnonymousGuest,\n  De as createBaseAnnotator,\n  we as createBody,\n  me as createDefaultAppearenceProvider,\n  be as createHoverState,\n  Te as createLifecyleObserver,\n  ke as createPresenceState,\n  ve as createSelectionState,\n  ye as createStore,\n  Le as createUndoStack,\n  Se as createViewportState,\n  ge as defaultColorProvider,\n  M as diffAnnotations,\n  Ce as getContributors,\n  se as mergeChanges,\n  G as onPointerSelect,\n  re as parseAll,\n  xe as parseW3CBodies,\n  pe as parseW3CUser,\n  Oe as serializeAll,\n  Be as serializeW3CBodies,\n  oe as shouldNotify,\n  Ue as toSvelteStore\n};\n//# sourceMappingURL=annotorious-core.es.js.map\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { parseW3CUser, parseW3CBodies, serializeW3CBodies } from '@annotorious/core';\r\nimport type { FormatAdapter, ParseResult, W3CAnnotation } from '@annotorious/core';\r\nimport { ShapeType } from '../core';\r\nimport type { ImageAnnotation, RectangleGeometry } from '../core';\r\nimport type { FragmentSelector } from './fragment';\r\nimport { parseFragmentSelector, serializeFragmentSelector } from './fragment';\r\nimport type { SVGSelector } from './svg';\r\nimport { parseSVGSelector, serializeSVGSelector } from './svg';\r\n\r\nexport type W3CImageFormatAdapter = FormatAdapter<ImageAnnotation, W3CAnnotation>;\r\n\r\nexport const W3CImageFormat = (\r\n  source: string,\r\n  invertY: boolean = false\r\n): W3CImageFormatAdapter => {\r\n\r\n  const parse = (serialized: W3CAnnotation) =>\r\n    parseW3CImageAnnotation(serialized, invertY);\r\n\r\n  const serialize = (annotation: ImageAnnotation) =>\r\n    serializeW3CImageAnnotation(annotation, source);\r\n\r\n  return { parse, serialize }\r\n}\r\n\r\nexport const parseW3CImageAnnotation = (\r\n  annotation: W3CAnnotation, \r\n  invertY: boolean = false\r\n): ParseResult<ImageAnnotation> => {\r\n  const annotationId = annotation.id || uuidv4();\r\n\r\n  const { \r\n    creator,\r\n    created,\r\n    updatedBy,\r\n    updated,\r\n    body, \r\n    ...rest \r\n  } = annotation;\r\n\r\n  const bodies = parseW3CBodies(body, annotationId);\r\n\r\n  const target = Array.isArray(annotation.target) ? annotation.target[0] : annotation.target;\r\n\r\n  const w3cSelector = Array.isArray(target.selector) ? target.selector[0] : target.selector;\r\n\r\n  const selector = \r\n    w3cSelector.type === 'FragmentSelector' ?\r\n      parseFragmentSelector(w3cSelector as FragmentSelector, invertY) :\r\n    w3cSelector.type === 'SvgSelector' ?\r\n      parseSVGSelector(w3cSelector as SVGSelector) : undefined;\r\n\r\n  return selector ? { \r\n    parsed: {\r\n      ...rest,\r\n      id: annotationId,\r\n      bodies,\r\n      target: {\r\n        created: created ? new Date(created) : undefined,\r\n        creator: parseW3CUser(creator),\r\n        ...rest.target,\r\n        annotation: annotationId,\r\n        selector\r\n      }\r\n    }\r\n  } : {\r\n    error: Error(`Unknown selector type: ${w3cSelector.type}`)\r\n  };\r\n\r\n}\r\n\r\nexport const serializeW3CImageAnnotation = (\r\n  annotation: ImageAnnotation, \r\n  source: string\r\n): W3CAnnotation => {\r\n  const { \r\n    selector, \r\n    creator, \r\n    created, \r\n    updated, \r\n    updatedBy, \r\n    ...rest \r\n  } = annotation.target;\r\n\r\n  const w3CSelector =\r\n    selector.type == ShapeType.RECTANGLE ?\r\n      serializeFragmentSelector(selector.geometry as RectangleGeometry) :\r\n      serializeSVGSelector(selector);\r\n\r\n  return {\r\n    ...annotation,\r\n    '@context': 'http://www.w3.org/ns/anno.jsonld',\r\n    id: annotation.id,\r\n    type: 'Annotation',\r\n    body: serializeW3CBodies(annotation.bodies),\r\n    creator,\r\n    created: created?.toISOString(),\r\n    target: {\r\n      ...rest,\r\n      source,\r\n      selector: w3CSelector\r\n    }\r\n  };\r\n};\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import { boundsFromPoints } from '../../../model';\r\n  import type { Polygon } from '../../../model';\r\n  import type { Transform } from '../../Transform';\r\n  import { Editor, Handle } from '..';\r\n\r\n  /** Props */\r\n  export let shape: Polygon;\r\n  export let computedStyle: string = undefined;\r\n  export let transform: Transform;\r\n  export let viewportScale: number = 1;\r\n\r\n  $: geom = shape.geometry;\r\n\r\n  $: handleSize = 10 / viewportScale;\r\n\r\n  const editor = (polygon: Polygon, handle: Handle, delta: [number, number]) => {\r\n    let points: [number, number][];\r\n\r\n    if (handle === Handle.SHAPE) {\r\n      points = polygon.geometry.points.map(([x, y]) => [x + delta[0], y + delta[1]]);\r\n    } else {\r\n      points = polygon.geometry.points.map(([x, y], idx) =>\r\n        handle === Handle(idx) ? [x + delta[0], y + delta[1]] : [x, y]\r\n      );\r\n    }\r\n\r\n    const bounds = boundsFromPoints(points);\r\n\r\n    return {\r\n      ...polygon,\r\n      geometry: { points, bounds }\r\n    }\r\n  }\r\n</script>\r\n\r\n<Editor\r\n  shape={shape}\r\n  transform={transform}\r\n  editor={editor}\r\n  on:change \r\n  on:grab\r\n  on:release\r\n  let:grab={grab}>\r\n\r\n  <polygon\r\n    class=\"a9s-outer\"\r\n    style={computedStyle ? 'display:none;' : undefined}\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    points={geom.points.map(xy => xy.join(',')).join(' ')} />\r\n\r\n  <polygon\r\n    class=\"a9s-inner a9s-shape-handle\"\r\n    style={computedStyle}\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    points={geom.points.map(xy => xy.join(',')).join(' ')} />\r\n\r\n  {#each geom.points as point, idx}\r\n    <rect \r\n      class=\"a9s-corner-handle\"\r\n      on:pointerdown={grab(Handle(idx))}\r\n      x={point[0] - handleSize / 2} y={point[1] - handleSize / 2} height={handleSize} width={handleSize} />\r\n  {/each}\r\n</Editor>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import type { Rectangle } from '../../../model';\r\n  import type { Transform } from '../../Transform';\r\n  import { Editor, Handle } from '..';\r\n\r\n  /** Props */\r\n  export let shape: Rectangle;\r\n  export let computedStyle: string = undefined;\r\n  export let transform: Transform;\r\n  export let viewportScale: number = 1;\r\n\r\n  $: geom = shape.geometry;\r\n\r\n  $: handleSize = 10 / viewportScale;\r\n\r\n  const editor = (rectangle: Rectangle, handle: Handle, delta: [number, number]) => {\r\n    const initialBounds = rectangle.geometry.bounds;\r\n\r\n    let [x0, y0] = [initialBounds.minX, initialBounds.minY];\r\n    let [x1, y1] = [initialBounds.maxX, initialBounds.maxY];\r\n\r\n    const [dx, dy] = delta;\r\n\r\n    if (handle === Handle.SHAPE) {\r\n      x0 += dx;\r\n      x1 += dx;\r\n      y0 += dy;\r\n      y1 += dy;\r\n    } else {\r\n      switch (handle) {\r\n        case Handle.TOP:\r\n        case Handle.TOP_LEFT:\r\n        case Handle.TOP_RIGHT: {\r\n          y0 += dy;\r\n          break;\r\n        }\r\n\r\n        case Handle.BOTTOM:\r\n        case Handle.BOTTOM_LEFT:\r\n        case Handle.BOTTOM_RIGHT: {\r\n          y1 += dy;\r\n          break;\r\n        }\r\n      }\r\n\r\n      switch (handle) {\r\n        case Handle.LEFT:\r\n        case Handle.TOP_LEFT:\r\n        case Handle.BOTTOM_LEFT: {\r\n          x0 += dx;\r\n          break;\r\n        }\r\n\r\n        case Handle.RIGHT:\r\n        case Handle.TOP_RIGHT:\r\n        case Handle.BOTTOM_RIGHT: {\r\n          x1 += dx;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    const x = Math.min(x0, x1);\r\n    const y = Math.min(y0, y1);\r\n    const w = Math.abs(x1 - x0);\r\n    const h = Math.abs(y1 - y0);\r\n\r\n    return {\r\n      ...rectangle,\r\n      geometry: {\r\n        x, y, w, h,\r\n        bounds: {\r\n          minX: x,\r\n          minY: y,\r\n          maxX: x + w,\r\n          maxY: y + h\r\n        }\r\n      }\r\n    };\r\n  }\r\n</script>\r\n\r\n<Editor\r\n  shape={shape}\r\n  transform={transform}\r\n  editor={editor}\r\n  on:grab\r\n  on:change \r\n  on:release\r\n  let:grab={grab}>\r\n\r\n  <rect \r\n    class=\"a9s-outer\"\r\n    style={computedStyle ? 'display:none;' : undefined}\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    x={geom.x} y={geom.y} width={geom.w} height={geom.h} />\r\n\r\n  <rect \r\n    class=\"a9s-inner a9s-shape-handle\"\r\n    style={computedStyle}\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    x={geom.x} y={geom.y} width={geom.w} height={geom.h} />\r\n\r\n  <rect \r\n    class=\"a9s-edge-handle a9s-edge-handle-top\" \r\n    on:pointerdown={grab(Handle.TOP)}\r\n    x={geom.x} y={geom.y} height={1} width={geom.w} />\r\n\r\n  <rect \r\n    class=\"a9s-edge-handle a9s-edge-handle-right\"\r\n    on:pointerdown={grab(Handle.RIGHT)}\r\n    x={geom.x + geom.w} y={geom.y} height={geom.h} width={1}/>\r\n\r\n  <rect \r\n    class=\"a9s-edge-handle a9s-edge-handle-bottom\" \r\n    on:pointerdown={grab(Handle.BOTTOM)}\r\n    x={geom.x} y={geom.y + geom.h} height={1} width={geom.w} />\r\n\r\n  <rect \r\n    class=\"a9s-edge-handle a9s-edge-handle-left\" \r\n    on:pointerdown={grab(Handle.LEFT)}\r\n    x={geom.x} y={geom.y} height={geom.h} width={1} />\r\n\r\n  <circle \r\n    class=\"a9s-corner-handle a9s-corner-handle-topleft\"\r\n    on:pointerdown={grab(Handle.TOP_LEFT)}\r\n    cx={geom.x} cy={geom.y} r={handleSize/2}/>\r\n\r\n  <circle \r\n    class=\"a9s-corner-handle a9s-corner-handle-topright\"\r\n    on:pointerdown={grab(Handle.TOP_RIGHT)}\r\n    cx={geom.x + geom.w} cy={geom.y} r={handleSize/2} />\r\n  \r\n  <circle \r\n    class=\"a9s-corner-handle a9s-corner-handle-bottomright\"\r\n    on:pointerdown={grab(Handle.BOTTOM_RIGHT)}\r\n    cx={geom.x + geom.w} cy={geom.y + geom.h} r={handleSize/2} />\r\n    \r\n  <circle \r\n    class=\"a9s-corner-handle a9s-corner-handle-bottomleft\"\r\n    on:pointerdown={grab(Handle.BOTTOM_LEFT)}\r\n    cx={geom.x} cy={geom.y + geom.h} r={handleSize/2} />\r\n</Editor>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import { Handle, Editor } from '..';\r\n  import type { Transform } from '../../Transform';\r\n  import type { Ellipse } from '../../../model';\r\n\r\n  export let shape: Ellipse;\r\n\r\n  export let transform: Transform;\r\n\r\n  export let viewportScale: number = 1;\r\n\r\n  $: geom = shape.geometry;\r\n\r\n  $: handleSize = 10 / viewportScale;\r\n\r\n  const editor = (ellipse: Ellipse, handle: Handle, delta: [number, number]) => {\r\n    const initialBounds = ellipse.geometry.bounds;\r\n\r\n    let [x0, y0] = [initialBounds.minX, initialBounds.minY];\r\n    let [x1, y1] = [initialBounds.maxX, initialBounds.maxY];\r\n\r\n    const [dx, dy] = delta;\r\n\r\n    if (handle === Handle.SHAPE) {\r\n      x0 += dx;\r\n      x1 += dx;\r\n      y0 += dy;\r\n      y1 += dy;\r\n    } else {\r\n      switch (handle) {\r\n        case Handle.TOP: {\r\n          y0 += dy;\r\n          break;\r\n        }\r\n\r\n        case Handle.BOTTOM: {\r\n          y1 += dy;\r\n          break;\r\n        }\r\n\r\n        case Handle.LEFT: {\r\n          x0 += dx;\r\n          break;\r\n        }\r\n\r\n        case Handle.RIGHT: {\r\n          x1 += dx;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    const x = Math.min(x0, x1);\r\n    const y = Math.min(y0, y1);\r\n    const w = Math.abs(x1 - x0);\r\n    const h = Math.abs(y1 - y0);\r\n\r\n    const cx = (x0 + x1) / 2;\r\n    const cy = (y0 + y1) / 2;\r\n\r\n    const rx = w / 2;\r\n    const ry = h / 2;\r\n\r\n    return {\r\n      ...ellipse,\r\n      geometry: {\r\n        ...ellipse.geometry,\r\n        cx, cy, rx, ry,\r\n        bounds: {\r\n          minX: x,\r\n          minY: y,\r\n          maxX: x + w,\r\n          maxY: y + h\r\n        }\r\n      }\r\n    };\r\n  }\r\n</script>\r\n\r\n<Editor\r\n  shape={shape}\r\n  transform={transform}\r\n  editor={editor}\r\n  on:grab\r\n  on:change \r\n  on:release\r\n  let:grab={grab}>\r\n\r\n  <ellipse \r\n    class=\"a9s-outer\"\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    cx={geom.cx} cy={geom.cy} rx={geom.rx} ry={geom.ry} />\r\n\r\n  <ellipse \r\n    class=\"a9s-inner a9s-shape-handle\"\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    cx={geom.cx} cy={geom.cy} rx={geom.rx} ry={geom.ry} />\r\n\r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-top\"\r\n    on:pointerdown={grab(Handle.TOP)}\r\n    x={geom.cx - handleSize / 2} y={geom.cy - handleSize / 2 - geom.ry} height={handleSize} width={handleSize} />\r\n\r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-handle-right\"\r\n    on:pointerdown={grab(Handle.RIGHT)}\r\n    x={geom.cx + geom.rx - handleSize / 2} y={geom.cy - handleSize / 2} height={handleSize} width={handleSize} />\r\n  \r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-handle-bottom\"\r\n    on:pointerdown={grab(Handle.BOTTOM)}\r\n    x={geom.cx - handleSize / 2} y={geom.cy + geom.ry - handleSize / 2} height={handleSize} width={handleSize} />\r\n    \r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-handle-left\"\r\n    on:pointerdown={grab(Handle.LEFT)}\r\n    x={geom.cx - geom.rx - handleSize / 2} y={geom.cy - handleSize / 2} height={handleSize} width={handleSize} />\r\n</Editor>\r\n","import type { DrawingStyle } from '@annotorious/core';\r\nimport type { ImageAnnotation } from '../../model';\r\n\r\nexport const computeStyle = (annotation: ImageAnnotation, style?: DrawingStyle | ((a: ImageAnnotation) => DrawingStyle), staticProps?: DrawingStyle) => {\r\n  const computed = typeof style === 'function' ? style(annotation) : style;\r\n\r\n  if (computed) {\r\n    const { fill, fillOpacity } = computed;\r\n\r\n    let css = '';\r\n    let staticOpacity = undefined\r\n    \r\n    if (fill)\r\n      css += `fill:${fill};stroke:${fill};`;\r\n    \r\n    if (staticProps) {\r\n      staticOpacity =  staticProps.fillOpacity\r\n    }\r\n    css += `fill-opacity:${staticOpacity || fillOpacity || '0.25'};`\r\n\r\n    return css;\r\n  }\r\n}","<script type=\"ts\" lang=\"ts\">\r\n  import { boundsFromPoints, type ImageAnnotation } from '../../../model';\r\n  import type { Freehand } from '../../../model';\r\n  import type { Transform } from '../../Transform';\r\n  import type { DrawingStyle } from '@annotorious/core';\r\n  import { Editor, Handle } from '..';\r\n  import { getSmoothPathData, options } from '../../utils/path';\r\n  import { computeStyle } from '../../utils/styling';\r\n  /** Props */\r\n  export let shape: Freehand;\r\n//   export let computedStyle: string = undefined;\r\n  export let annotation: ImageAnnotation;\r\n  export let transform: Transform;\r\n  export let viewportScale: number = 1;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n  let staticProps = {\r\n    fillOpacity: 1\r\n  }\r\n  $: geom = shape.geometry;\r\n\r\n  $: handleSize = 10 / viewportScale;\r\n\r\n  $: computedStyle = computeStyle(annotation, style,staticProps);\r\n\r\n  const editor = (path: Freehand, handle: Handle, delta: [number, number]) => {\r\n    let points: [number, number, number][];\r\n\r\n    if (handle === Handle.SHAPE) {\r\n      points = path.geometry.points.map(([x, y, p]) => [x + delta[0], y + delta[1], p]);\r\n    } \r\n\r\n    const bounds = boundsFromPoints(points.map(point => [point[0],point[1]]));\r\n\r\n    return {\r\n      ...path,\r\n      geometry: { points, bounds }\r\n    }\r\n  }\r\n\r\n  $: pathData = getSmoothPathData(geom.points,options,true)\r\n</script>\r\n\r\n<Editor\r\n  shape={shape}\r\n  transform={transform}\r\n  editor={editor}\r\n  on:change \r\n  on:grab\r\n  on:release\r\n  let:grab={grab}>\r\n\r\n  <path\r\n    class=\"a9s-shape-handle\"\r\n    style={computedStyle}\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    d={pathData} />\r\n</Editor>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import type { Line } from '../../../model';\r\n  import type { Transform } from '../../Transform';\r\n  import { Editor, Handle } from '..';\r\n\r\n  /** Props */\r\n  export let shape: Line;\r\n  export let computedStyle: string = undefined;\r\n  export let transform: Transform;\r\n  export let viewportScale: number = 1;\r\n\r\n  $: geom = shape.geometry;\r\n\r\n  $: handleSize = 10 / viewportScale;\r\n\r\n  const editor = (line: Line, handle: Handle, delta: [number, number]) => {\r\n    const initialBounds = line.geometry.bounds;\r\n\r\n    let x1 = line.geometry.x1\r\n    let x2 = line.geometry.x2\r\n    let y1 = line.geometry.y1\r\n    let y2 = line.geometry.y2\r\n    // let [xmin, ymin] = [initialBounds.minX, initialBounds.minY];\r\n    // let [xmax, ymax] = [initialBounds.maxX, initialBounds.maxY];\r\n\r\n    const [dx, dy] = delta;\r\n\r\n    if (handle === Handle.SHAPE) {\r\n      x1 += dx;\r\n      x2 += dx;\r\n      y1 += dy;\r\n      y2 += dy;\r\n    } else {\r\n      switch (handle) {\r\n        case Handle.LEFT: { \r\n          x1 += dx;\r\n          y1 += dy;\r\n          break;\r\n        }\r\n\r\n        case Handle.RIGHT: {\r\n          x2 += dx;\r\n          y2 += dy;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...line,\r\n      geometry: {\r\n        x1, y1, x2, y2,\r\n        bounds: {\r\n          minX: Math.min(x1,x2),\r\n          minY: Math.min(y1,y2),\r\n          maxX: Math.max(x1,x2),\r\n          maxY: Math.max(y1,y2),\r\n        }\r\n      }\r\n    };\r\n  }\r\n</script>\r\n\r\n<Editor\r\n  shape={shape}\r\n  transform={transform}\r\n  editor={editor}\r\n  on:grab\r\n  on:change \r\n  on:release\r\n  let:grab={grab}>\r\n\r\n  <defs>\r\n    <!-- A marker to be used as an arrowhead -->\r\n    <marker\r\n      id=\"arrow\"\r\n      viewBox={`0 0 10 10`}\r\n      refX = \"0\"\r\n      refY = \"0\"\r\n      markerWidth={`6`}\r\n      markerHeight={`6`}\r\n      orient=\"auto-start-reverse\">\r\n      <path d=\"M 0 0 L 10 5 L 0 10 z\" />\r\n    </marker>\r\n  </defs>\r\n  <line \r\n    class=\"a9s-outer\"\r\n    style={computedStyle ? 'display:none;' : undefined}\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    x1={geom.x1} y1={geom.y1} x2={geom.x2} y2={geom.y2} marker-end=\"url(#arrow)\"/>\r\n\r\n  <line \r\n    class=\"a9s-inner a9s-shape-handle\"\r\n    style={computedStyle}\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    marker-end=\"url(#arrow)\"\r\n    x1={geom.x1} y1={geom.y1} x2={geom.x2} y2={geom.y2} />\r\n\r\n    <circle \r\n        class=\"a9s-corner-handle\"\r\n        on:pointerdown={grab(Handle.LEFT)}\r\n        cx={geom.x1} cy={geom.y1}\r\n        r={handleSize / 3} />\r\n\r\n    <circle \r\n        class=\"a9s-corner-handle\"\r\n        on:pointerdown={grab(Handle.RIGHT)}\r\n        cx={geom.x2} cy={geom.y2} r={handleSize / 3}/>\r\n</Editor>\r\n","import { ShapeType, type Shape } from '../../model';\r\nimport type { SvelteComponent } from 'svelte';\r\nimport { PolygonEditor } from './polygon';\r\nimport { RectangleEditor } from './rectangle';\r\nimport { EllipseEditor } from './ellipse';\r\nimport { FreehandEditor } from './freehand'\r\nimport { LineEditor } from './line';\r\n\r\nconst REGISTERED = new Map<ShapeType, typeof SvelteComponent>([\r\n  [ShapeType.RECTANGLE, RectangleEditor],\r\n  [ShapeType.POLYGON, PolygonEditor],\r\n  [ShapeType.ELLIPSE, EllipseEditor],\r\n  [ShapeType.FREEHAND, FreehandEditor],\r\n  [ShapeType.LINE, LineEditor],\r\n])\r\n\r\nexport const getEditor = (shape: Shape) => REGISTERED.get(shape.type);\r\n\r\nexport const registerEditor = (shapeType: ShapeType, editor: typeof SvelteComponent) =>\r\n  REGISTERED.set(shapeType, editor);\r\n","export type Handle = string;\r\n\r\nexport const Handle = (value: string | number) => `HANDLE-${value}`;\r\n\r\nHandle.SHAPE = 'SHAPE';\r\n\r\nHandle.TOP = 'TOP';\r\n\r\nHandle.RIGHT = 'RIGHT';\r\n\r\nHandle.BOTTOM = 'BOTTOM';\r\n\r\nHandle.LEFT = 'LEFT';\r\n\r\nHandle.TOP_LEFT = 'TOP_LEFT';\r\n\r\nHandle.TOP_RIGHT = 'TOP_RIGHT';\r\n\r\nHandle.BOTTOM_RIGHT = 'BOTTOM_RIGHT';\r\n\r\nHandle.BOTTOM_LEFT = 'BOTTOM_LEFT';\r\n\r\nHandle.START = 'START';\r\n\r\nHandle.END = 'END';","<script type=\"ts\" lang=\"ts\">\r\n  import { createEventDispatcher } from 'svelte';\r\n  import type { Shape } from '../../model';\r\n  import type { Handle } from './Handle';\r\n  import type { Transform } from '../Transform';\r\n\r\n  const dispatch = createEventDispatcher<{ grab: undefined, release: undefined, change: Shape }>();\r\n\r\n  /** Props */\r\n  export let shape: Shape;\r\n  export let editor: (shape: Shape, handle: Handle, delta: [number, number]) => Shape;\r\n  export let transform: Transform;\r\n\r\n  let grabbedHandle: Handle = null;\r\n\r\n  let origin: [number, number];\r\n\r\n  let initialShape: Shape = null;\r\n\r\n  const onGrab = (handle: Handle) => (evt: PointerEvent) => {\r\n    grabbedHandle = handle;\r\n    origin = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n    initialShape = shape;\r\n\r\n    const target = evt.target as Element;\r\n    target.setPointerCapture(evt.pointerId);\r\n\r\n    dispatch('grab');\r\n  }\r\n\r\n  const onPointerMove = (evt: PointerEvent) => {\r\n    if (grabbedHandle) {\r\n      const [x, y] = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n\r\n      const delta: [number, number] = [x - origin[0], y - origin[1]];\r\n\r\n      shape = editor(initialShape, grabbedHandle, delta);\r\n      \r\n      dispatch('change', shape);\r\n    }\r\n  }\r\n\r\n  const onRelease = (evt: PointerEvent) => {    \r\n    const target = evt.target as Element;\r\n    target.releasePointerCapture(evt.pointerId);\r\n\r\n    grabbedHandle = null;\r\n\r\n    initialShape = shape;\r\n    \r\n    dispatch('release');\r\n  }\r\n</script>\r\n\r\n<g\r\n  class=\"a9s-annotation selected\"\r\n  on:pointerup={onRelease}\r\n  on:pointermove={onPointerMove}>\r\n\r\n  <slot grab={onGrab} />\r\n</g>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import type { DrawingStyle } from '@annotorious/core';\r\n  import { createEventDispatcher, onMount, type SvelteComponent } from 'svelte';\r\n  import type { ImageAnnotation, Shape } from '../../model';\r\n  import { computeStyle } from '../utils/styling';\r\n  import type { Transform } from '../Transform';\r\n\r\n  const dispatch = createEventDispatcher<{ grab: undefined, release: undefined, change: Shape }>();\r\n\r\n  /** Props */\r\n  export let annotation: ImageAnnotation;\r\n  export let editor: typeof SvelteComponent;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n  export let target: SVGGElement;\r\n  export let transform: Transform;\r\n  export let viewportScale: number;\r\n\r\n  let editorComponent: SvelteComponent;\r\n\r\n  $: computedStyle = computeStyle(annotation, style);\r\n\r\n  $: if (annotation) editorComponent?.$set({ shape: annotation.target.selector });\r\n  $: if (editorComponent) editorComponent.$set({ transform });\r\n  $: if (editorComponent) editorComponent.$set({ viewportScale });\r\n\r\n  onMount(() => {\r\n    editorComponent = new editor({\r\n      target,\r\n      props: { shape: annotation.target.selector, computedStyle, transform, viewportScale }\r\n    });\r\n\r\n    editorComponent.$on('change', event => {\r\n      editorComponent.$$set({ shape: event.detail });\r\n      dispatch('change', event.detail);\r\n    });\r\n\r\n    editorComponent.$on('grab', event => dispatch('grab', event.detail));\r\n    editorComponent.$on('release', event => dispatch('release', event.detail));\r\n\r\n    return () => {\r\n      editorComponent.$destroy();\r\n    }\r\n  });\r\n</script>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import { createEventDispatcher, onMount, type SvelteComponent } from 'svelte';\r\n  import type { Transform } from '../Transform';\r\n  import type { Shape } from 'src/model';\r\n  import type { DrawingMode } from 'src/AnnotoriousOpts';\r\n\r\n  const dispatch = createEventDispatcher<{ create: Shape }>();\r\n\r\n  /** Props **/\r\n  export let drawingMode: DrawingMode;\r\n  export let target: SVGGElement;\r\n  export let tool: typeof SvelteComponent;\r\n  export let transform: Transform;\r\n  export let viewportScale: number;\r\n\r\n  let toolComponent: SvelteComponent;\r\n\r\n  $: if (toolComponent) toolComponent.$set({ transform });\r\n  $: if (toolComponent) toolComponent.$set({ viewportScale });\r\n\r\n  onMount(() => {\r\n    const svg = target.closest('svg');\r\n\r\n    const cleanup: Function[] = [];\r\n\r\n    const addEventListener = (name: string, handler: (evt: PointerEvent) => void, capture?: boolean) => {\r\n      svg.addEventListener(name, handler, capture);\r\n      cleanup.push(() => svg.removeEventListener(name, handler, capture));\r\n    }\r\n\r\n    toolComponent = new tool({\r\n      target,\r\n      props: { \r\n        addEventListener,\r\n        drawingMode,\r\n        transform, \r\n        viewportScale\r\n      }\r\n    });\r\n\r\n    toolComponent.$on('create', \r\n      event => dispatch('create', event.detail));\r\n\r\n    return () => {\r\n      cleanup.forEach(fn => fn());\r\n      toolComponent.$destroy();\r\n    }\r\n  });\r\n</script>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import { createEventDispatcher, onMount } from 'svelte';\r\n  import type { DrawingMode } from '../../../AnnotoriousOpts';\r\n  import { ShapeType, type Rectangle } from '../../../model';\r\n  import type { Transform } from '../..';\r\n\r\n  const dispatch = createEventDispatcher<{ create: Rectangle }>();\r\n  \r\n  /** Props **/\r\n  export let addEventListener: (type: string, fn: EventListener, capture?: boolean) => void;\r\n  export let drawingMode: DrawingMode;\r\n  export let transform: Transform;\r\n\r\n  let lastPointerDown: number;\r\n\r\n  let origin: [x: number, y: number]; \r\n\r\n  let anchor: [number, number];\r\n\r\n  let x: number, y: number, w: number, h: number;\r\n\r\n  const onPointerDown = (evt: PointerEvent) => {\r\n    lastPointerDown = performance.now();\r\n\r\n    if (drawingMode === 'drag') {\r\n      origin = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n      anchor = origin;\r\n\r\n      x = origin[0];\r\n      y = origin[1];\r\n      w = 1;\r\n      h = 1;\r\n    }\r\n  }\r\n\r\n  const onPointerMove = (evt: PointerEvent) => {\r\n    if (origin) {\r\n      anchor = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n\r\n      x = Math.min(anchor[0], origin[0]);\r\n      y = Math.min(anchor[1], origin[1]);\r\n      w = Math.abs(anchor[0] - origin[0]);\r\n      h = Math.abs(anchor[1] - origin[1]);\r\n    }\r\n  }\r\n    \r\n  const onPointerUp = (evt: PointerEvent) => {\r\n    const timeDifference = performance.now() - lastPointerDown;\r\n\r\n    if (drawingMode === 'click') {\r\n      // Not a single click - ignore\r\n      if (timeDifference > 300)\r\n        return;\r\n\r\n      evt.stopPropagation();\r\n\r\n      if (origin) {\r\n        stopDrawing();\r\n      } else {\r\n        // Start drawing\r\n        origin = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n        anchor = origin;\r\n\r\n        x = origin[0];\r\n        y = origin[1];\r\n        w = 1;\r\n        h = 1;\r\n      }\r\n    } else if (origin) {\r\n      if (timeDifference > 300 || w * h > 100) {\r\n        evt.stopPropagation();\r\n        stopDrawing();\r\n      } else {\r\n        origin = null;\r\n        anchor = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  const stopDrawing = () => {\r\n    // Require 4x4 pixels minimum\r\n    if (w * h > 15) {\r\n      const shape: Rectangle = {\r\n        type: ShapeType.RECTANGLE, \r\n        geometry: {\r\n          bounds: {\r\n            minX: x, \r\n            minY: y,\r\n            maxX: x + w,\r\n            maxY: y + h\r\n          },\r\n          x, y, w, h\r\n        }\r\n      }\r\n\r\n      dispatch('create', shape);\r\n    }\r\n    \r\n    origin = null;\r\n    anchor = null;\r\n  }\r\n\r\n  onMount(() => {\r\n    addEventListener('pointerdown', onPointerDown);\r\n    addEventListener('pointermove', onPointerMove);\r\n    addEventListener('pointerup', onPointerUp, true);\r\n  });\r\n</script>\r\n\r\n<g class=\"a9s-annotation a9s-rubberband\">\r\n  {#if origin}\r\n    <rect\r\n      class=\"a9s-outer\"\r\n      x={x} \r\n      y={y} \r\n      width={w} \r\n      height={h} />\r\n\r\n    <rect\r\n      class=\"a9s-inner\"\r\n      x={x} \r\n      y={y} \r\n      width={w} \r\n      height={h} />\r\n  {/if}\r\n</g>\r\n","export const distance = (a: [number, number], b: [number, number]): number => {\r\n  const dx = Math.abs(b[0] - a[0]);\r\n  const dy = Math.abs(b[1] - a[1]);\r\n\r\n  return Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\r\n}","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","import { writable } from 'svelte/store';\r\n\r\nconst setSize = (image: HTMLImageElement | HTMLCanvasElement, svg: SVGElement) => {\r\n  const { naturalWidth, naturalHeight } = (image as HTMLImageElement);\r\n\r\n  if (!naturalWidth && !naturalHeight) {\r\n    // Might be because a) the image has not loaded yet, or b) because it's not \r\n    // an image element (but maybe a CANVAS etc.)! Allow for both possibilities.\r\n    const { width, height } = image;\r\n\r\n    svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\r\n\r\n    image.addEventListener('load', event => {\r\n      const img = event.target as HTMLImageElement;\r\n      svg.setAttribute('viewBox', `0 0 ${img.naturalWidth} ${img.naturalHeight}`);\r\n    });\r\n  } else {\r\n    svg.setAttribute('viewBox', `0 0 ${naturalWidth} ${naturalHeight}`);\r\n  }\r\n\r\n}\r\n\r\nexport const enableResponsive = (image: HTMLImageElement | HTMLCanvasElement, svg: SVGSVGElement) => {\r\n\r\n  setSize(image, svg);\r\n\r\n  const { subscribe, set } = writable(1);\r\n\r\n  let resizeObserver: ResizeObserver;\r\n\r\n  if (window.ResizeObserver) {\r\n    resizeObserver = new ResizeObserver(() => {\r\n      const svgBounds = svg.getBoundingClientRect();\r\n\r\n      const { width, height } = svg.viewBox.baseVal;\r\n  \r\n      const scale = Math.max(\r\n        svgBounds.width / width,\r\n        svgBounds.height / height\r\n      );\r\n  \r\n      set(scale);\r\n    });\r\n  \r\n    resizeObserver.observe(svg.parentElement);\r\n  }\r\n\r\n  const destroy = () => {\r\n    if (resizeObserver)\r\n      resizeObserver.disconnect();\r\n  }\r\n\r\n  return { destroy, subscribe };\r\n\r\n}\r\n\r\n","export const isTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;","<script type=\"ts\" lang=\"ts\">\r\n  import { onMount, createEventDispatcher } from 'svelte';\r\n  import type { DrawingMode } from '../../../AnnotoriousOpts';\r\n  import { boundsFromPoints, computeArea, ShapeType, type Polygon } from '../../../model';\r\n  import { distance } from '../../utils';\r\n  import type { Transform } from '../..';\r\n\r\n  const dispatch = createEventDispatcher<{ create: Polygon }>();\r\n\r\n  /** Props **/\r\n  export let addEventListener: (type: string, fn: EventListener, capture?: boolean) => void;\r\n  export let drawingMode: DrawingMode;\r\n  export let transform: Transform;\r\n  export let viewportScale = 1;\r\n\r\n  let lastPointerDown: { timeStamp: number, offsetX: number, offsetY: number };\r\n\r\n  let points: [number, number][] = [];\r\n  \r\n  let cursor: [number, number] = null;\r\n\r\n  let isClosable: boolean = false;\r\n\r\n  const CLOSE_DISTANCE = 20;\r\n\r\n  $: handleSize = 10 / viewportScale;\r\n\r\n  const onPointerDown = (evt: PointerEvent) => {\r\n    // Note that the event itself is ephemeral!\r\n    const { timeStamp, offsetX, offsetY } = evt;\r\n    lastPointerDown = { timeStamp, offsetX, offsetY };\r\n\r\n    if (drawingMode === 'drag') {\r\n      if (points.length === 0) {\r\n        const point = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n        points.push(point);\r\n\r\n        cursor = point;\r\n      }\r\n    }\r\n  }\r\n\r\n  const onPointerMove = (evt: PointerEvent) => {\r\n    if (points.length > 0) {\r\n      cursor = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n\r\n      if (points.length >  2) {\r\n        const d = distance(cursor, points[0]) * viewportScale;\r\n        isClosable = d < CLOSE_DISTANCE;\r\n      }\r\n    }\r\n  }\r\n\r\n  const onPointerUp = (evt: PointerEvent) => {\r\n    if (drawingMode === 'click') {\r\n      const timeDifference = evt.timeStamp - lastPointerDown.timeStamp;\r\n\r\n      const d = distance(\r\n        [lastPointerDown.offsetX, lastPointerDown.offsetY], \r\n        [evt.offsetX, evt.offsetY]);\r\n\r\n      if (timeDifference > 300 || d > 15) // Not a single click - ignore\r\n        return;\r\n\r\n      if (isClosable) {\r\n        stopDrawing();\r\n      } else if (points.length === 0) {\r\n        // Start drawing\r\n        const point = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n        points.push(point);\r\n\r\n        cursor = point;\r\n      } else {\r\n        points.push(cursor);\r\n      }\r\n    } else {\r\n      // Require minimum drag of 4px\r\n      if (points.length === 1) {\r\n        const dist = distance(points[0], cursor);\r\n\r\n        if (dist <= 4) {\r\n          // Cancel\r\n          points = [];\r\n          cursor = null;\r\n\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Stop click event from propagating if we're drawing\r\n      evt.stopImmediatePropagation();\r\n\r\n      if (isClosable) {\r\n        stopDrawing();\r\n      } else {\r\n        points.push(cursor);\r\n      }\r\n    }\r\n  }\r\n\r\n  const onDblClick = () => {\r\n    // Require min 3 points (incl. cursor) and minimum\r\n    // polygon area\r\n    const p = [...points, cursor];\r\n\r\n    const shape: Polygon = {\r\n      type: ShapeType.POLYGON, \r\n      geometry: {\r\n        bounds: boundsFromPoints(p),\r\n        points: p\r\n      }\r\n    }\r\n\r\n    const area = computeArea(shape);\r\n    if (area > 4) {\r\n      points = [];\r\n      cursor = null;\r\n    \r\n      dispatch('create', shape);\r\n    }\r\n  }\r\n\r\n  const stopDrawing = () => {\r\n    const shape: Polygon = {\r\n      type: ShapeType.POLYGON, \r\n      geometry: {\r\n        bounds: boundsFromPoints(points),\r\n        points: [...points]\r\n      }\r\n    }\r\n\r\n    points = [];\r\n    cursor = null;\r\n  \r\n    dispatch('create', shape);\r\n  }\r\n\r\n  onMount(() => {\r\n    addEventListener('pointerdown', onPointerDown, true);\r\n    addEventListener('pointermove', onPointerMove);\r\n    addEventListener('pointerup', onPointerUp, true);\r\n    addEventListener('dblclick', onDblClick, true);\r\n  });\r\n</script>\r\n\r\n<g class=\"a9s-annotation a9s-rubberband\">\r\n  {#if cursor}\r\n    {@const coords = (isClosable ? points : [...points, cursor]).map(xy => xy.join(',')).join(' ')}\r\n      <polygon \r\n        class=\"a9s-outer\"\r\n        points={coords} />\r\n\r\n      <polygon \r\n        class=\"a9s-inner\"\r\n        points={coords} />\r\n        \r\n    {#if isClosable}\r\n      <rect \r\n        class=\"a9s-corner-handle\"\r\n        x={points[0][0] - handleSize / 2} \r\n        y={points[0][1] - handleSize / 2} \r\n        height={handleSize} \r\n        width={handleSize} />\r\n    {/if}\r\n  {/if}\r\n</g>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import { createEventDispatcher, onMount } from 'svelte';\r\n  import type { DrawingMode } from '../../../AnnotoriousOpts';\r\n  import { ShapeType, type Ellipse } from '../../../model';\r\n  import type { Transform } from '../..';\r\n\r\n  const dispatch = createEventDispatcher<{ create: Ellipse }>();\r\n  \r\n  /** Props **/\r\n  export let addEventListener: (type: string, fn: EventListener, capture?: boolean) => void;\r\n  export let drawingMode: DrawingMode\r\n  export let transform: Transform;\r\n  \r\n  let container: SVGGElement;\r\n\r\n  let origin: [x: number, y: number]; \r\n\r\n  let anchor: [number, number];\r\n\r\n  let x: number, y: number, w: number, h: number;\r\n\r\n  let isShiftPressed = false;\r\n\r\n  let isCtrlPressed = false;\r\n\r\n  let lastPointerDown: number;\r\n\r\n  let lastMoveEvent: PointerEvent;\r\n\r\n  const onPointerDown = (evt: PointerEvent) => {\r\n    lastPointerDown = performance.now();\r\n\r\n    if (drawingMode === 'drag') {\r\n      origin = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n      anchor = origin;\r\n\r\n      x = origin[0];\r\n      y = origin[1];\r\n      w = 1;\r\n      h = 1;\r\n    }\r\n  }\r\n\r\n  const updateShape = (maybeEvent?: PointerEvent) => {\r\n    const evt = maybeEvent || lastMoveEvent;\r\n\r\n    if (origin) {\r\n      anchor = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n\r\n      if (isCtrlPressed) {\r\n        const mw = 2 * Math.abs(anchor[0] - origin[0]);\r\n        const mh = 2 * Math.abs(anchor[1] - origin[1]);\r\n\r\n        w = isShiftPressed ? Math.max(mw, mh) : mw;\r\n        h = isShiftPressed ? w : mh;\r\n\r\n        x = Math.min(anchor[0], origin[0] - w / 2);\r\n        y = Math.min(anchor[1], origin[1] - h / 2);\r\n      } else {\r\n        const mw = Math.abs(anchor[0] - origin[0]);\r\n        const mh = Math.abs(anchor[1] - origin[1]);\r\n\r\n        w = isShiftPressed ? Math.max(mw, mh) : mw;\r\n        h = isShiftPressed ? w : mh;\r\n\r\n        x = Math.min(anchor[0], origin[0]);\r\n        y = Math.min(anchor[1], origin[1]);\r\n      }\r\n    }\r\n\r\n    if (maybeEvent)\r\n      lastMoveEvent = maybeEvent;\r\n  }\r\n    \r\n  const onPointerUp = (evt: PointerEvent) => {\r\n    if (drawingMode === 'click')\r\n      evt.stopImmediatePropagation();\r\n\r\n    const timeDifference = performance.now() - lastPointerDown;\r\n\r\n    if (drawingMode === 'click') {\r\n      // Not a single click - ignore\r\n      if (timeDifference > 300)\r\n        return;\r\n\r\n      evt.stopPropagation();\r\n\r\n      if (origin) {\r\n        stopDrawing();\r\n      } else {\r\n        // Start drawing\r\n        origin = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n        anchor = origin;\r\n\r\n        x = origin[0];\r\n        y = origin[1];\r\n        w = 1;\r\n        h = 1;\r\n      }\r\n    } else if (origin) {\r\n      if (timeDifference > 300 || w * h > 100) {\r\n        evt.stopPropagation();\r\n        stopDrawing();\r\n      } else {\r\n        origin = null;\r\n        anchor = null;\r\n\r\n        lastMoveEvent = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  const stopDrawing = () => {\r\n    // Require 4x4 pixels minimum\r\n    if (w * h > 15) {\r\n      const shape: Ellipse = {\r\n        type: ShapeType.ELLIPSE, \r\n        geometry: {\r\n          bounds: {\r\n            minX: x, \r\n            minY: y,\r\n            maxX: x + w,\r\n            maxY: y + h\r\n          },\r\n          cx: x + w / 2,\r\n          cy: y + h / 2,\r\n          rx: w / 2,\r\n          ry: h / 2\r\n        }\r\n      }\r\n\r\n      dispatch('create', shape);\r\n    }\r\n\r\n    origin = null;\r\n    anchor = null;\r\n\r\n    lastMoveEvent = undefined;\r\n  }\r\n\r\n  const onKeyDown = (evt: KeyboardEvent) => {\r\n    if (evt.key === 'Shift') {\r\n      isShiftPressed = true;  \r\n      updateShape();  \r\n    }\r\n\r\n    if (evt.key === 'Control') {\r\n      isCtrlPressed = true;\r\n      updateShape();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (evt: KeyboardEvent) => {\r\n    if (evt.key === 'Shift') {\r\n      isShiftPressed = false;\r\n      updateShape();  \r\n    }\r\n\r\n    if (evt.key === 'Control') {\r\n      isCtrlPressed = false;\r\n      updateShape();  \r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    document.addEventListener('keyup', onKeyUp);\r\n    document.addEventListener('keydown', onKeyDown);\r\n\r\n    addEventListener('pointerdown', onPointerDown);\r\n    addEventListener('pointermove', updateShape);\r\n    addEventListener('pointerup', onPointerUp);\r\n\r\n    return () => {\r\n      document.removeEventListener('keyup', onKeyUp);\r\n      document.removeEventListener('keydown', onKeyDown);\r\n    }\r\n  });\r\n</script>\r\n\r\n<g \r\n  bind:this={container}\r\n  class=\"a9s-annotation a9s-rubberband\">\r\n  \r\n  {#if origin}\r\n    <ellipse \r\n      class=\"a9s-outer\"\r\n      cx={x + w / 2} \r\n      cy={y + h / 2} \r\n      rx={w / 2} \r\n      ry={h / 2} />\r\n\r\n    <ellipse \r\n      class=\"a9s-inner\"\r\n      cx={x + w / 2} \r\n      cy={y + h / 2} \r\n      rx={w / 2} \r\n      ry={h / 2} />\r\n  {/if}\r\n</g>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import { onMount, createEventDispatcher } from 'svelte';\r\n  import type { DrawingMode } from '../../../AnnotoriousOpts';\r\n  import type { DrawingStyle } from '@annotorious/core';\r\n  import { boundsFromPoints, computeArea, ShapeType, type Freehand, type ImageAnnotation } from '../../../model';\r\n  import { distance } from '../../utils';\r\n  import { getSmoothPathData, options } from '../../utils/path';\r\n  import { computeStyle } from '../../utils/styling'; \r\n  import type { Transform } from '../..';\r\n\r\n  const dispatch = createEventDispatcher<{ create: Freehand }>();\r\n\r\n  /** Props **/\r\n  export let addEventListener: (type: string, fn: EventListener, capture?: boolean) => void;\r\n  export let drawingMode: DrawingMode;\r\n  export let annotation: ImageAnnotation;\r\n  export let transform: Transform;\r\n  export let viewportScale = 1;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n  let staticProps = {\r\n    fillOpacity: 1\r\n  }\r\n\r\n  let lastPointerDown: { timeStamp: number, offsetX: number, offsetY: number };\r\n\r\n  let points : [number, number, number][] = [];\r\n  \r\n  let pathData: string = ''\r\n\r\n  let cursor: [number, number] = null;\r\n\r\n  let isDrawing: Boolean = false;\r\n\r\n  $: handleSize = 10 / viewportScale;\r\n\r\n  $: computedStyle = computeStyle(annotation, style,staticProps);\r\n\r\n  const onPointerDown = (evt: PointerEvent) => {\r\n    // Note that the event itself is ephemeral!\r\n    const { timeStamp, offsetX, offsetY } = evt;\r\n    lastPointerDown = { timeStamp, offsetX, offsetY };\r\n\r\n    if (drawingMode === 'drag') {\r\n      \r\n      if (points.length === 0) {\r\n        isDrawing = true\r\n        const point = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n        points.push([...point,evt.pressure]);\r\n        \r\n        cursor = point;\r\n        pathData = getSmoothPathData(points,options)\r\n      }\r\n    }\r\n  }\r\n\r\n  const onPointerMove = (evt: PointerEvent) => {\r\n    if (isDrawing){\r\n      const point = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n      points.push([...point,evt.pressure])\r\n      pathData = getSmoothPathData(points,options,true)\r\n    }\r\n  }\r\n\r\n  const onPointerUp = (evt: PointerEvent) => {\r\n      // Stop click event from propagating if we're drawing\r\n      // evt.stopImmediatePropagation();\r\n      if (isDrawing){\r\n      // pathData = getSmoothPathData(points,options)\r\n        stopDrawing();\r\n      }\r\n  }\r\n\r\n  const stopDrawing = () => {\r\n    const shape: Freehand = {\r\n      type: ShapeType.FREEHAND, \r\n      geometry: {\r\n        bounds: boundsFromPoints(points.map(point => [point[0],point[1]])),\r\n        points: points\r\n      }\r\n    }\r\n    isDrawing = false\r\n    points = [];\r\n    // pathData = null\r\n    cursor = null;\r\n  \r\n    dispatch('create', shape);\r\n  }\r\n\r\n  //  $: pathData = getSmoothPathData(points,options)\r\n  \r\n\r\n  onMount(() => {\r\n    addEventListener('pointerdown', onPointerDown, true);\r\n    addEventListener('pointermove', onPointerMove);\r\n    addEventListener('pointerup', onPointerUp, true);\r\n  });\r\n</script>\r\n\r\n<g class=\"a9s-annotation a9s-rubberband\">\r\n  {#if isDrawing}\r\n    <!-- {#if points.length > 0} -->\r\n        <path \r\n          style={computedStyle}\r\n          d={pathData} />\r\n    <!-- {/if} -->\r\n  {/if}\r\n</g>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import { createEventDispatcher, onMount } from 'svelte';\r\n  import type { DrawingMode } from '../../../AnnotoriousOpts';\r\n  import { ShapeType, type Line } from '../../../model';\r\n  import type { Transform } from '../..';\r\n\r\n  const dispatch = createEventDispatcher<{ create: Line }>();\r\n  \r\n  /** Props **/\r\n  export let addEventListener: (type: string, fn: EventListener, capture?: boolean) => void;\r\n  export let drawingMode: DrawingMode;\r\n  export let transform: Transform;\r\n\r\n  let lastPointerDown: number;\r\n\r\n  let origin: [x: number, y: number]; \r\n\r\n  let anchor: [number, number];\r\n\r\n  let x1: number, y1: number, x2: number, y2: number;\r\n\r\n  const onPointerDown = (evt: PointerEvent) => {\r\n    lastPointerDown = performance.now();\r\n\r\n    if (drawingMode === 'drag') {\r\n      origin = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n      anchor = origin;\r\n\r\n      x1 = origin[0];\r\n      y1 = origin[1];\r\n      x2 = origin[0] + 1; \r\n      y2 = origin[1] + 1; \r\n    }\r\n  }\r\n\r\n  const onPointerMove = (evt: PointerEvent) => {\r\n    if (origin) {\r\n      anchor = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n\r\n      x2= anchor[0]\r\n      y2 =anchor[1]\r\n    }\r\n  }\r\n    \r\n  const onPointerUp = (evt: PointerEvent) => {\r\n    const timeDifference = performance.now() - lastPointerDown;\r\n\r\n    if (drawingMode === 'click') {\r\n      // Not a single click - ignore\r\n      if (timeDifference > 300)\r\n        return;\r\n\r\n      evt.stopPropagation();\r\n\r\n      if (origin) {\r\n        stopDrawing();\r\n      } else {\r\n        // Start drawing\r\n        origin = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n        anchor = origin;\r\n\r\n        x1 = origin[0];\r\n        y1 = origin[1];\r\n        x2 = origin[0] + 1; \r\n        y2 = origin[1] + 1; \r\n      }\r\n    } else if (origin) {\r\n      if (timeDifference > 300 || Math.sqrt(Math.pow(x2-x1,2) + Math.pow(y2-y1,2)) > 8) {\r\n        evt.stopPropagation();\r\n        stopDrawing();\r\n      } else {\r\n        origin = null;\r\n        anchor = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  const stopDrawing = () => {\r\n    // Require 4x4 pixels minimum\r\n    if (Math.sqrt(Math.pow(x2-x1,2) + Math.pow(y2-y1,2)) > 8) {\r\n      const shape: Line = {\r\n        type: ShapeType.LINE, \r\n        geometry: {\r\n          bounds: {\r\n            minX: Math.min(x1,x2), \r\n            minY: Math.min(y1,y2), \r\n            maxX: Math.max(x1,x2), \r\n            maxY: Math.max(y1,y2), \r\n          },\r\n          x1, y1, x2, y2\r\n        }\r\n      }\r\n\r\n      dispatch('create', shape);\r\n    }\r\n    \r\n    origin = null;\r\n    anchor = null;\r\n  }\r\n\r\n  onMount(() => {\r\n    addEventListener('pointerdown', onPointerDown);\r\n    addEventListener('pointermove', onPointerMove);\r\n    addEventListener('pointerup', onPointerUp, true);\r\n  });\r\n</script>\r\n\r\n<g class=\"a9s-annotation a9s-rubberband\">\r\n   \r\n  {#if origin}\r\n    <line\r\n      class=\"a9s-outer\"\r\n      x1={x1} \r\n      y1={y1} \r\n      x2={x2} \r\n      y2={y2}\r\n      />\r\n\r\n    <line\r\n      class=\"a9s-inner\"\r\n      x1={x1} \r\n      y1={y1} \r\n      x2={x2} \r\n      y2={y2}\r\n       />\r\n  {/if}\r\n</g>\r\n","import type { SvelteComponent } from 'svelte';\r\nimport { RubberbandRectangle } from './rectangle';\r\nimport { RubberbandPolygon } from './polygon';\r\nimport { RubberbandEllipse } from './ellipse';\r\nimport { RubberbandFreehand } from './freehand'\r\nimport { RubberbandLine } from './line'\r\nimport type { DrawingMode } from '../../AnnotoriousOpts';\r\n\r\nexport type DrawingTool = 'rectangle' | 'polygon' | string;\r\n\r\nexport type DrawingToolOpts = {\r\n\r\n  drawingMode?: DrawingMode;\r\n\r\n  [key: string]: string;\r\n\r\n}\r\n\r\nconst REGISTERED = new Map<\r\n  DrawingTool,\r\n  { tool: typeof SvelteComponent; opts?: DrawingToolOpts }\r\n>([\r\n  ['rectangle', { tool: RubberbandRectangle }],\r\n  ['polygon', { tool: RubberbandPolygon }],\r\n  ['ellipse', { tool: RubberbandEllipse }],\r\n  ['freehand', { tool: RubberbandFreehand }],\r\n  ['line', { tool: RubberbandLine }],\r\n])\r\n\r\nexport const listDrawingTools = () => [...REGISTERED.keys()];\r\n\r\nexport const getTool = (name: string) => REGISTERED.get(name);\r\n  \r\nexport const registerTool = (name: string, tool: typeof SvelteComponent, opts?: DrawingToolOpts) =>\r\n  REGISTERED.set(name, { tool, opts });\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import type { DrawingStyle } from '@annotorious/core';\r\n  import type { Geometry, EllipseGeometry, ImageAnnotation } from '../../model';\r\n  import { computeStyle } from '../utils/styling';\r\n  \r\n  /** Props */\r\n  export let annotation: ImageAnnotation;\r\n  export let geom: Geometry;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n\r\n  $: computedStyle = computeStyle(annotation, style);\r\n\r\n  const { cx, cy, rx, ry } = geom as EllipseGeometry;\r\n</script>\r\n\r\n<g data-id={annotation.id}>\r\n  <ellipse\r\n    class=\"a9s-outer\"\r\n    style={computedStyle ? 'display:none;' : undefined}\r\n    cx={cx} \r\n    cy={cy} \r\n    rx={rx} \r\n    ry={ry} />\r\n\r\n  <ellipse\r\n    class=\"a9s-inner\"\r\n    style={computedStyle}\r\n    cx={cx} \r\n    cy={cy} \r\n    rx={rx} \r\n    ry={ry} />\r\n</g>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import type { DrawingStyle } from '@annotorious/core';\r\n  import type { Geometry, ImageAnnotation, PolygonGeometry } from '../../model';\r\n  import { computeStyle } from '../utils/styling';\r\n  \r\n  /** Props **/\r\n  export let annotation: ImageAnnotation;\r\n  export let geom: Geometry;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n\r\n  $: computedStyle = computeStyle(annotation, style);\r\n\r\n  const { points } = geom as PolygonGeometry;\r\n</script>\r\n\r\n<g data-id={annotation.id}>\r\n  <polygon \r\n    class=\"a9s-outer\"\r\n    style={computedStyle ? 'display:none;' : undefined}\r\n    points={points.map(xy => xy.join(',')).join(' ')} />\r\n\r\n  <polygon \r\n    class=\"a9s-inner\"\r\n    style={computedStyle}\r\n    points={points.map(xy => xy.join(',')).join(' ')} />\r\n</g>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import type { DrawingStyle } from '@annotorious/core';\r\n  import type { Geometry, ImageAnnotation, RectangleGeometry } from '../../model';\r\n  import { computeStyle } from '../utils/styling';\r\n  \r\n  /** Props **/\r\n  export let annotation: ImageAnnotation;\r\n  export let geom: Geometry;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n\r\n  $: computedStyle = computeStyle(annotation, style);\r\n\r\n  $: ({ x, y, w, h } = geom as RectangleGeometry);\r\n</script>\r\n\r\n<g data-id={annotation.id}>\r\n  <rect\r\n    class=\"a9s-outer\"\r\n    style={computedStyle ? 'display:none;' : undefined}\r\n    x={x} \r\n    y={y} \r\n    width={w} \r\n    height={h} />\r\n\r\n  <rect\r\n    class=\"a9s-inner\"\r\n    style={computedStyle}\r\n    x={x} \r\n    y={y} \r\n    width={w} \r\n    height={h} />\r\n</g>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import type { DrawingStyle } from '@annotorious/core';\r\n  import type { Geometry, ImageAnnotation, FreehandGeometry } from '../../model';\r\n  import { computeStyle } from '../utils/styling';\r\n  import { getSmoothPathData, options } from '../utils/path';\r\n  \r\n  /** Props **/\r\n  export let annotation: ImageAnnotation;\r\n  export let geom: Geometry;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n\r\n  let staticProps = {\r\n    fillOpacity: 1\r\n  }\r\n  $: computedStyle = computeStyle(annotation, style,staticProps);\r\n\r\n  const { points } = geom as FreehandGeometry;\r\n  $: pathData = getSmoothPathData(points,options,true)\r\n  \r\n</script>\r\n\r\n<g data-id={annotation.id}>\r\n  <path \r\n    style={computedStyle}\r\n    d={pathData} />\r\n</g>\r\n","<script type=\"ts\" lang=\"ts\">\r\n  import type { DrawingStyle } from '@annotorious/core';\r\n  import type { Geometry, ImageAnnotation, LineGeometry } from '../../model';\r\n  import { computeStyle } from '../utils/styling';\r\n  \r\n  /** Props **/\r\n  export let annotation: ImageAnnotation;\r\n  export let geom: Geometry;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n\r\n  $: computedStyle = computeStyle(annotation, style);\r\n\r\n  $: ({ x1, y1, x2, y2 } = geom as LineGeometry);\r\n</script>\r\n\r\n<g data-id={annotation.id}>\r\n    <defs>\r\n    <!-- A marker to be used as an arrowhead -->\r\n    <marker\r\n      class=\"arrow\"\r\n      viewBox={`0 0 10 10`}\r\n      refX = \"6\"\r\n      refY = \"6\"\r\n      markerWidth={`6`}\r\n      markerHeight={`6`}\r\n      orient=\"auto-start-reverse\">\r\n      <path d=\"M 0 0 L 10 5 L 0 10 z\" />\r\n    </marker>\r\n  </defs>\r\n  <line\r\n    class=\"a9s-outer\"\r\n    style={computedStyle ? 'display:none;' : undefined}\r\n    x1={x1} \r\n    y1={y1} \r\n    x2={x2} \r\n    y2={y2} \r\n    marker-end=\"url(.arrow)\"/>\r\n\r\n  <line\r\n    class=\"a9s-inner\"\r\n    style={computedStyle}\r\n    x1={x1} \r\n    y1={y1} \r\n    x2={x2} \r\n    y2={y2}\r\n    marker-end=\"url(.arrow)\" />\r\n</g>\r\n","export interface Transform { \r\n\r\n  elementToImage: (offsetX: number, offsetY: number) => [ number, number ] \r\n\r\n}\r\n\r\nexport const IdentityTransform: Transform = {\r\n\r\n  elementToImage:  (offsetX: number, offsetY: number) => ([ offsetX, offsetY ])\r\n\r\n}\r\n\r\nexport const createSVGTransform = (svg: SVGSVGElement): Transform => ({\r\n\r\n  elementToImage: (offsetX: number, offsetY: number) => {\r\n    const bbox = svg.getBoundingClientRect();\r\n\r\n    const pt = svg.createSVGPoint();\r\n    pt.x = offsetX + bbox.x;\r\n    pt.y = offsetY + bbox.y;\r\n  \r\n    const { x, y } = pt.matrixTransform(svg.getScreenCTM().inverse());\r\n    return [x, y];\r\n  }\r\n\r\n});","import { createEventDispatcher } from 'svelte';\r\nimport type { SvelteImageAnnotationStore } from '../state';\r\nimport type { ImageAnnotation } from '../model';\r\nimport { isTouch } from './utils';\r\n\r\nexport interface SVGAnnotationLayerPointerEvent {\r\n    \r\n  originalEvent: PointerEvent;\r\n  \r\n  annotation?: ImageAnnotation;\r\n\r\n}\r\n\r\n// Maximum amount of ms between pointer down and up to make it a click\r\nconst MAX_CLICK_DURATION = 250;\r\n\r\nexport const addEventListeners = (svg: SVGSVGElement, store: SvelteImageAnnotationStore) => {\r\n  const dispatch = createEventDispatcher<{ click: SVGAnnotationLayerPointerEvent}>();\r\n\r\n  let lastPointerDown: number;\r\n\r\n  const onPointerDown = () =>\r\n    lastPointerDown = performance.now();\r\n\r\n  const onPointerUp = (evt: PointerEvent) => {\r\n    const duration = performance.now() - lastPointerDown;\r\n\r\n    if (duration < MAX_CLICK_DURATION) {\r\n      const { x, y } = getSVGPoint(evt, svg);\r\n\r\n      const annotation = store.getAt(x, y);\r\n\r\n      if (annotation)\r\n        dispatch('click', { originalEvent: evt, annotation });\r\n      else\r\n        dispatch('click', { originalEvent: evt });\r\n    }\r\n  }\r\n\r\n  return { onPointerDown, onPointerUp };\r\n}\r\n\r\nconst getSVGPoint = (evt: PointerEvent, svg: SVGSVGElement) => {\r\n  const pt = svg.createSVGPoint();\r\n  const bbox = svg.getBoundingClientRect();\r\n\r\n  const x = evt.clientX - bbox.x;\r\n  const y = evt.clientY - bbox.y;\r\n\r\n  const { left, top } = svg.getBoundingClientRect();\r\n  pt.x = x + left;\r\n  pt.y = y + top;\r\n\r\n  return pt.matrixTransform(svg.getScreenCTM().inverse());\r\n}","<script type=\"ts\" lang=\"ts\">\r\n  import { onMount, type SvelteComponent } from 'svelte';\r\n  import { v4 as uuidv4 } from 'uuid';\r\n  import type { DrawingStyle, StoreChangeEvent, User } from '@annotorious/core';\r\n  import { ShapeType } from '../model';\r\n  import type { ImageAnnotation, Shape} from '../model';\r\n  import { getEditor, EditorMount } from './editors';\r\n  import { Ellipse, Polygon, Rectangle,Freehand,Line} from './shapes';\r\n  import { getTool, listDrawingTools, ToolMount } from './tools';\r\n  import { enableResponsive } from './utils';\r\n  import { createSVGTransform } from './Transform';\r\n  import { addEventListeners } from './SVGAnnotationLayerPointerEvent';\r\n  import type { SvelteImageAnnotatorState } from 'src/state';\r\n  import type { DrawingMode } from 'src/AnnotoriousOpts';\r\n\r\n  /** Props **/\r\n  export let drawingEnabled: boolean;\r\n  export let image: HTMLImageElement | HTMLCanvasElement;\r\n  export let preferredDrawingMode: DrawingMode;\r\n  export let state: SvelteImageAnnotatorState;\r\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\r\n  export let toolName: string = listDrawingTools().length > 0 ? listDrawingTools()[0] : undefined;\r\n  export let user: User;\r\n\r\n  $: ({ tool, opts } = getTool(toolName));\r\n\r\n  $: drawingMode = opts?.drawingMode || preferredDrawingMode;\r\n\r\n  /** Drawing tool layer **/\r\n  let drawingEl: SVGGElement;\r\n\r\n  /** Responsive scaling **/\r\n  let svgEl: SVGSVGElement;\r\n    \r\n  let scale: ReturnType<typeof enableResponsive>;\r\n\r\n  onMount(() => scale = enableResponsive(image, svgEl));\r\n\r\n  $: transform = createSVGTransform(svgEl);\r\n\r\n  /** Selection tracking */\r\n  const { selection, store } = state;\r\n\r\n  $: ({ onPointerDown, onPointerUp } = addEventListeners(svgEl, store));\r\n\r\n  let storeObserver = null;\r\n\r\n  let editableAnnotations: ImageAnnotation[] = null;\r\n\r\n  $: isEditable = (a: ImageAnnotation) => $selection.selected.find(s => s.id === a.id && s.editable);\r\n\r\n  $: trackSelection($selection.selected);\r\n\r\n  const trackSelection = (selected: { id: string, editable?: boolean }[]) => {\r\n    store.unobserve(storeObserver);\r\n\r\n    // Track only editable annotations\r\n    const editableIds = \r\n      selected.filter(({ editable }) => editable).map(({ id }) => id);\r\n\r\n    if (editableIds.length > 0) {\r\n      // Resolve selected IDs from the store\r\n      editableAnnotations = editableIds.map(id => store.getAnnotation(id));\r\n\r\n      // Track updates on the editable annotations\r\n      storeObserver = (event: StoreChangeEvent<ImageAnnotation>) => {\r\n        const { updated } = event.changes;\r\n        editableAnnotations = updated.map(change => change.newValue);\r\n      }   \r\n      \r\n      store.observe(storeObserver, { annotations: editableIds });\r\n    } else {\r\n      editableAnnotations = null;\r\n    }\r\n  }\r\n\r\n  const onSelectionCreated = <T extends Shape>(evt: CustomEvent<T>) => {\r\n    const id = uuidv4();\r\n\r\n    const annotation: ImageAnnotation = {\r\n      id,\r\n      bodies: [],\r\n      target: {\r\n        annotation: id,\r\n        selector: evt.detail,\r\n        creator: user,\r\n        created: new Date()\r\n      }\r\n    };\r\n\r\n    store.addAnnotation(annotation);\r\n\r\n    selection.setSelected(annotation.id);\r\n  }\r\n\r\n  const onChangeSelected = (annotation: ImageAnnotation) => (event: CustomEvent<Shape>) => {  \r\n    const { target } = annotation;\r\n\r\n    // We don't consider a shape edit an 'update' if it happens within 10mins\r\n    const GRACE_PERIOD = 10 * 60 * 1000;\r\n\r\n    const isUpdate = \r\n      target.creator?.id !== user.id ||\r\n      !target.created ||\r\n      new Date().getTime() - target.created.getTime() > GRACE_PERIOD;\r\n\r\n    store.updateTarget({\r\n      ...target,\r\n      selector: event.detail,\r\n      created: isUpdate ? target.created : new Date(),\r\n      updated: isUpdate ? new Date() : null,\r\n      updatedBy: isUpdate ? user : null\r\n    });\r\n  }\r\n</script>\r\n\r\n<svg\r\n  bind:this={svgEl}\r\n  class=\"a9s-annotationlayer\"\r\n  class:drawing={tool}\r\n  on:pointerup={onPointerUp}\r\n  on:pointerdown={onPointerDown}>\r\n  \r\n  <g>\r\n    {#each $store as annotation}\r\n      {#if !isEditable(annotation)}\r\n        {@const selector = annotation.target.selector}\r\n        {#key annotation.id}\r\n          {#if (selector.type === ShapeType.ELLIPSE)}\r\n            <Ellipse annotation={annotation} geom={selector.geometry} style={style} />\r\n          {:else if (selector.type === ShapeType.RECTANGLE)}\r\n            <Rectangle annotation={annotation} geom={selector.geometry} style={style} />\r\n          {:else if (selector.type === ShapeType.POLYGON)}\r\n            <Polygon annotation={annotation} geom={selector.geometry} style={style} />\r\n          {:else if (selector.type === ShapeType.FREEHAND)}\r\n            <Freehand annotation={annotation} geom={selector.geometry} style={style} />\r\n          {:else if (selector.type === ShapeType.LINE)}\r\n            <Line annotation={annotation} geom={selector.geometry} style={style} />\r\n          {/if}\r\n        {/key}\r\n      {/if}\r\n    {/each}\r\n  </g>\r\n\r\n  <g \r\n    bind:this={drawingEl}\r\n    class=\"drawing\" >\r\n    {#if drawingEl}\r\n      {#if editableAnnotations}\r\n        {#each editableAnnotations as editable}\r\n          {#key editable.id}\r\n            <EditorMount\r\n              target={drawingEl}\r\n              editor={getEditor(editable.target.selector)}\r\n              annotation={editable}\r\n              style={style}\r\n              transform={transform}\r\n              viewportScale={$scale}\r\n              on:change={onChangeSelected(editable)} />\r\n          {/key}\r\n        {/each}\r\n      {:else if (tool && drawingEnabled)} \r\n        {#key toolName}\r\n          <ToolMount \r\n            target={drawingEl}\r\n            tool={tool}\r\n            drawingMode={drawingMode}\r\n            transform={transform}\r\n            viewportScale={$scale}\r\n            on:create={onSelectionCreated} />\r\n        {/key}\r\n      {/if}\r\n    {/if}\r\n  </g>\r\n</svg>\r\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","import RBush from 'rbush';\r\nimport { ShapeType,computeArea, intersects } from '../model';\r\nimport type { ImageAnnotationTarget } from '../model';\r\n\r\ninterface IndexedTarget {\r\n\r\n  minX: number;\r\n\r\n  minY: number;\r\n\r\n  maxX: number;\r\n\r\n  maxY: number;\r\n\r\n  target: ImageAnnotationTarget;\r\n\r\n}\r\n\r\nexport const createSpatialTree = () => {\r\n\r\n  const tree = new RBush<IndexedTarget>();\r\n\r\n  const index = new Map<string, IndexedTarget>();\r\n\r\n  const all = () => [...index.values()];\r\n\r\n  const clear = () => {\r\n    tree.clear();\r\n    index.clear();\r\n  }\r\n\r\n  const insert = (target: ImageAnnotationTarget) => {\r\n    const { minX, minY, maxX, maxY } = target.selector.geometry.bounds;\r\n\r\n    const t = { minX, minY, maxX, maxY, target };\r\n\r\n    tree.insert(t);\r\n    index.set(target.annotation, t);\r\n  };\r\n\r\n  const remove = (target: ImageAnnotationTarget) => {\r\n    const item = index.get(target.annotation);\r\n    tree.remove(item);\r\n    index.delete(target.annotation);\r\n  };\r\n\r\n  const update = (previous: ImageAnnotationTarget, updated: ImageAnnotationTarget) => {\r\n    remove(previous);\r\n    insert(updated);\r\n  };\r\n\r\n  const set = (targets: ImageAnnotationTarget[], replace: boolean = true) => {\r\n    if (replace) \r\n      clear();\r\n\r\n    const indexedTargets = targets.map(target => {\r\n      const { minX, minY, maxX, maxY } = target.selector.geometry.bounds;\r\n      return { minX, minY, maxX, maxY, target };\r\n    });\r\n\r\n    indexedTargets.forEach(t => index.set(t.target.annotation, t));\r\n    tree.load(indexedTargets);\r\n  };\r\n\r\n  const getAt = (x: number, y: number): ImageAnnotationTarget | null => {\r\n    const idxHits = tree.search({\r\n      minX: x,\r\n      minY: y,\r\n      maxX: x,\r\n      maxY: y\r\n    }).map(item => item.target);\r\n\r\n    // Exact hit test on shape (not needed for rectangles!)\r\n    const exactHits = idxHits.filter(target => {\r\n      return (target.selector.type === ShapeType.RECTANGLE) ||\r\n        intersects(target.selector, x, y);\r\n    });\r\n\r\n    // Get smallest shape\r\n    if (exactHits.length > 0) {\r\n      exactHits.sort((a, b) => computeArea(a.selector) - computeArea(b.selector));\r\n      return exactHits[0];\r\n    }\r\n  };\r\n\r\n  const getIntersecting = (x: number, y: number, width: number, height: number) =>\r\n    tree.search({\r\n      minX: x,\r\n      minY: y,\r\n      maxX: x + width,\r\n      maxY: y + height\r\n    }).map(item => item.target);\r\n  \r\n  const size = () => tree.all().length;\r\n\r\n  return {\r\n    all,\r\n    clear,\r\n    getAt,\r\n    getIntersecting,\r\n    insert,\r\n    remove,\r\n    set,\r\n    size,\r\n    update\r\n  }\r\n\r\n}\r\n","import type { ImageAnnotation, ImageAnnotationTarget } from '../model';\r\nimport type { AnnotoriousOpts } from '../AnnotoriousOpts';\r\nimport { createSpatialTree } from './spatialTree';\r\nimport { \r\n  createViewportState,\r\n  toSvelteStore,\r\n  type AnnotatorState, \r\n  type HoverState,\r\n  type SelectionState\r\n} from '@annotorious/core';\r\nimport { \r\n  createHoverState, \r\n  createSelectionState, \r\n  createStore\r\n} from '@annotorious/core';\r\nimport type { \r\n  ImageAnnotationStore,\r\n  SvelteImageAnnotationStore, \r\n  SvelteImageAnnotatorState\r\n} from './ImageAnnotationStore';\r\n\r\nexport type ImageAnnotatorState<T extends ImageAnnotationStore = ImageAnnotationStore> = AnnotatorState<ImageAnnotation> & {\r\n\r\n  store: T;\r\n\r\n  selection: SelectionState<ImageAnnotation>;\r\n\r\n  hover: HoverState<ImageAnnotation>;\r\n\r\n}\r\n\r\nexport const createImageAnnotatorState = <E extends unknown>(\r\n  opts: AnnotoriousOpts<ImageAnnotation, E>\r\n): ImageAnnotatorState<ImageAnnotationStore> => {\r\n\r\n  const store = createStore<ImageAnnotation>();\r\n\r\n  const tree = createSpatialTree();\r\n\r\n  const selection = createSelectionState(store, opts.pointerSelectAction);\r\n\r\n  const hover = createHoverState(store);\r\n\r\n  const viewport = createViewportState();\r\n\r\n  store.observe(({ changes }) => {\r\n    tree.set(changes.created.map(a => a.target as ImageAnnotationTarget), false);\r\n    \r\n    changes.deleted.forEach(a => tree.remove(a.target as ImageAnnotationTarget));\r\n    \r\n    changes.updated.forEach(({ oldValue, newValue }) =>\r\n      tree.update(oldValue.target, newValue.target));\r\n  });\r\n\r\n  const getAt = (x: number, y: number): ImageAnnotation | undefined => {\r\n    const target = tree.getAt(x, y);\r\n    return target ? store.getAnnotation(target.annotation) : undefined; \r\n  }\r\n\r\n  const getIntersecting = (x: number, y: number, width: number, height: number) =>\r\n    tree.getIntersecting(x, y, width, height).map(target => store.getAnnotation(target.annotation));\r\n\r\n  return {\r\n    store: {\r\n      ...store,\r\n      getAt,\r\n      getIntersecting\r\n    } as ImageAnnotationStore,\r\n    selection,\r\n    hover,\r\n    viewport\r\n  }\r\n\r\n}\r\n\r\nexport const createSvelteImageAnnotatorState = <E extends unknown>(  \r\n  opts: AnnotoriousOpts<ImageAnnotation, E>\r\n): SvelteImageAnnotatorState => {\r\n\r\n  const state = createImageAnnotatorState(opts);\r\n  \r\n  return {\r\n    ...state,\r\n    store: toSvelteStore(state.store) as SvelteImageAnnotationStore\r\n  }\r\n\r\n}\r\n  ","import type { Theme } from '../../AnnotoriousOpts';\r\n\r\nexport const sampleBrightness = (imageOrCanvas: HTMLElement) => {\r\n\r\n  let canvas: HTMLCanvasElement;\r\n\r\n  let context: CanvasRenderingContext2D;\r\n\r\n  if (imageOrCanvas.nodeName === 'CANVAS') {\r\n    canvas = imageOrCanvas as HTMLCanvasElement;\r\n    context = canvas.getContext('2d', { willReadFrequently: true });\r\n  } else {\r\n    const img = imageOrCanvas as HTMLImageElement;\r\n    // Copy image to in-memory canvas for processing\r\n    canvas = document.createElement('canvas');\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n\r\n    context = canvas.getContext('2d', { willReadFrequently: true });\r\n    context.drawImage(img, 0, 0, img.width, img.height);\r\n  }\r\n\r\n  let totalBrightness = 0;\r\n\r\n  // Sample a grid of points spaced 10% width/height apart (= 9 x 9 samples)\r\n  for (let i = 1; i < 10; i++) {\r\n    for (let j = 1; j < 10; j++) {\r\n      const x = Math.round(j * canvas.width / 10);\r\n      const y = Math.round(i * canvas.height / 10);\r\n\r\n      const pixelData = context.getImageData(x, y, 1, 1).data;\r\n      const brightness = (0.299 * pixelData[0] + 0.587 * pixelData[1] + 0.114 * pixelData[2]) / 255;\r\n      totalBrightness += brightness;\r\n    }\r\n  }\r\n\r\n  return totalBrightness / 81;\r\n}\r\n\r\nexport const detectTheme = (imageOrCanvas: HTMLElement) => {\r\n  const brightness = sampleBrightness(imageOrCanvas);\r\n  const theme = brightness > 0.6 ? 'dark' : 'light'\r\n\r\n  console.log(`[Annotorious] Image brightness: ${brightness.toFixed(1)}. Setting ${theme} theme.`);\r\n\r\n  return theme;\r\n}\r\n\r\nexport const setTheme = (imageOrCanvas: HTMLElement, container: HTMLElement, theme: Theme) =>\r\n  container.setAttribute('data-theme', theme === 'auto' ? detectTheme(imageOrCanvas) : theme);","import type { Annotation, DrawingStyle, FormatAdapter, PointerSelectAction } from '@annotorious/core';\r\nimport type { ImageAnnotation } from './model';\r\n\r\nexport interface AnnotoriousOpts<I extends Annotation = ImageAnnotation, E extends unknown = ImageAnnotation> {\r\n\r\n  adapter?: FormatAdapter<I, E>;\r\n\r\n  autoSave?: boolean;\r\n\r\n  drawingEnabled?: boolean;\r\n\r\n  // 'click': starts on single click, user cannot select unless drawingEnabled = false\r\n  // 'drag': starts drawing on drag, single click always selects\r\n  drawingMode?: DrawingMode;\r\n\r\n  pointerSelectAction?: PointerSelectAction | ((a: I) => PointerSelectAction);\r\n\r\n  style?: DrawingStyle | ((annotation: I) => DrawingStyle);\r\n\r\n  theme?: Theme;\r\n\r\n}\r\n\r\nexport type DrawingMode = 'click' | 'drag';\r\n\r\nexport type Theme = 'dark' | 'light' | 'auto';\r\n\r\nexport const fillDefaults = <I extends ImageAnnotation = ImageAnnotation, E extends unknown = ImageAnnotation> (\r\n  opts: AnnotoriousOpts<I, E>,\r\n  defaults: AnnotoriousOpts<I, E>\r\n): AnnotoriousOpts<I, E> => {\r\n\r\n  return {\r\n    ...opts,\r\n    drawingEnabled: opts.drawingEnabled === undefined ? defaults.drawingEnabled : opts.drawingEnabled,\r\n    drawingMode: opts.drawingMode || defaults.drawingMode,\r\n    pointerSelectAction: opts.pointerSelectAction || defaults.pointerSelectAction,\r\n    theme: opts.theme || defaults.theme\r\n  };\r\n\r\n};\r\n\r\n\r\n\r\n\r\n","import type { Annotation, UndoStack } from '@annotorious/core';\r\n\r\nconst isMac = navigator.userAgent.indexOf('Mac OS X') !== -1;\r\n\r\nexport const initKeyboardCommands = <T extends Annotation>(\r\n  undoStack: UndoStack<T>,\r\n  container?: Element \r\n) => {\r\n\r\n  const el = container || document;\r\n\r\n  const onWinKeyDown = (event: KeyboardEvent) => {\r\n    if (event.key === 'Z' && event.ctrlKey) {\r\n      undoStack.undo();\r\n    } else if (event.key === 'Y' && event.ctrlKey) {\r\n      undoStack.redo()\r\n    }\r\n  };\r\n\r\n  const onMacKeyDown = (event: KeyboardEvent) => {\r\n    if (event.key === 'z' && event.metaKey) {\r\n      if (event.shiftKey) {\r\n        undoStack.redo()\r\n      } else {\r\n        undoStack.undo();\r\n      }\r\n    }\r\n  }\r\n\r\n  const destroy = () => {\r\n    if (isMac) {\r\n      el.removeEventListener('keydown', onMacKeyDown);\r\n    } else {\r\n      el.removeEventListener('keydown', onWinKeyDown);\r\n    }\r\n  }\r\n\r\n  if (isMac)\r\n    el.addEventListener('keydown', onMacKeyDown);\r\n  else\r\n    el.addEventListener('keydown', onWinKeyDown);\r\n\r\n  return { \r\n    destroy\r\n  }\r\n}\r\n","import type { SvelteComponent } from 'svelte';\r\nimport { PointerSelectAction, type Annotator, type DrawingStyle, type Filter, type User } from '@annotorious/core';\r\nimport { createAnonymousGuest, createBaseAnnotator, createLifecyleObserver, createUndoStack } from '@annotorious/core';\r\nimport { registerEditor } from './annotation/editors';\r\nimport { getTool, registerTool, listDrawingTools, type DrawingTool } from './annotation/tools';\r\nimport { SVGAnnotationLayer } from './annotation';\r\nimport type { DrawingToolOpts, SVGAnnotationLayerPointerEvent } from './annotation';\r\nimport type { ImageAnnotation, ShapeType } from './model';\r\nimport { createSvelteImageAnnotatorState } from './state';\r\nimport { setTheme as _setTheme } from './themes';\r\nimport { fillDefaults, type Theme } from './AnnotoriousOpts';\r\nimport type { AnnotoriousOpts } from './AnnotoriousOpts';\r\nimport { initKeyboardCommands } from './keyboardCommands';\r\n\r\nimport './Annotorious.css';\r\nimport './themes/dark/index.css';\r\nimport './themes/light/index.css';\r\n\r\nexport interface ImageAnnotator<E extends unknown = ImageAnnotation> extends Annotator<ImageAnnotation, E> { \r\n\r\n  listDrawingTools(): string[];\r\n\r\n  registerDrawingTool(name: string, tool: typeof SvelteComponent, opts?: DrawingToolOpts): void;\r\n\r\n  registerShapeEditor(shapeType: ShapeType, editor: typeof SvelteComponent): void;\r\n\r\n  setDrawingTool(name: DrawingTool): void; \r\n\r\n  setDrawingEnabled(enabled: boolean): void;\r\n\r\n  setTheme(theme: Theme): void;\r\n\r\n}\r\n\r\nexport const createImageAnnotator = <E extends unknown = ImageAnnotation>(\r\n  image: string | HTMLImageElement | HTMLCanvasElement, \r\n  options: AnnotoriousOpts<ImageAnnotation, E> = {}\r\n): ImageAnnotator<E> => {\r\n\r\n  if (!image)\r\n    throw 'Missing argument: image';\r\n\r\n  const img = (typeof image === 'string' ? \r\n    document.getElementById(image) : image) as HTMLImageElement | HTMLCanvasElement;\r\n\r\n  const opts = fillDefaults<ImageAnnotation, E>(options, {\r\n    drawingEnabled: true,\r\n    drawingMode: 'drag',\r\n    pointerSelectAction: PointerSelectAction.EDIT,\r\n    theme: 'light'\r\n  });\r\n\r\n  const state = createSvelteImageAnnotatorState(opts);\r\n\r\n  const { selection, store } = state;\r\n\r\n  const undoStack = createUndoStack(store);\r\n\r\n  const lifecycle = createLifecyleObserver<ImageAnnotation, E>(\r\n    state, undoStack, opts.adapter, opts.autoSave\r\n  );\r\n\r\n  // We'll wrap the image in a container DIV.\r\n  const container = document.createElement('DIV');\r\n  container.style.position = 'relative';\r\n  container.style.display = 'inline-block';\r\n\r\n  // Wrapper div has unwanted margin at the bottom otherwise!\r\n  img.style.display = 'block';\r\n\r\n  img.parentNode.insertBefore(container, img);\r\n  container.appendChild(img);\r\n\r\n  const keyboardCommands = initKeyboardCommands(undoStack);\r\n\r\n  let currentUser: User = createAnonymousGuest();\r\n\r\n  _setTheme(img, container, opts.theme);\r\n\r\n  const annotationLayer = new SVGAnnotationLayer({\r\n    target: container,\r\n    props: { \r\n      drawingEnabled: opts.drawingEnabled, \r\n      image: img, \r\n      preferredDrawingMode: opts.drawingMode,\r\n      state, \r\n      style: opts.style, \r\n      user: currentUser\r\n    }\r\n  });\r\n\r\n  annotationLayer.$on('click', (evt: CustomEvent<SVGAnnotationLayerPointerEvent>) => {\r\n    const { originalEvent, annotation } = evt.detail;\r\n    if (annotation)\r\n      selection.clickSelect(annotation.id, originalEvent);\r\n    else if (!selection.isEmpty())\r\n      selection.clear();\r\n  });\r\n\r\n  /*************************/\r\n  /*      External API     */\r\n  /******++++++*************/\r\n\r\n  // Most of the external API functions are covered in the base annotator\r\n  const base = createBaseAnnotator<ImageAnnotation, E>(state, undoStack, opts.adapter);\r\n\r\n  const destroy = () => {\r\n    // Destroy Svelte annotation layer\r\n    annotationLayer.$destroy();\r\n\r\n    // Unwrap the image\r\n    container.parentNode.insertBefore(img, container);\r\n    container.parentNode.removeChild(container);\r\n\r\n    // Other cleanup actions\r\n    keyboardCommands.destroy();\r\n    undoStack.destroy();\r\n  }\r\n\r\n  const getUser = () => currentUser;\r\n\r\n  const registerDrawingTool = (name: string, tool: typeof SvelteComponent, opts?: DrawingToolOpts) =>\r\n    registerTool(name, tool, opts);\r\n\r\n  const registerShapeEditor = (shapeType: ShapeType, editor: typeof SvelteComponent) =>\r\n    registerEditor(shapeType, editor);\r\n\r\n  const setDrawingTool = (name: DrawingTool) => {\r\n    // Validate that the tool exists\r\n    const toolSpec = getTool(name)\r\n    if (!toolSpec) throw `No drawing tool named ${name}`\r\n    // @ts-ignore\r\n    annotationLayer.$set({ toolName: name })\r\n  }\r\n\r\n  const setDrawingEnabled = (enabled: boolean) =>\r\n    annotationLayer.$set({ drawingEnabled: enabled });\r\n  \r\n  const setFilter = (filter: Filter) => {\r\n    console.warn('Filter not implemented yet');\r\n  }\r\n\r\n  const setStyle = (style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) | undefined) =>\r\n    annotationLayer.$set({ style });\r\n\r\n  const setTheme = (theme: Theme) => _setTheme(img, container, theme);\r\n  \r\n  const setUser = (user: User) => {\r\n    currentUser = user;\r\n    annotationLayer.$set({ user });\r\n  }\r\n\r\n  return {\r\n    ...base,\r\n    destroy,\r\n    getUser,\r\n    listDrawingTools,\r\n    on: lifecycle.on,\r\n    off: lifecycle.off,\r\n    registerDrawingTool,\r\n    registerShapeEditor,\r\n    setDrawingEnabled,\r\n    setDrawingTool,\r\n    setFilter,\r\n    setStyle,\r\n    setTheme,\r\n    setUser,\r\n    state\r\n  }\r\n\r\n}\r\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","run_all","fns","is_function","thing","safe_not_equal","a","b","is_empty","obj","subscribe","store","callbacks","unsub","component_subscribe","component","callback","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","get_slot_changes","dirty","lets","merged","len","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","get_all_dirty_from_scope","length","append","target","node","insert","anchor","detach","destroy_each","iterations","detaching","svg_element","name","text","data","space","empty","listen","event","handler","options","attr","attribute","value","children","element","toggle_class","toggle","custom_event","type","detail","bubbles","cancelable","e","current_component","set_current_component","get_current_component","onMount","createEventDispatcher","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","flush","add_render_callback","seen_callbacks","flushidx","saved_component","update","$$","flush_render_callbacks","filtered","targets","c","outroing","outros","group_outros","check_outros","transition_in","block","local","transition_out","create_component","mount_component","customElement","fragment","after_update","new_on_destroy","destroy_component","make_dirty","init","instance","create_fragment","not_equal","props","append_styles","parent_component","ready","ret","rest","nodes","SvelteComponent","index","$$props","ShapeType","Utils","registerShapeUtil","util","computeArea","shape","intersects","x","y","boundsFromPoints","points","minX","minY","maxX","maxY","EllipseUtil","cx","cy","rx","ry","rot","cos","sin","dx","dy","tdx","tdy","PolygonUtil","polygon","area","j","inside","xi","yi","xj","yj","RectangleUtil","rect","FreehandUtil","freehand","LineUtil","line","x1","x2","y1","y2","distanceToStart","distanceToEnd","lineLength","totalDistance","parseFragmentSelector","fragmentOrSelector","invertY","regex","matches","_","prefix","unit","d","w","h","serializeFragmentSelector","geometry","SVG_NAMESPACE","sanitize","doc","cleanEl","el","scripts","insertSVGNamespace","originalDoc","namespaced","getSqDist","p1","p2","getSqSegDist","p","t","simplifyRadialDist","sqTolerance","prevPoint","newPoints","point","simplifyDPStep","first","last","simplified","maxSqDist","sqDist","simplifyDouglasPeucker","simplify","tolerance","highestQuality","getSvgPathFromStroke","stroke","acc","x0","y0","arr","getSmoothPathData","simplifyPath","parseSVGXML","isPrefixDeclared","isDefaultNamespaceSVG","parseSVGFreehand","str","pathRegex","match","parseSVGPolygon","parseSVGEllipse","bounds","parseSVGLine","parseSVGSelector","valueOrSelector","serializeSVGSelector","geom","xy","getRandomValues","rnds8","rng","byteToHex","unsafeStringify","offset","native","v4","buf","rnds","Y","B","n","$","W","u","U","be","q","V","ve","s","f","A","G","L","T","R","Z","K","ee","te","M","O","oe","o","se","ie","ye","r","l","v","C","m","E","g","S","I","Ue","P","de","Le","Se","Te","N","re","De","ae","ce","le","ue","Re","fe","pe","xe","Be","W3CImageFormat","source","serialized","parseW3CImageAnnotation","annotation","serializeW3CImageAnnotation","annotationId","uuidv4","creator","created","updatedBy","updated","body","bodies","parseW3CBodies","w3cSelector","selector","parseW3CUser","w3CSelector","serializeW3CBodies","rect_x_value","rect_y_value","Handle","each_value","polygon0","polygon0_points_value","func","polygon1","polygon1_points_value","func_1","grab","computedStyle","transform","viewportScale","editor","handle","delta","idx","$$invalidate","handleSize","rect0","rect0_x_value","rect0_y_value","rect0_width_value","rect0_height_value","rect1","rect1_x_value","rect1_y_value","rect1_width_value","rect1_height_value","rect2","rect2_x_value","rect2_y_value","rect2_width_value","rect3","rect3_x_value","rect3_y_value","rect3_height_value","rect4","rect4_x_value","rect4_y_value","rect4_width_value","rect5","rect5_x_value","rect5_y_value","rect5_height_value","circle0","circle0_cx_value","circle0_cy_value","circle0_r_value","circle1","circle1_cx_value","circle1_cy_value","circle1_r_value","circle2","circle2_cx_value","circle2_cy_value","circle2_r_value","circle3","circle3_cx_value","circle3_cy_value","circle3_r_value","rectangle","initialBounds","ellipse0","ellipse0_cx_value","ellipse0_cy_value","ellipse0_rx_value","ellipse0_ry_value","ellipse1","ellipse1_cx_value","ellipse1_cy_value","ellipse1_rx_value","ellipse1_ry_value","ellipse","computeStyle","style","staticProps","computed","fill","fillOpacity","css","staticOpacity","path","pathData","line0","line0_x__value","line0_y__value","line0_x__value_1","line0_y__value_1","line1","line1_x__value","line1_y__value","line1_x__value_1","line1_y__value_1","defs","marker","REGISTERED","RectangleEditor","PolygonEditor","EllipseEditor","FreehandEditor","LineEditor","getEditor","registerEditor","shapeType","dispatch","grabbedHandle","origin","initialShape","onGrab","evt","onPointerMove","onRelease","editorComponent","drawingMode","tool","toolComponent","svg","cleanup","addEventListener","capture","create_if_block","lastPointerDown","onPointerDown","onPointerUp","timeDifference","stopDrawing","distance","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","setSize","image","naturalWidth","naturalHeight","width","height","img","enableResponsive","resizeObserver","svgBounds","scale","isTouch","child_ctx","create_if_block_1","get_if_ctx","CLOSE_DISTANCE","cursor","isClosable","timeStamp","offsetX","offsetY","onDblClick","container","isShiftPressed","isCtrlPressed","lastMoveEvent","updateShape","maybeEvent","mw","mh","onKeyDown","onKeyUp","$$value","isDrawing","RubberbandRectangle","RubberbandPolygon","RubberbandEllipse","RubberbandFreehand","RubberbandLine","listDrawingTools","getTool","registerTool","opts","g_data_id_value","IdentityTransform","createSVGTransform","bbox","pt","MAX_CLICK_DURATION","addEventListeners","getSVGPoint","left","top","previous_key","line_changes","freehand_changes","polygon_changes","rectangle_changes","ellipse_changes","show_if","each_blocks","editormount_changes","g0","g1","drawingEnabled","preferredDrawingMode","state","toolName","user","drawingEl","svgEl","selection","storeObserver","editableAnnotations","trackSelection","selected","editableIds","editable","id","change","onSelectionCreated","onChangeSelected","GRACE_PERIOD","isUpdate","_a","isEditable","$selection","quickselect","right","compare","quickselectStep","defaultCompare","z","sd","newLeft","newRight","swap","tmp","RBush","maxEntries","result","toBBox","nodesToSearch","child","childBBox","contains","tmpNode","item","createNode","equalsFn","indexes","parent","goingUp","findItem","items","calcBBox","N2","N1","multiSelect","right2","right3","level","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","extend","splitIndex","newNode","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","destNode","stack","mid","createSpatialTree","tree","all","clear","remove","exactHits","replace","indexedTargets","previous","createImageAnnotatorState","createStore","createSelectionState","hover","createHoverState","viewport","createViewportState","changes","oldValue","newValue","createSvelteImageAnnotatorState","toSvelteStore","sampleBrightness","imageOrCanvas","canvas","context","totalBrightness","pixelData","brightness","detectTheme","theme","setTheme","fillDefaults","defaults","isMac","initKeyboardCommands","undoStack","onWinKeyDown","onMacKeyDown","destroy","createImageAnnotator","PointerSelectAction","createUndoStack","lifecycle","createLifecyleObserver","keyboardCommands","currentUser","createAnonymousGuest","_setTheme","annotationLayer","SVGAnnotationLayer","originalEvent","base","createBaseAnnotator","getUser","registerDrawingTool","registerShapeEditor","setDrawingTool","setDrawingEnabled","enabled","setFilter","filter","setStyle","setUser"],"mappings":"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","x_google_ignoreList":[0,13,14,15,16,17,32,48,49]}